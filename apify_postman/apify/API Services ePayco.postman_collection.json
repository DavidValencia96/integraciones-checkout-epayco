{
	"info": {
		"_postman_id": "f23d1954-f732-4ede-a6a6-17c457b71d35",
		"name": "API Services ePayco",
		"description": "En este documento podrá encontrar toda la información necesaria para consumir los servicios de Apiservices ePayco. Recuerde que debe ser un usuario registrado de ePayco para acceder a este servicio, en caso de no serlo lo invitamos a registrarse.\n\n## Certificados Digitales (Opcional)\n\nSi decide usar mutual tls para las peticiones es necesario enviar un certificado digital el cual debe tener las siguientes caracteristicas:\n\n## características\n\n*Certificado Digital 2048 bits RSA\n\n*Se recibe certificado autofirmado: Si.\n\n## Variables curl envio de certificado.\n\nCURLOPT_SSLCERT => 'ruta_absoluta.crt'\n\nCURLOPT_SSLKEY =>  'ruta_absoluta.key'\n\nCURLOPT_SSLKEYPASSWD => 'clave para abrir el certificado'.\n\n## Notas\n\nSi la petición no envía el certificado digital se rechazará inmediatamente solicitando el certificado.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14344223"
	},
	"item": [
		{
			"name": "ApiFy ePayco",
			"item": [
				{
					"name": "Login",
					"item": [
						{
							"name": "Solicitar Jwt Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
											"\r",
											"if (responseCode.code == 200) {\r",
											"\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"    pm.globals.set(\"token_apify\", jsonData.token);\r",
											"    postman.setEnvironmentVariable(\"token_apify\", jsonData.token);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "d42ae82ca25bd9b0f3877a574183c4d7",
											"type": "string"
										},
										{
											"key": "password",
											"value": "7eba53ab76dbb2c39a7435a79d27b6f8",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "EntityClientId",
										"value": "{{P_CUST_ID_CLIENTE}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": " Basic BASE64({{PUBLIC_KEY}}:{{PRIVATE_KEY}})",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url_apify}}/login",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"login"
									]
								},
								"description": "El proceso de login requiere hacer uso de este Endpoint, donde podrá generar el **token_apify** por medio de una autenticación Basic en los Headers. La solicitud debe contener las siguientes variables:  **PUBLIC_KEY** y **PRIVATE_KEY**.\n\n> Estas variables usted podrá obtenerlas accediendo a nuestro [dashboard](https://dashboard.epayco.co) en la sección de **integraciones -> llaves api**) codificadas en base64.\n \n\n## Login con credenciales de cliente registrador (cliente padre) \n\nUna de las opciones adicionales de este servicio es la de permitir autenticarse con las credenciales del cliente registrador, para esto debe enviar en la cabecera la variable **EntityClientId** cuyo valor es **P_CUST_ID_CLIENTE**  codificado en base64 esta variable puede obtenerla en en [dashboard](https://dashboard.epayco.co) en la sección **integraciones -> llaves secretas**"
							},
							"response": [
								{
									"name": "Respuesta exitosa ejemplo",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "EntityClientId",
												"value": "{{P_CUST_ID_CLIENTE}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url_apify}}/login",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGlmeWVQYXljb0pXVCIsInN1YiI6OTM3NSwiaWF0IjoxNTc0ODIxNzgwLCJleHAiOjE1NzQ4MjUzODB9.khAPsmACLeXNvHc12QePhjXc8qZhDIOJTwPx6UUYYMg\"\n}"
								},
								{
									"name": "Respuesta fallida campo requerido",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "EntityClientId",
												"value": "{{P_CUST_ID_CLIENTE}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url_apify}}/login",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"error\":\"public_key is required.\"\n}"
								},
								{
									"name": "Respuesta fallida cliente no existe",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "EntityClientId",
												"value": "{{P_CUST_ID_CLIENTE}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url_apify}}/login",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"error\":\"Client does not exist.\"\n}"
								}
							]
						},
						{
							"name": "Solicitar Jwt Login email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
											"\r",
											"if (responseCode.code == 200) {\r",
											"\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    postman.setEnvironmentVariable(\"token_apify\", jsonData.token);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "david.valencia@payco.co",
											"type": "string"
										},
										{
											"key": "password",
											"value": "1017237749.Juan",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "public_key",
										"type": "text",
										"value": "PUBLIC_KEY"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url_apify}}/login/mail",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"login",
										"mail"
									]
								},
								"description": "En este proceso de login se genera el **token_apify** empleando la autenticación Basic en los Headers, esta solicitud debe contener las variables de usuario y contraseña que se emplean para loguearse en el [dashboard](https://dashboard.epayco.co) de **ePayco** codificadas en base64.\n\n\nAdicionalmente, esta opción le permite loguearse bajo la entidad que lo registró en la plataforma para este caso debe enviar como parámetro opcional en los **Headers**  la variable public_key cuyo valor corresponde a la PUBLIC_KEY (usted podrá obtener esta variable accediendo a nuestro [dashboard](https://dashboard.epayco.co) en la sección de **integraciones -> llaves api**) si este parámetro no es enviado se autenticará directamente como un cliente bajo la entidad de **ePayco**.\n\n\n## Login con credenciales de cliente registrador (cliente padre) \n\nPara autenticarse con las credenciales del cliente registrador en la Api debe enviar en la cabecera la variable **EntityClientId** cuyo valor es **P_CUST_ID_CLIENTE**  codificado en base64 esta variable puede obtenerla en en [dashboard](https://dashboard.epayco.co) en **integraciones -> llaves secretas**"
							},
							"response": [
								{
									"name": "Respuesta exitosa ejemplo Copy",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "EntityClientId",
												"value": "{{P_CUST_ID_CLIENTE}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url_apify}}/login",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhcGlmeWVQYXljb0pXVCIsInN1YiI6OTM3NSwiaWF0IjoxNTc0ODIxNzgwLCJleHAiOjE1NzQ4MjUzODB9.khAPsmACLeXNvHc12QePhjXc8qZhDIOJTwPx6UUYYMg\"\n}"
								},
								{
									"name": "Respuesta fallida campo requerido Copy",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "EntityClientId",
												"value": "{{P_CUST_ID_CLIENTE}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url_apify}}/login",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n  \"error\": \"email is required.\"\n}"
								},
								{
									"name": "Respuesta fallida cliente no existe",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "EntityClientId",
												"value": "{{P_CUST_ID_CLIENTE}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url_apify}}/login",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"error\":\"Client does not exist.\"\n}"
								}
							]
						}
					],
					"description": "En esta sección de **Login** se encuentran los servicios necesarios para loguearse satisfactoriamente en la **APIFY**.\n\nTenemos a su disposición diferentes formas de loguarse, las cuales puede emplear de acuerdo a la que se adapte a la configuración de su cuenta.",
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Clientes",
					"item": [
						{
							"name": "Listas restrictivas",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {jwt_token}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"docNumber\":1017237749,\n\"docType\":\"CC\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/validation/restrictive/list",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"validation",
										"restrictive",
										"list"
									]
								},
								"description": "En este endpoint usted podrá validar si un documento esta en listas restrictivas.\n\n## ¿Cómo consultar?\n\n> Usted debe enviar los siguientes parámetros como obligatorios:\n\n|Parámetro|Descripción|\n|----------|--------------------------|\n|**docType**| `string(3)` `obligatorio` Tipo de documento del cliente. Ejemplo CC o NIT.|\n|**docNumber**| `string(3)` `obligatorio` Número de documento de identificación del cliente.|"
							},
							"response": []
						},
						{
							"name": "Registro cliente",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userType\": \"Comercio\",\n    \"companyName\": \"Responsabilidad fiscal 1\",\n    \"website\": \"N/A\",\n    \"docType\": \"cc\",\n    \"docNumber\": \"12345678901\",\n    \"digit\": 6,\n    \"category\": 8,\n    \"subcategory\": 92,\n    \"country\": \"CO\",\n    \"department\": 4,\n    \"city\": \"Bogotá\",\n    \"address\": \"CL xxxxxxxxx\",\n    \"mobilePhone\": \"3150000000\",\n    \"firstNames\": \"Responsabilidad\",\n    \"lastNames\": \"Fiscal\",\n    \"mail\": \"responsabilidadfiscal1@yopmail.com\",\n    \"password\": \"test@test\",\n    \"confirmPass\": \"test@test\",\n    \"gateway\": true\n}"
								},
								"url": {
									"raw": "{{url_apify}}/client/create",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"client",
										"create"
									]
								},
								"description": "## ¿Cómo crear un cliente?\n\nPara la creación de los clientes de forma satisfactoria es necesario primeramente tener adquirido un plan con **ePayco**. \n\n> Este servicio de creación de clientes sólo está disponible para usuarios que tienen adquirido un plan en la plataforma de ePayco, por lo cual el funcionamiento correcto de este servicio depende de la activación y control del mismo.\n\nDe esta manera, para hacer la solicitud correctamente debe enviar como mínimo los parámetros obligatorios, si lo desea puede completar la información del mismo con los parámetros opcionales.\n\n## Parámetros obligatorios \n\n|Parámetro| Descripción |\n|---------------|--------------------|\n|**docType**| `string(3)` `obligatorio` Tipo de documento del cliente. Ejemplo: cc ó nit|\n|**docNumber**| `string(20)` `obligatorio` Número de documento de identificación del cliente|\n|**firstNames**|  `string(50)` `obligatorio` Nombres del cliente.|\n|**lastNames**|  `string(50)` `obligatorio` Apellidos del cliente.|\n|**expeditionDate**|  `string(10)` `obligatorio` Fecha de expedición del documento.|\n|**mail**|  `string(255)` `obligatorio` Correo electrónico del cliente |\n|**mobilePhone**|  `string(20)` `obligatorio` Número de celular del cliente |\n|**companyName**|  `string(255)` `obligatorio` Nombre de la compañía o proyecto del cliente.|\n|**country**|  `string(2)` `obligatorio` País del cliente en modo ISO. Ejemplo: Colombia, código ISO: CO.|\n|**userType** | `string(10)` `obligatorio` tipo de registro del cliente (persona o comercio).|\n\n> Si el parámetro tipo de documento del cliente **docType** corresponde con el valor NIT es necesario enviar como parámetro obligatorio el dígito de verificación del documento\n\n|Parámetro|  Descripción |\n|---------|-----------------------------|\n|**digit**|`integer(1)` `obligatorio` Dígito de verificación del documento del cliente (Este parámetro sólo deber ser enviado si el **docType** => **nit**.|\n\n## Parámetros Opcionales\n\n> Estos campos opcionales son requeridos si desea que el cliente pueda recibir más de $200,000 COP.\n\n- Profesiones \n\n|Parámetro| Descripción |\n|---------|-----------------------------|\n|**profession**| `string(100)` `opcional`  Profesión del cliente se debe emplear el endpoint  [professions](https://api.epayco.co/#c86b80f4-f9d6-453f-9aa7-7d4cf07ac7c3/professions) donde obtendrá una lista desplegable de los nombres de las profesiones permitidas.|\n\n- Tipos de comercio\n\n|Parámetro| Descripción |\n|------------------|--------------------|\n|**merchantType**| `integer(11)` `opcional` Para los valores de este parámetro se debe hacer uso del enpoint [merchantTypes](https://api.epayco.co/#4dfce281-a97a-476f-bac9-25dc93b5ee1c) donde recibirá una lista **id => tipo**, como valor de esta opción se debe enviar el **id**.|\n\n- Departamentos y ciudades\n\n|Parámetro| Descripción |\n|------------------|--------------------|\n|**department**| `integer(2)` `opcional` Este campo corresponde al departamento al que pertenece el cliente, el valor que se debe fijar corresponde al id del departamento (este **id** se obtiene con el endpoint [departamentos](https://api.epayco.co/#aea732ab-eec0-4488-85b9-45616776b5b4)|\n|**city** | `integer(2)` `opcional` Integer (2) Se debe enviar el Id  de la ciudad  debe hacer uso del  endpoint [ciudades](https://api.epayco.co/#cc83e222-7b3b-4c80-b261-599a43df4ac1)  donde obtendrá una lista desplegable **Id => ciudad**. |\n\n- Sitio Web y redes Sociales\n\n|Parámetro| Descripción |\n|------------------|--------------------|\n|**website**| `string(255)` `opcional` Url del sitio web del comercio |\n|**socialNetworks** | `Array` `opcional` se debe enviar un Array de objetos con las propiedades **id => url** de las redes sociales, para obtener los id consultar el endpoint  [socialNetworks](https://api.epayco.co/#2ff73b23-349b-45ca-9735-74f65022d8bc). Ejemplo: [{id:1,url:facebook.com/{merchant},{id:2,url:instagram.com/{merchant}] |\n\n- Parámetro de direcciones\n\n|Parámetro| Descripción |\n|-----------------|--------------------|\n|**address**|`string(255)` `opcional`  Compuesto de una nomenclatura específica, este parámetro hace referencia a la dirección del cliente.|\n\n> El valor de la dirección (**address**) se compone de varios elementos que corresponden a unos tipos de nomenclatura (para obtener los tipos de nomenclatura consultar el endpoint [nomenclatura](https://api.epayco.co/#8e4bc984-c46c-4cf6-b8b2-3c73df913345).\n\n\n> Para el tipo de propiedad (Casa, Apartamento, Barrio y otros) para obtener el tipo de propiedad consultar el siguiente endpoint [propiedades](https://api.epayco.co/#78ec9aa5-0829-4b79-a22c-8438870fd590).\n\n¿Cómo enviar los campos de la dirección?\n\n> Tener en cuenta enviar por separado cada uno de los campos que componen la dirección de la siguiente manera:\n\n|Parámetro | Descripción|\n|-------------------|------------------|\n|**addressNomenclatureType**| `Integer(2)` `opcional` Id del tipo de nomenclatura|\n|**addressNomenclature**|`string(11)` `opcional`  número o nombre del tipo de nomenclatura.|\n|**addressNumberOne**| `string(11)` `opcional` Número de la puerta de la dirección.|\n|**addessNumberTwo**|`string(11)` `opcional` Número 2 de la puerta de la dirección.|\n|**averageSell**| `integer(11)` `opcional` Promedio de ventas.|\n\n> Para el parámetro de la categoría (**category**) se debe enviar de la siguiente forma, consultando el endpoint para obtener el id.\n\n|Parámetro  | Descripción |\n|-------------------|--------------------|\n|**category**| `integer(11)` `opcional` Id de la categoría, se debe obtener una lista del  endpoint [categorías](https://api.epayco.co/#c162567f-558b-4389-9e03-69cdcb1619b5)|\n|**subcategory**|`integer(11)` `opcional` Id de la subcategoría, se debe obtener una lista del endpoint [subcategorías](https://api.epayco.co/#cd1fa0f0-fd30-4f14-83a6-2bd3dcde71b7).|\n\n- Campos opcionales para la validación de la cuenta.\n\n|Parámetro | Descripción |\n|-------------------|--------------------|\n|**addressPropertyType**| `integer(11)` `opcional` Tipo de propiedad, se obtiene de una lista desplegable en el endpoint [propiedades](https://api.epayco.co/#78ec9aa5-0829-4b79-a22c-8438870fd590).|\n|**addressPropertyTypeDescription** |`string(50)` `opcional` Detalle de tipo de propiedad (Nombre del edificio unidad, etc).|\n|**addressDescription**|`string(255)` `opcional` Detalle de la dirección, ejemplo: (Edificio rojo, alfrente de supermercado xxx).|\n|**descriptionSell**|`string(600)` `opcional` Descripción de que comercializa o vende el comercio.|\n\n> Para el tipo de cuenta es necesario enviar el parámetro que arroje como resultado el request que se describe a continuación.\n\n|Parámetro | Descripción |\n|--------------------|--------------------|\n|**bankAccountType**| `string(3)` `opcional` Se obtiene de una lista desplegable en el siguiente endpoint [tipoCuentas](https://api.epayco.co/#83474757-2b0e-4b8c-bf28-89f0a43e35a4).|\n|**bankAccountNumber**|`string(16)` `opcional` Número de cuenta bancaria del cliente.|\n\n- Campos opcionales para la creación del subdominio para el catalogo.\n\n|Parámetro | Descripción |\n|--------------------|--------------------|\n|**subdomain**| `string(255)` `opcional` Dominio para el cliente.|\n\n- Campos opcionales para crear el cliente con contraseña.\n\n|Parámetro | Descripción |\n|------------------|--------------------|\n|**password**|`string(255)` `opcional` Debe ser una contraseña con al menos carácter especial, número y mínimo 8 caracteres.|\n\n>Si la contraseña no se envía, el sistema automáticamente asignará el número de documento como contraseña. \n\n**En el Header *Authorization*  debe ir la palabra *Bearer* acompañada del *token* obtenido en el endpoint */login*.**"
							},
							"response": [
								{
									"name": "Respuesta exitosa ejemplo Copy",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "EntityClientId",
												"value": "{{P_CUST_ID_CLIENTE}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url_apify}}/login",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": " {\n      \"success\": true,\n      \"titleResponse\": \"Register success\",\n      \"textResponse\": \"Thanks for you register.\",\n      \"lastAction\": \"pre-register\",\n      \"data\": {\n\t     \"client\": {\n\t     \"id_client\": 1231,\n\t     \"firstNames\": null,\n\t     \"lastNames\": null,\n\t     \"socialName\": \"PRUEBAS API SERVICES\",\n\t     \"companyName\": \"PRUEBAS API SERVICES\",\n\t     \"mail\": \"pruebaspiservices@gmail.com\",\n\t     \"mobilePhone\": \"3024133765\"\n        },\n\t\"balance\": {\n\t     \"available\": 0,\n\t     \"frozen\": 0,\n\t     \"reserved\": 0,\n\t     \"total\": 0\n\t },\n\t\"api_keys\": {\n\t\t \"public_key\": \"e57b2f1db889fb375b90e31c41f4a636\",\n\t\t \"private_key\": \"6b0219f349951fe229b5b265e86d7259\"\n\t\t}\n\t}\t  \n}"
								},
								{
									"name": "Respuesta fallida cliente ya existe",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "EntityClientId",
												"value": "{{P_CUST_ID_CLIENTE}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url_apify}}/login",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n  \"success\": false,\n  \"titleResponse\": \"Client registered\",\n  \"textResponse\": \"Change the email, this email is already registered.\",\n  \"lastAction\": \"validated-email\",\n  \"data\": []\n}"
								}
							]
						},
						{
							"name": "Eliminar cliente",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {jwt_token}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"clientIdDelete\": 100000,\n    \"emailDelete\": \"ejemplo@email.com\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/client/delete",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"client",
										"delete"
									]
								},
								"description": "En este endpoint usted podrá eliminar permanentemente un cliente en **ePayco**.\n\n## ¿Cómo eliminar un cliente?\n\n> Usted debe enviar los siguientes parámetros como obligatorios:\n\n|Parámetro | Descripción|\n|-------------------|-------------------|\n|**clientIdDelete**| `Integer(11)` `opcional` Id de cliente\n.|\n|**emailDelete**| `string(255)` `opcional` Email del cliente.|\n\n> En el Header *Authorization*  debe ir la palabra *Bearer* acompañada del *token* obtenido en el endpoint */login*.**"
							},
							"response": [
								{
									"name": "Respuesta exitosa ejemplo Copy 2",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "EntityClientId",
												"value": "{{P_CUST_ID_CLIENTE}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url_apify}}/login",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Successful Delete client successful\",\n    \"textResponse\": \"successful Delete client successful\",\n    \"lastAction\": \"delete_client_Delete client successful\",\n    \"data\": {\n        \t\n    }\n}"
								},
								{
									"name": "Respuesta fallida cliente no existe",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "EntityClientId",
												"value": "{{P_CUST_ID_CLIENTE}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url_apify}}/login",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Successful Delete client successful\",\n    \"textResponse\": \"successful Delete client successful\",\n    \"lastAction\": \"delete_client_Delete client successful\",\n    \"data\": {\n        \t\n    }\n}"
								},
								{
									"name": "Respuesta exitosa ejemplo Copy 3",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "EntityClientId",
												"value": "{{P_CUST_ID_CLIENTE}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url_apify}}/login",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"The client or email does not match and the client was not found to be deleted\",\n    \"textResponse\": \"The client or email does not match and the client was not found to be deleted\",\n    \"lastAction\": \"validClientExist\",\n    \"data\": {\n        \"error\": \"The client or email does not match and the client was not found to be deleted\"\n    }\n}"
								}
							]
						},
						{
							"name": "Perfil obtener",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {jwt_token}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"url": {
									"raw": "{{url_apify}}/client/edit",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"client",
										"edit"
									]
								},
								"description": "Por medio del uso de este endpoint puede obtener los datos que tiene registrado el cliente. De esta manera podrá editar la información del mismo si así lo desea."
							},
							"response": [
								{
									"name": "Perfil editar respuesta correcta",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {jwt_token}",
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
											}
										],
										"url": {
											"raw": "{{url_apify}}/client/edit",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"client",
												"edit"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Successful consult\",\n    \"textResponse\": \"successful consult\",\n    \"lastAction\": \"successful consult\",\n    \"data\": {\n        \"companyName\": \"Colombia Redes Web S.A.S\",\n        \"mobilePhone\": \"xxxxxx\",\n        \"cellPhone\": \"xxxxxxxxxx\",\n        \"socialName\": \"COLOMBIAREDES.COM\",\n        \"indicativeCity\": 4,\n        \"indicativeCountry\": 57,\n        \"logo\": \"https://xxxxxxxxxxxxxxxxx.jpeg\",\n        \"emailTransaction\": \"prueba@hotmail.com\",\n        \"domain\": \"https://catalogoPrueba3.epayco.me/catalogo\"\n    }\n}"
								}
							]
						},
						{
							"name": "Perfil update",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {jwt_token}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"_mobilePhone\":\"2224242\",\n    \"_cellPhone\":\"3104618980\",\n    \"_indicativeCountry\":57,\n    \"_indicativeCity\":4,\n    \"companyName\":\"Prueba\",\n    \"socialName\":\"epayco\",\n    \"emailTransaction\":\"prueba-epayco@epayco.com\",\n    \"domain\":\"PruebaEpayco\",\n    \"type\":1,\n    \"_logo\":\"base_64\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/client/update",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"client",
										"update"
									]
								},
								"description": "Si debe actualizar los datos de un cliente con el uso del siguiente endpoint podrá realizar este tipo de acción.\n\n## ¿Cómo actualizar el cliente?\n\n> Para actualizar un cliente, se debe realizar la solicitud como se indicará con  los siguientes parámetros como opcionales:\n\n|Parámetro | Descripción |\n|-------------------|--------------------|\n|**mobilePhone**|`string(50)` `opcional` Teléfono del cliente.|\n|**cellPhone**|`string(50)` `opcional` Celular del cliente.|\n|**indicativeCountry**| `string` `opcional` Indicativo pais del cliente.|\n|**indicativeCity**|`string` `opcional` Indicativo ciudad del cliente.|\n|**companyName**|`string(255)` `opcional` Nombre compañia del cliente.|\n|**socialName**| `string(100)` `opcional` Razón social del cliente.|\n|**emailTransaction**|`string(255)` `opcional` Email del cliente.|\n|**domain**|`string(255)` `opcional` Dominio para el catálogo del.|\n|**logo**|`text` `opcional` logo en base64.|\n\n\n**Tipo Autenticación:** *Bearer Token*\n\n**En el Header *Authorization*  debe ir la palabra *Bearer* acompañada del *token* obtenido en el endpoint */{url_apify}/login*.**"
							},
							"response": [
								{
									"name": "Perfil update respuesta correcta",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {jwt_token}",
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_mobilePhone\":\"000000\",\n    \"_cellPhone\":\"0000000000\",\n    \"_indicativeCountry\":57,\n    \"_indicativeCity\":4,\n    \"companyName\":\"Prueba\",\n    \"socialName\":\"Prueba\",\n    \"emailTransaction\":\"prueba@hotmail.com\",\n    \"domain\":\"catalogoPrueba4\",\n    \"type\":1,\n    \"_logo\":\"base_64\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/client/update",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"client",
												"update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": " {\r\n    \"success\": true,\r\n    \"titleResponse\": \"Successful consult\",\r\n    \"textResponse\": \"successful consult\",\r\n    \"lastAction\": \"successful consult\",\r\n    \"data\": {\r\n        \"companyName\": \"Prueba S.A.S\",\r\n        \"mobilePhone\": \"000000\",\r\n        \"cellPhone\": \"0000000000\",\r\n        \"socialName\": \"PRUEBA.COM\",\r\n        \"indicativeCity\": 4,\r\n        \"indicativeCountry\": 57,\r\n        \"logo\": \"https://369969691f476073508a-60bf0867add971908d4f26a64519c2aa.ssl.cf5.rackcdn.com/logos_clientes/1_1576510723.png\",\r\n        \"emailTransaction\": \"prueba@hotmail.com\"\r\n    }\r\n}"
								},
								{
									"name": "Perfil update dominio no disponible",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {jwt_token}",
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_mobilePhone\":\"000000\",\n    \"_cellPhone\":\"0000000000\",\n    \"_indicativeCountry\":57,\n    \"_indicativeCity\":4,\n    \"companyName\":\"Prueba\",\n    \"socialName\":\"Prueba\",\n    \"emailTransaction\":\"prueba@hotmail.com\",\n    \"domain\":\"catalogoPrueba4\",\n    \"type\":1,\n    \"_logo\":\"base_64\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/client/update",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"client",
												"update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": " {\r\n    \"success\": false,\r\n    \"titleResponse\": \"Subdomain not available\",\r\n    \"textResponse\": \"Subdomain not available\",\r\n    \"lastAction\": \"create subdomain\",\r\n    \"data\": []\r\n}"
								}
							]
						},
						{
							"name": "Perfil cambiar contraseña",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {jwt_token}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"prueba@payco.co\",\n    \"password\":\"test$2020\",\n    \"passwordNew\":\"test$2021\",\n    \"passwordRepeat\":\"test$2021\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/client/update/password",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"client",
										"update",
										"password"
									]
								},
								"description": "Para modificar  o actualizar la contraseña de un usuario, usted podrá utilizar este endpoint.\n\n¿Cómo actualizar modificar la contraseña  del cliente?\n\nPara modificar la contraseña de forma correcta de un usuario se deben enviar los siguientes parámetros obligatorios en la solicitud.\n\n|Parámetro | Descripción |\n|-------------------|--------------------|\n|**email**|`string` `obligatorio` Correo electrónico que corresponde al cliente logueado.|\n|**password**|`string` `obligatorio` Contraseña actual del usuario.|\n|**passwordNew**|`string` `obligatorio` Nueva contraseña.|\n|**passwordRepeat**|`string` `obligatorio` Repetir nueva contraseña.|\n\n**En el Header *Authorization*  debe ir la palabra *Bearer* acompañada del *token* obtenido en el endpoint */{url_apify}/login*.**"
							},
							"response": [
								{
									"name": "Perfil cambiar contraseña",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {jwt_token}",
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\":\"prueba@payco.co\",\n    \"password\":\"Papelon$1234\",\n    \"passwordNew\":\"Papelon$5647\",\n    \"passwordRepeat\":\"Papelon$5647\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/client/update/password",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"client",
												"update",
												"password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"password update\",\n    \"textResponse\": \"password update\",\n    \"lastAction\": \"Password update\",\n    \"data\": []\n}"
								},
								{
									"name": "Perfil cambiar contraseña respuesta fallida",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {jwt_token}",
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\":\"prueba@payco.co\",\n    \"password\":\"Papelon$1234\",\n    \"passwordNew\":\"Papelon$5647\",\n    \"passwordRepeat\":\"Papelon$5647\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/client/update/password",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"client",
												"update",
												"password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"error password\",\n    \"textResponse\": \"field passwordNew and passwordRepeat are not equals\",\n    \"lastAction\": \"password valid\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Saldos",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer{ jwt_token}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url_apify}}/client/balance",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"client",
										"balance"
									]
								},
								"description": "Si desea consultar los saldos de un cliente (saldo disponible, congelado y reservado) en este endpoint usted podrá obtener como resultado esta información."
							},
							"response": [
								{
									"name": "Saldos respuesta correcta",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer{ jwt_token}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url_apify}}/client/balance",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"client",
												"balance"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"balance\",\n    \"textResponse\": \"balance query ok\",\n    \"lastAction\": \"query balance\",\n    \"data\": {\n        \"client\": {\n            \"firstNames\": \"Jhon\",\n            \"lastNames\": \"Doe\",\n            \"socialName\": \"Jhon Doe\",\n            \"companyName\": \"\",\n            \"mail\": \"jhondoe@dominio.com\",\n            \"mobilePhone\": \"0000000000\"\n        },\n        \"balance\": {\n            \"epayco\": {\n                \"available\": 3776.78,\n                \"frozen\": 0,\n                \"reserved\": 7553.56,\n                \"total\": 11330.34,\n                \"currency\": \"COP\"\n            },\n            \"paypal\": {\n                \"available\": 2319.7,\n                \"pending\": 0,\n                \"total\": 2319.7,\n                \"currency\": \"USD\"\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Validación Producto",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {jwt_token}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"docNumber\": 123456,\n    \"docType\": \"CC\",\n    \"reference\": \"1256\",\n    \"accountType\": \"DP\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/validation/davivienda/product/validation",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"validation",
										"davivienda",
										"product",
										"validation"
									]
								},
								"description": "En este endpoint usted podrá validar si un documento tiene cuenta bancaria Davivienda o Daviplata.\n\n## ¿Cómo consultar?\n\nUsted debe enviar los siguientes parámetros:\n\n- Parámetros obligatorios\n\n|Parámetro|Descripción|\n|---------|------------------------|\n|**docType**|`string(3)` `obligatorio` Tipo de documento del cliente Ejemplo CC o NIT.|\n|**docNumber**|`string(20)` `obligatorio` Número de documento de identificación del cliente.|\n\n- Parámetros opcionales\n\n|Parámetro|Descripción|\n|---------|------------------------|\n|**reference**|`string(4)` `opcional` Últimos 4 dígitos de la cuenta bancaria.|\n|**accountType**|`string(4)` `opcional` Tipo de cuenta bancaria (DP = Daplita - CA = Cuenta de Ahorros- CC = Cuenta Corriente).|"
							},
							"response": []
						},
						{
							"name": "Recuperar contraseña",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mail\": \"prueba@correo.com\",\r\n    \"url\": \"https://ejemplorecuperacion\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_apify}}/client/reset-password",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"client",
										"reset-password"
									]
								},
								"description": "Si desea realizar una recuperación de contraseña, debe emplear este endpoint para realizar este proceso, siguiendo los pasos indicados.\n\n## ¿Cómo recuperar la contraseña?\n\nPara recuperar la contraseña debe realizar la solicitud de la siguiente forma enviando los parámetros obligatorios.\n\n|Parámetro| Descripción|\n|------------------|-----------------------------|\n|**mail**|`string(50)` `obligatorio`|Email del cliente.|\n\n> En caso de ser una entidad **Aliada** o **Aliada Plus** es necesario enviar el siguiente parámetro obligatorio.\n\n|Parámetro|  Descripción|\n|--------------------|-----------------|\n|**url**| `string` `obligatorio-condicional` Url opcional para recuperación de contraseña.|\n\n> Si es una entidad estándar la recuperación de contraseña se hará redireccionando a nuestro **Dashboard**"
							},
							"response": [
								{
									"name": "Recuperar contraseña respuesta correcta",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"mail\": \"prueba@correo.com\",\r\n    \"url\": \"https://ejemplorecuperacion\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/client/reset-password",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"client",
												"reset-password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{ \r\n    \"success\": true,\r\n    \"titleResponse\" : \"email send\",\r\n    \"textResponse\": \"email send\",\r\n    \"lastAction\" : \"Client valid\",\r\n    \"data\" : []\r\n}"
								},
								{
									"name": "Recuperar contraseña respuesta fallida",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"mail\": \"prueba@correo.com\",\r\n    \"url\": \"https://ejemplorecuperacion\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/client/reset-password",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"client",
												"reset-password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n    \"success\": false,\r\n    \"titleResponse\": \"client not found\",\r\n    \"textResponse\": \"client not found\",\r\n    \"lastAction\": \"client valid\",\r\n    \"data\": []\r\n}"
								}
							]
						},
						{
							"name": "Cambio de contraseña (Enviar token)",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{PRIVATE_KEY}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{PUBLIC_KEY}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"123456789\",\n    \"passwordRepeat\": \"123456789\",\n    \"token\": \"5c130b204b81a390da348dbfeea40a83\"\n}"
								},
								"url": {
									"raw": "{{url_apify_private}}/client/resetting/password/update",
									"host": [
										"{{url_apify_private}}"
									],
									"path": [
										"client",
										"resetting",
										"password",
										"update"
									]
								},
								"description": "En este endpoint usted puede realizar la solicitud para el cambio de contraseña con el **token** recibido en el correo y sus nuevas credenciales.\n\n## ¿Cómo cambiar la contraseña con token recibido por correo electrónico?\n\nPara cambiar la contraseña con **token** debe realizar la solicitud enviando los siguientes parámetros como obligatorios.\n\n|Parámetro| Descripción|\n|-------------------|----------------------|\n|**password**|`string` `obligatorio` Contraseña.|\n|**passwordRepeat**|`string` `obligatorio` Confirmar la contraseña (debe ser igual al parámetro **password**.|\n|**token**|`string` `obligatorio` Token recibido en el correo electrónico.|"
							},
							"response": [
								{
									"name": "Cambio de contraseña (Enviar token) respuesta correcta",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"123456789\",\n    \"passwordRepeat\": \"123456789\",\n    \"token\": \"5c130b204b81a390da348dbfeea40a83\"\n}"
										},
										"url": {
											"raw": "{{url_apify_private}}/client/resetting/password/update",
											"host": [
												"{{url_apify_private}}"
											],
											"path": [
												"client",
												"resetting",
												"password",
												"update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n  \"success\": true,\n  \"titleResponse\": \"password update\",\n  \"textResponse\": \"password update\",\n  \"lastAction\": \"Password update\",\n  \"data\": []\n}"
								},
								{
									"name": "Cambio de contraseña (Enviar token) respuesta fallida Copy",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"123456789\",\n    \"passwordRepeat\": \"123456789\",\n    \"token\": \"5c130b204b81a390da348dbfeea40a83\"\n}"
										},
										"url": {
											"raw": "{{url_apify_private}}/client/resetting/password/update",
											"host": [
												"{{url_apify_private}}"
											],
											"path": [
												"client",
												"resetting",
												"password",
												"update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation clientId y data of filter\",\n    \"data\": {\n        \"totalerros\": 3,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field password required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field passwordRepeat required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field token required\"\n            }\n        ]\n    }\n}"
								}
							]
						}
					],
					"description": "En esta sección se muestra la información necesaria para la gestión de clientes en ePayco, los servicios habilitados le permitirán crear, editar y eliminar los perfiles de los clientes. Los endpoints para realizar estas acciones estan descritos a continuación.\n\n# Creación de clientes\n\nCon el endpoint que se detalla, usted puede crear un cliente en ePayco, enviando unas variables mínimas. "
				},
				{
					"name": "Master Listas",
					"item": [
						{
							"name": "Listar Bancos",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"name\": \"AV VILLAS\"\n    }\n}"
								},
								"url": {
									"raw": "{{url_apify}}/banks",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"banks"
									]
								},
								"description": "En este endpoint usted podrá listar todos los bancos obteniendo un array **id=>name** realizando la solicitud de forma correcta.\n\nAdicionalmente, este endpoint permite realizar un filtrado de la respuesta generada, enviando en el body un objeto llamado filter."
							},
							"response": [
								{
									"name": "Listar Bancos respuesta correcta",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/banks",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"banks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n    \"success\": true,\r\n    \"titleResponse\": \"bank list\",\r\n    \"textResponse\": \"bank list success\",\r\n    \"lastAction\": \"Query bank list\",\r\n    \"data\": [{\r\n         \"id\": 1428,\r\n         \"name\": \"BANCO AV VILLAS\"\r\n        }, {\r\n           \"id\": 1022,\r\n           \"name\": \"DAVIVIENDA\"\r\n        }]\r\n    }"
								}
							]
						},
						{
							"name": "Paises",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_apify}}/countries",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"countries"
									]
								},
								"description": "Si desea obtener la lista de los países es necesario realizar una solicitud a este endpoint."
							},
							"response": [
								{
									"name": "Paises respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_apify}}/countries",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"countries"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "    { \"sucess\": true,\r\n      \"titleResponse\":\"countries list\",\r\n      \"textResponse\":\"countries list success\",\r\n      \"lastAction\":\"Query countries list\",\r\n      \"data\":[{\r\n        \"id\":id_country,\r\n        \"name\":\"nombre del país\",\r\n        \"displayText\":\"texto a visualizar\",\r\n        \"locale\": \"idioma\",\r\n        \"flag\": \"path de ubicación\"\r\n       }, {...}]\r\n    }"
								}
							]
						},
						{
							"name": "Listar Departamentos",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filter\":{\n\t\t\"name\":\"Cundinamarca\"\n\t}\n}"
								},
								"url": {
									"raw": "{{url_apify}}/departments",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"departments"
									]
								},
								"description": "En este endpoint usted podrá obtener la lista de los departamentos realizando la solicitud de la forma que se indica. \n\nTambién, podrá listar todos los departamentos y filtrarlos por su nombre enviando un objeto llamado filter en el body."
							},
							"response": [
								{
									"name": "Listar Departamentos",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/departments",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"departments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{ \r\n    \"sucess\": true,\r\n    \"titleResponse\":\"OK\",\r\n    \"textResponse\":\"department list success\",\r\n    \"lastAction\":\"Query department\",\r\n    \"data\":[\r\n        {\"id\":id_deparment,\r\n        \"name\":\"nombre del departamento\",\r\n        \"indicative\":indicativo\r\n        }\r\n    ]\r\n}"
								}
							]
						},
						{
							"name": "Listar Ciudades",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filter\":{\n\t\t\"department\":\"2\"\n\t}\n}"
								},
								"url": {
									"raw": "{{url_apify}}/cities",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"cities"
									]
								},
								"description": "En este endpoint usted podrá listar todas las ciudades con sus respectivos **id** que servirá como valor para hacer referencia a la ciudad que seleccione.\n\nAdicionalmente, con este endpoint puede hacer un tipo de filtrado, y filtrarlas por departamento enviando un objeto llamado filter en el body."
							},
							"response": [
								{
									"name": "Listar Ciudades respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/cities",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"cities"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": " {   \"sucess\": true,\r\n     \"titleResponse\":\"OK\",\r\n     \"textResponse\":\"city list sucess\",\r\n     \"lastAction\":\"Query city\",\r\n     \"data\":[{\"id\":id_city,\"name\":\"nombre de la ciudad\",\"department\":id_department}]\r\n}"
								}
							]
						},
						{
							"name": "Listar de tipos documentos",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url_apify}}/type/documents",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"type",
										"documents"
									]
								},
								"description": "Para consultar los tipos de documentos que puede emplear en la plataforma debe realizar una solicitud a este endpoint."
							},
							"response": [
								{
									"name": "Listar de tipos documentos respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/type/documents",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"type",
												"documents"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{ \"success\": true,\r\n      \"titleResponse\": \"document type list\",\r\n      \"textResponse\": \"document type list success\",\r\n      \"lastAction\": \"Query document type list\",\r\n      \"data\": [{\r\n          \"id\": 1,\r\n          \"name\": \"Cédula de Ciudadanía\",\r\n          \"cod\": \"CC\",\r\n          \"description\": \"Cédula de Ciudadanía\"\r\n        }, {...}]\r\n    }"
								}
							]
						},
						{
							"name": "Listar Categorías",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filter\":{\n\t\t\"name\": \"Belleza y Cuidado Personal\"\n\t}\n}"
								},
								"url": {
									"raw": "{{url_apify}}/categories",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"categories"
									]
								},
								"description": "En este endpoint usted podrá listar todas las categorías con la siguiente solicitud.\n\nPuede también filtras las categorías, enviando un objeto llamado filter en el body y filtrar por **id** o **name**"
							},
							"response": [
								{
									"name": "Listar Categorías respuesta existosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url_apify}}/categories",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"categories"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": " { \"sucess\": true,\r\n      \"titleResponse\":\"OK\",\r\n      \"textResponse\":\"category list success\",\r\n      \"lastAction\":\"query category\",\r\n      \"data\":[{\r\n        \"id\":id_category,\r\n        \"name\":\"categoría\"\r\n       }, {...}]\r\n    }"
								}
							]
						},
						{
							"name": "Listar SubCategorias",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filter\":{\n\t\t\"categoryId\": \"4\"\n\t}\n}"
								},
								"url": {
									"raw": "{{url_apify}}/subcategories",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"subcategories"
									]
								},
								"description": "En este endpoint usted podrá listar todas las subcategorías de la forma que se indica.\n\nPuede filtrar las subcategorías empleando el id de la categoría padre enviando un objeto llamado filter en el body."
							},
							"response": [
								{
									"name": "Listar SubCategorias respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url_apify}}/subcategories",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subcategories"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n      \"success\": true,\r\n      \"title_response\": \"OK\",\r\n      \"text_response\": \"Subcategorias consultadas exitosamente\",\r\n      \"last_action\": \"Query Subcategorias\",\r\n      \"data\": [{\r\n\t  \"id\": 39,\r\n\t  \"name\": \"Panadería\",\r\n\t  \"categoryId\": \"4\"\r\n\t  }, {\r\n\t  \"id\": 40,\r\n\t  \"name\": \"Bar, Club, Salón\",\r\n\t  \"categoryId\": \"4\"\r\n\t  },{...}\r\n    }"
								}
							]
						},
						{
							"name": "Dirección Tipo Nomenclatura",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filter\":{\n\t\t\"name\":\"Avenida\" \n\t}\n}"
								},
								"url": {
									"raw": "{{url_apify}}/address/nomenclature/types",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"address",
										"nomenclature",
										"types"
									]
								},
								"description": "En este endpoint usted podrá listar todas las nomenclaturas para dirección.\n\nEn este endpoint tambien puede realizar un filtro, y filtrar los tipos de nomenclatura por el **id** o **name** de la nomenclatura  enviando un objeto llamado filter en el body."
							},
							"response": [
								{
									"name": "Dirección Tipo Nomenclatura respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/address/nomenclature/types",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"address",
												"nomenclature",
												"types"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n\t    \"success\": true,\r\n\t    \"titleResponse\": \"OK\",\r\n\t    \"textResponse\": \"nomenclature list success\",\r\n\t    \"lastAction\": \"query nomenclature\",\r\n\t    \"data\": [\r\n\t        {\r\n\t            \"id\": 1,\r\n\t            \"name\": \"Calle\",\r\n\t            \"abbreviation\": \"Cll\"\r\n\t        },{...}\r\n        ]\r\n}"
								}
							]
						},
						{
							"name": "Dirección Tipo Propiedades",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filter\":{\n\t\t\"id\":5\n\t}\n}"
								},
								"url": {
									"raw": "{{url_apify}}/address/property/types",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"address",
										"property",
										"types"
									]
								},
								"description": "En este endpoint usted podrá listar todos los tipos de propiedades para la dirección. \n\nEn este endpoint puede filtral los tipos de propiedades por **id** o **name** del tipo de propiedad  enviando un objeto llamado filter en el body."
							},
							"response": [
								{
									"name": "Dirección Tipo Propiedades respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/address/property/types",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"address",
												"property",
												"types"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n\t  \"success\": true,\r\n\t  \"titleResponse\": \"Property types list\",\r\n\t  \"textResponse\": \"Property types list success\",\r\n\t  \"lastAction\": \"Query property type\",\r\n\t  \"data\":[{\r\n\t     \"id\": 1,\r\n\t     \"name\": \"Casa\"\r\n           },{...}\r\n        ]\r\n    }"
								}
							]
						},
						{
							"name": "Profesiones",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filter\":{\n\t\t\"id\":10\n\t}\n}"
								},
								"url": {
									"raw": "{{url_apify}}/professions",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"professions"
									]
								},
								"description": "Para obtener una lista de todos los tipos de profesiones permitadas, podrá emplear este endpoint y adiconalmente filtrarlos por el **id** o **name** del tipo de profesión.\n\nAdicionalmente, en este endpoint se permite el filtrado de la lista de profesiones por **id** o **name**."
							},
							"response": [
								{
									"name": "Profesiones respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/professions",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"professions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n\t    \"success\": true,\r\n\t    \"titleResponse\": \"Professions list\",\r\n\t    \"textResponse\": \"Professions list success\",\r\n\t    \"lastAction\": \"Query professions\",\r\n\t    \"data\": [\r\n\t        {\r\n\t            \"id\": 1,\r\n\t            \"code\": 1,\r\n\t            \"name\": \"Ingenieria de sistemas\"\r\n\t        },{...}\r\n        ]\r\n}"
								}
							]
						},
						{
							"name": "Tipo Cuentas Bancarias",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filter\":{\n\t\n\t}\n}"
								},
								"url": {
									"raw": "{{url_apify}}/bank/account/types",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"bank",
										"account",
										"types"
									]
								},
								"description": "En este endpoint usted podrá listar todos los tipos de cuentas bancarias, realizando la solicitud como se indica.\n\nAdicionalmente, puede filtrar por el **id** o tipo de cuenta bancaria enviando un objeto llamado filter en el body."
							},
							"response": [
								{
									"name": "Tipo Cuentas Bancarias respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/bank/account/types",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"bank",
												"account",
												"types"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\"success\": true,\r\n     \"titleResponse\": \"Type account list\",\r\n     \"textResponse\": \"Type account list success\",\r\n     \"lastAction\": \"Query type account\",\r\n     \"data\": [{\r\n\t  \"id\": 1,\r\n\t  \"type\": \"CUENTA DE AHORROS\",\r\n\t  \"description\": \"CUENTA DE AHORROS\",\r\n\t  \"code\": \"CA\"\r\n\t        },{...}]\r\n     }"
								}
							]
						},
						{
							"name": "Redes Sociales",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filter\":{\n\t\n\t}\n}"
								},
								"url": {
									"raw": "{{url_apify}}/social/networks",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"social",
										"networks"
									]
								},
								"description": "En este endpoint usted podrá listar todos los tipos de redes sociales y obtener un array referenciando **id=>name**.\n\nPara obtener la lista de las redes sociales debe realizar el request de la forma que se indica.\n\nCon este endpoint puede tambien realizar un filtro, y filtrarlas por el **id** o **type** de la red social enviando un objeto llamado filter en el body."
							},
							"response": [
								{
									"name": "Redes Sociales respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/social/networks",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"social",
												"networks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": " {\r\n      \"success\": true,\r\n      \"titleResponse\": \"Social networks list\",\r\n      \"textResponse\": \"Social networks list success\",\r\n      \"lastAction\": \"Query social networks\",\r\n      \"data\": [\r\n\t  {\r\n\t    \"id\": 1,\r\n\t     \"name\": \"Facebook\"\r\n\t },..."
								}
							]
						},
						{
							"name": "Tipo Comercio",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filter\":{\n\t\n\t}\n}"
								},
								"url": {
									"raw": "{{url_apify}}/merchant/types",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"merchant",
										"types"
									]
								},
								"description": "En este endpoint usted podrá obtener una lista de todos los tipos de comercios.\n\nPara obtener la lista de los tipo de comercios realizar el request de la forma que se indica.\n\nAdicionalmente tiene la opción de realizar esta consulta con un filtrado por **id** o **type** del tipo comercio enviando un objeto llamado filter en el body."
							},
							"response": [
								{
									"name": "Tipo Comercio respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url_apify}}/merchant/types",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"merchant",
												"types"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n\t    \"success\": true,\r\n\t    \"titleResponse\": \"Merchant types list\",\r\n\t    \"textResponse\": \"Merchant types list success\",\r\n\t    \"lastAction\": \"Query social merchant types\",\r\n\t    \"data\": [\r\n\t        {\r\n\t            \"id\": 1,\r\n\t            \"name\": \"Presencial\"\r\n\t        },..."
								}
							]
						},
						{
							"name": "Tipos de subdominios",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filter\":{\n\t\"name\":\"catalogo\"\n\t}\n}"
								},
								"url": {
									"raw": "{{url_apify}}/domain/types",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"domain",
										"types"
									]
								},
								"description": "Para obtener el listado de todos los tipos de subdominios podrá hacer uso de este endpoint, para ello debe realizar la solicitud que se indica en este endpoint.\n\nSi desea filtrar algún subdominio puede hacerlos enviando un objeto llamado filter en el body."
							},
							"response": [
								{
									"name": "Tipos de subdominios respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url_apify}}/domain/types",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"domain",
												"types"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"typeDomain list\",\n    \"textResponse\": \"typeDomain list success\",\n    \"lastAction\": \"Query typeDomain list\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"catalogo\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Estados transacciones",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url_apify}}/transaction/status",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"transaction",
										"status"
									]
								},
								"description": "En este endpoint usted podrá consultar los maestros de estados, obteniendo como respuesta un listado del mismo.\n\nPuede filtrar los estador por **id** o **name** enviando un objeto llamado filter en el body."
							},
							"response": [
								{
									"name": "Estados transacciones respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/transaction/status",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"transaction",
												"status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Transactions status list\",\n    \"textResponse\": \"Transaction status list success\",\n    \"lastAction\": \"Query property type\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"Aceptada\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Entornos Transacciones",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url_apify}}/transaction/enviroment",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"transaction",
										"enviroment"
									]
								},
								"description": "Para consultar los maestros de entorno de las transacciones en ePayco, usted podrá realizar la siguiente solicitud."
							},
							"response": [
								{
									"name": "Entornos Transacciones respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/transaction/enviroment",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"transaction",
												"enviroment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Transactions enviroment list\",\n    \"textResponse\": \"Transaction enviroment list success\",\n    \"lastAction\": \"Query property type\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"En Pruebas\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Producción\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Responsabilidades Fiscales",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_apify}}/fiscal/responsabilities",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"fiscal",
										"responsabilities"
									]
								},
								"description": "En este endpoint usted podrá obtener un listados de todas las responsabilidades fiscales, realizando la siguiente solicitud obtendrá esta información."
							},
							"response": [
								{
									"name": "Responsabilidades Fiscales respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_apify}}/fiscal/responsabilities",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"fiscal",
												"responsabilities"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Fiscal responsability list\",\n    \"textResponse\": \"Fiscal responsability list success\",\n    \"lastAction\": \"consult fiscal responsabilities\",\n    \"data\": {\n        \"PN\": {\n            \"RC\": [\n                {\n                    \"id\": 110,\n                    \"nombre\": \"Régimen Simple de Tributación - SIMPLE\",\n                    \"codigo\": \"O-47\"\n                },\n                {\n                    \"id\": 115,\n                    \"nombre\": \"No responsable\",\n                    \"codigo\": \"R-99-PN\"\n                }\n            ],\n            \"RS\": [\n                {\n                    \"id\": 110,\n                    \"nombre\": \"Régimen Simple de Tributación - SIMPLE\",\n                    \"codigo\": \"O-47\"\n                },\n                {\n                    \"id\": 115,\n                    \"nombre\": \"No responsable\",\n                    \"codigo\": \"R-99-PN\"\n                }\n            ]\n        },\n        \"PJ\": {\n            \"RC\": [\n                {\n                    \"id\": 5,\n                    \"nombre\": \"Gran contribuyente\",\n                    \"codigo\": \"O-13\",\n                    \"sub\": [\n                        {\n                            \"id\": 116,\n                            \"nombre\": \"Retencion de ICA \",\n                            \"codigo\": \"O-ICA\",\n                            \"auto\": false,\n                            \"disabled\": false\n                        }\n                    ]\n                },\n                {\n                    \"id\": 7,\n                    \"nombre\": \"Autorretenedor\",\n                    \"codigo\": \"O-15\",\n                    \"sub\": [\n                        {\n                            \"id\": 116,\n                            \"nombre\": \"Retencion de ICA \",\n                            \"codigo\": \"O-ICA\",\n                            \"auto\": false,\n                            \"disabled\": false\n                        }\n                    ]\n                },\n                {\n                    \"id\": 12,\n                    \"nombre\": \"Agente de retención en IVA\",\n                    \"codigo\": \"O-23\"\n                },\n                {\n                    \"id\": 110,\n                    \"nombre\": \"Régimen Simple de Tributación - SIMPLE\",\n                    \"codigo\": \"O-47\"\n                },\n                {\n                    \"id\": 115,\n                    \"nombre\": \"No responsable\",\n                    \"codigo\": \"R-99-PN\"\n                }\n            ],\n            \"RS\": [\n                {\n                    \"id\": 110,\n                    \"nombre\": \"Régimen Simple de Tributación - SIMPLE\",\n                    \"codigo\": \"O-47\"\n                },\n                {\n                    \"id\": 115,\n                    \"nombre\": \"No responsable\",\n                    \"codigo\": \"R-99-PN\"\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Metodos de Pago Transacciones",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url_apify}}/transaction/payment/methods",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"transaction",
										"payment",
										"methods"
									]
								},
								"description": "El método descrito a continuación, le permite listar los entornos de transacciones que le brinda nuestra plataforma.\n\nPara obtener un listado de los maestros de entorno de transacciones se debe realizar el siguiente request.\n\nTambién, por medio de este método puede emplear un filtro de este listado enviando un objeto en el body."
							},
							"response": [
								{
									"name": "Metodos de Pago Transacciones respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/transaction/payment/methods",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"transaction",
												"payment",
												"methods"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Transactions payment methods list\",\n    \"textResponse\": \"Transaction payment methods list success\",\n    \"lastAction\": \"Query property type\",\n    \"data\": [\n        {\n            \"id\": \"AM\",\n            \"name\": \"American Express\"\n        },\n        {\n            \"id\": \"BA\",\n            \"name\": \"Baloto\"\n        },\n        {\n            \"id\": \"BP\",\n            \"name\": \"Big Pass\"\n        },\n        {\n            \"id\": \"CB\",\n            \"name\": \"Credibanco Botón\"\n        },\n        {\n            \"id\": \"COD\",\n            \"name\": \"Codensa\"\n        },\n        {\n            \"id\": \"CR\",\n            \"name\": \"Crédito Credencial\"\n        },\n        {\n            \"id\": \"DC\",\n            \"name\": \"Diners Club\"\n        },\n        {\n            \"id\": \"DM\",\n            \"name\": \"Debito Mastercard\"\n        },\n        {\n            \"id\": \"DP\",\n            \"name\": \"Daviplata\"\n        },\n        {\n            \"id\": \"DV\",\n            \"name\": \"Debito Visa\"\n        },\n        {\n            \"id\": \"EF\",\n            \"name\": \"Efecty\"\n        },\n        {\n            \"id\": \"GA\",\n            \"name\": \"Gana\"\n        },\n        {\n            \"id\": \"MC\",\n            \"name\": \"Crédito Mastercard\"\n        },\n        {\n            \"id\": \"MPD\",\n            \"name\": \"Puntos y Crédito Davivienda\"\n        },\n        {\n            \"id\": \"N/A\",\n            \"name\": \"NO APLICA\"\n        },\n        {\n            \"id\": \"PP\",\n            \"name\": \"PayPal\"\n        },\n        {\n            \"id\": \"PR\",\n            \"name\": \"Punto Red\"\n        },\n        {\n            \"id\": \"PSE\",\n            \"name\": \"PSE\"\n        },\n        {\n            \"id\": \"QR\",\n            \"name\": \"Código QR\"\n        },\n        {\n            \"id\": \"RS\",\n            \"name\": \"Red Servi\"\n        },\n        {\n            \"id\": \"SP\",\n            \"name\": \"SafetyPay\"\n        },\n        {\n            \"id\": \"SPF\",\n            \"name\": \"Split Payment\"\n        },\n        {\n            \"id\": \"SR\",\n            \"name\": \"Sured\"\n        },\n        {\n            \"id\": \"SRF\",\n            \"name\": \"Split Receiver Fee\"\n        },\n        {\n            \"id\": \"VS\",\n            \"name\": \"Crédito Visa\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"description": "En este apartado puedes encontrar los endpoint referentes a listas maestras, estas listas sirven para obtener información que se emplean como parámetros para las solicitudes de los endpoint de las demás secciones.\n\nTodos los endpoint del **Master List** emplean el método **GET** y para obtener las listas de cada uno debe emplear en el **Header** el parámetro **Authorization** con el **token_apify** obteniedo al loguearse correctamente en **APIFY**."
				},
				{
					"name": "Cobra",
					"item": [
						{
							"name": "Crear Link de Cobro",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {jwt_token}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quantity\": 1,\n  \"onePayment\":true,\n  \"amount\": \"1000\",\n  \"currency\": \"COP\",\n  \"id\": 0,\n  \"base\": \"0\",\n  \"description\": \"Link de test\",\n  \"title\": \"Link de cobro de prueba\",\n  \"typeSell\": \"1\",\n  \"tax\": \"0\",\n  \"email\": \"jhondoe@yopmail.com\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/collection/link/create",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"collection",
										"link",
										"create"
									]
								},
								"description": "Si desea crear un link de cobro en la plataforma de ePayco, puede emplear este endpoint enviando unos parámetros mínimos.\n\n## ¿Cómo crear un link de cobro?\n\nUsted debe enviar los siguientes parámetros como obligatorios.\n\n|Parámetros|Descripción|\n|---------------------|------------------|\n|**quantity**|`integer(11)` `obligatorio` Cantidad de veces que estará disponible el link para manejo de inventario.|\n|**amount**|`float (2 decimales)` `obligatorio` Valor a cobrar.|\n|**currency**|`string(3)` `obligatorio` Tipo de moneda a desplegar en el checkout (\"COP\"-\"USD\")|\n|**id**|`integer(11)` `obligatorio` Identificador único del link, en caso de enviar 0 se asignará un ID por el API.|\n|**description**|`string(600)` `obligatorio` Descripción del cobro.|\n|**title**|`string(255)` `obligatorio` Título del cobro.|\n\n> El parámetro **typeSell** es un parámetro obligatorio tipo Integer (2) dependiendo del valor enviado habilita un parámeto adicional obligatorio.\n\n* Si **typeSell=1**  significa que el tipo de cobro será por Email de cobro, habilitando el campo **email** como obligatorio.\n\n* Si **typeSell=2**  el tipo de cobro será por link de cobro.\n\n* Si  **typeSell=3** significa que el tipo de cobro será por  SMS de cobro,  habilitando el parámetro **mobilePhone** obligatorios y requerio el campo indicative.\n\n* Si **typeSell=4** significa que el tipo de cobro será por redes sociales.\n\n> El parámetro **onePayment** también es un campo obligatorio y el tipo de variable es booleano recibe valores true o false, si el valor es false se debe enviar como parámetro obligatorio el campo **available** .\n\n## Campos obligatorios cuando dependen de otra variable:\n\n|Parámetro | Descripción|\n|-------------------|-----------------|\n|**indicative**|`string(2)` `obligatorio-condicional` Indicativo del país a donde se enviará el SMS de cobro.|\n|**mobilePhone**|`string(10)` `obligatorio-condicional` Teléfono a donde se enviará el SMS de cobro.|\n|**email**|`string(255)` `obligatorio-condicional` Email a donde se enviará el Link de cobro.|\n|**available**|`integer(2)` `obligatorio-condicional` Indicará la cantidad de veces que estara disponible el mismo link.|\n\n## Parámetros opcionales\n\n|Parámetro|Descripción|\n|--------------------|--------------|\n|**reference**|`integer(11)` `opcional` Número de referencia de producto o servicio.|\n|**onePayment**| `boolean` `opcional` Identifica si el link es de cobro único.|\n|**base**|`float(2 decimales)` `opcional` Es el valor base del cobro (sin impuestos).|\n|**tax**|`float(2 decimales)` `opcional` Es el valor del impuesto.|\n|**urlConfirmation**|`string(255)` `opcional` Url donde se enviará la confirmacion de cualquier cambio realizado sobre el pago.|\n|**urlResponse**|`string(255)` `opcional` Url donde se redireccionará al usuario después de realizar el pago en el checkout.|\n|**expirationDate**|Format DateTime UTC Fecha de expiración del link de cobro.|"
							},
							"response": [
								{
									"name": "Crear Link de Cobro respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer {jwt_token}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"quantity\": 1,\n  \"onePayment\":true,\n  \"amount\": \"1000\",\n  \"currency\": \"COP\",\n  \"id\": 0,\n  \"base\": \"0\",\n  \"description\": \"Link de test\",\n  \"title\": \"Link de cobro de prueba\",\n  \"typeSell\": \"1\",\n  \"tax\": \"0\",\n  \"email\": \"felipe.mesa@payco.co\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/collection/link/create",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"collection",
												"link",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Successful consult\",\n    \"textResponse\": \"successful consult\",\n    \"lastAction\": \"successful consult\",\n    \"data\": {\n        \"date\": \"2019-11-01 14:59:51\",\n        \"state\": 1,\n        \"txtCode\": \"82586\",\n        \"clientId\": 50498,\n        \"onePayment\": 1,\n        \"quantity\": \"1\",\n        \"baseTax\": 0,\n        \"description\": \"Link de test\",\n        \"title\": \"Link de cobro de prueba\",\n        \"currency\": \"COP\",\n        \"typeSell\": \"1\",\n        \"urlConfirmation\": \"\",\n        \"urlResponse\": \"\",\n        \"tax\": 0,\n        \"amount\": \"1000\",\n        \"invoceNumber\": \"123\",\n        \"expirationDate\": null,\n        \"routeQr\": \"secure.payco.co/apprest/images/QRcodes/82586.png\",\n        \"routeLink\": \"https://payco.link/82586\",\n        \"id\": 82586\n    }\n}"
								},
								{
									"name": "Crear Link de Cobro respuesta fallida campo requerido",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer {jwt_token}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"quantity\": 1,\n  \"onePayment\":true,\n  \"amount\": \"1000\",\n  \"currency\": \"COP\",\n  \"id\": 0,\n  \"base\": \"0\",\n  \"description\": \"Link de test\",\n  \"title\": \"Link de cobro de prueba\",\n  \"typeSell\": \"1\",\n  \"tax\": \"0\",\n  \"email\": \"felipe.mesa@payco.co\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/collection/link/create",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"collection",
												"link",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"title_response\": \"Error\",\n    \"text_response\": \"Some fields are required, please correct the errors and try again\",\n    \"last_action\": \"validation clientId y data of filter\",\n    \"data\": {\n        \"totalerrors\": 2,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field currency required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field amount required\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Editar Link de Cobro",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {jwt_token}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quantity\": 1,\n  \"onePayment\":true,\n  \"amount\": \"1000\",\n  \"currency\": \"COP\",\n  \"id\": 811659,\n  \"base\": \"0\",\n  \"description\": \"Link de test\",\n  \"title\": \"Link de cobro de prueba\",\n  \"typeSell\": \"1\",\n  \"tax\": \"0\",\n  \"email\": \"jhondoe@yopmail.com\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/collection/link/update",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"collection",
										"link",
										"update"
									]
								},
								"description": "Para actualizar un link de cobro en la plataforma de ePayco, debe emplear este endpoint siguiendo los pasos que se indican enviando unos parámetros mínimos.\n\n## ¿Cómo actualizar un link de cobro?\n\nPara actualizar un link de cobro debe realizar la solicitud enviando los siguientes parámetros como obligatorios.\n\n|Parámetros| Descripción|\n|----------------------|------------------|\n|**quantity**|`integer(11)` `obligatorio` Cantidad de veces que estará disponible el link para manejo de inventario.|\n|**amount**|`float(2 decimales)` `obligatorio` Valor a cobrar.|\n|**currency**|`string(3)` `obligatorio` Tipo de moneda a desplegar en el checkout (\"COP\"-\"USD\")|\n|**id**|`integer(11)` `obligatorio` Identificador único del link de cobro que desea actualizar.|\n|**description**|`string(600)` `obligatorio` Descripción del cobro.|\n|**title**|`string(255)` `obligatorio` Título del cobro.| \n\n> El parámetro **typeSell** es un parámetro obligatorio tipo Integer (2) dependiendo del valor enviado habilita un parámeto adicional obligatorio.\n\n* Si **typeSell=1**  significa que el tipo de cobro será por Email de cobro, habilitando el campo **email** como obligatorio.\n\n* Si **typeSell=2**  el tipo de cobro será por link de cobro.\n\n* Si  **typeSell=3** significa que el tipo de cobro será por  SMS de cobro,  habilitando el parámetro **mobilePhone** obligatorios y requerio el campo indicative.\n\n* Si **typeSell=4** significa que el tipo de cobro será por redes sociales.\n\n> El parámetro **onePayment** también es un campo obligatorio y el tipo de variable es booleano recibe valores true o false, si el valor es false se debe enviar como parámetro obligatorio el campo **available** .\n\n## Campos obligatorios cuando dependen de otra variable:\n\n|Parámetro | Descripción|\n|-------------------|-----------------|\n|**indicative**|`string(2)` `obligatorio-condicional` Indicativo del país a donde se enviará el SMS de cobro.|\n|**mobilePhone**|`string(10)` `obligatorio` Teléfono a donde se enviará el SMS de cobro.|\n|**email**|`string(255)` `obligatorio` Email a donde se enviará el Link de cobro.|\n|**available**|`integer(2)` `obligatorio` Indicará la cantidad de veces que estara disponible el mismo link.|\n\n## Parámetros opcionales\n\n|Parámetro|Descripción|\n|---------------------|--------------|\n|**reference**|`integer(11)` `opcional`Integer(11) Número de referencia de producto o servicio.|\n|**onePayment**| `boolean` `opcional` Identifica si el link es de cobro único.|\n|**base**|`float(2)` `opcional` Es el valor base del cobro (sin impuestos).|\n|**tax**|`float(2)` `opcional` Es el valor del impuesto.|\n|**urlConfirmation**|`string(10)` `opcional` Url donde se enviará la confirmacion de cualquier cambio realizado sobre el pago.|\n|**urlResponse**|`string(255)` `obligatorio` Url donde se redireccionará al usuario después de realizar el pago en el checkout.|\n|**expirationDate**|Format DateTime UTC Fecha de expiración del link de cobro.|"
							},
							"response": [
								{
									"name": "Editar Link de Cobro respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer {jwt_token}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"quantity\": 1,\n  \"onePayment\":true,\n  \"amount\": \"1000\",\n  \"currency\": \"COP\",\n  \"id\": 811659,\n  \"base\": \"0\",\n  \"description\": \"Link de test\",\n  \"title\": \"Link de cobro de prueba\",\n  \"typeSell\": \"1\",\n  \"tax\": \"0\",\n  \"email\": \"felipe.mesa@payco.co\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/collection/link/update",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"collection",
												"link",
												"update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Successful consult\",\n    \"textResponse\": \"successful consult\",\n    \"lastAction\": \"successful consult\",\n    \"data\": {\n        \"date\": \"2021-02-03 18:23:09\",\n        \"state\": 1,\n        \"txtCode\": \"811659\",\n        \"clientId\": 50498,\n        \"onePayment\": 1,\n        \"quantity\": 1,\n        \"baseTax\": 0,\n        \"description\": \"Link de test\",\n        \"title\": \"Link de cobro de prueba\",\n        \"currency\": \"COP\",\n        \"typeSell\": \"1\",\n        \"urlConfirmation\": \"\",\n        \"urlResponse\": \"\",\n        \"tax\": 0,\n        \"amount\": \"1000\",\n        \"invoceNumber\": \"50498601b44d480780\",\n        \"expirationDate\": null,\n        \"routeQr\": \"https://secure.payco.co/apprest/printqr?txtcodigo=https://payco.link/811659\",\n        \"routeLink\": \"https://payco.link/811659\",\n        \"id\": 811659\n    }\n}"
								},
								{
									"name": "Editar Link de Cobro respuesta fallida campos requeridos",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer {jwt_token}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"quantity\": 1,\n  \"onePayment\":true,\n  \"amount\": \"1000\",\n  \"currency\": \"COP\",\n  \"id\": 811659,\n  \"base\": \"0\",\n  \"description\": \"Link de test\",\n  \"title\": \"Link de cobro de prueba\",\n  \"typeSell\": \"1\",\n  \"tax\": \"0\",\n  \"email\": \"felipe.mesa@payco.co\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/collection/link/update",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"collection",
												"link",
												"update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n  \"success\": false,\n  \"title_response\": \"Error\",\n  \"text_response\": \"Some fields are required, please correct the errors and try again\",\n  \"last_action\": \"validation clientId y data of filter\",\n  \"data\": {\n    \"totalerrors\": 2,\n    \"errors\": [\n      {\n        \"codError\": 500,\n        \"errorMessage\": \"field currency required\"\n      },\n      {\n        \"codError\": 500,\n        \"errorMessage\": \"field amount required\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "Listar Links de cobro",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {jwt_token}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filter\":{\n\t\t\n\t}\n}"
								},
								"url": {
									"raw": "{{url_apify}}/collection/link",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"collection",
										"link"
									]
								},
								"description": "En este endpoint usted podrá consultar los links de cobro creados por un cliente, para obtener esta información debe realizar la siguiente solicitud.\n\nPuede añadir a esta solicitud un filtrado por diferentes campos en un objeto llamado filter en el body."
							},
							"response": [
								{
									"name": "Listar Links de cobro respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer {jwt_token}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url_apify}}/collection/link",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"collection",
												"link"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Successful consult\",\n    \"textResponse\": \"successful consult\",\n    \"lastAction\": \"successful consult\",\n    \"data\": {\n        \"current_page\": 1,\n        \"data\": [\n            {\n                \"id\": 82585,\n                \"date\": \"2019-11-01 14:32:13\",\n                \"title\": \"prueba apify\",\n                \"reference\": \"504985dbc883d07134\",\n                \"currency\": \"COP\",\n                \"amount\": 4000000,\n                \"typeSell\": 4,\n                \"state\": 1,\n                \"link\": 82585\n            }\n        ],\n        \"from\": 1,\n        \"last_page\": 1,\n        \"next_page_url\": null,\n        \"path\": \"http://apify.epayco.co/collectionlink\",\n        \"per_page\": 50,\n        \"prev_page_url\": null,\n        \"to\": 1,\n        \"total\": 1\n    },\n    \"types\": {\n        \"1\": \"Email\",\n        \"2\": \"Link\",\n        \"3\": \"SMS\",\n        \"4\": \"Social Network\"\n    }\n}"
								}
							]
						}
					],
					"description": "En esta sección usted podrá encontrar toda la información relacionada con la gestión de las herramientas de cobro proporcionadas por la plataforma de ePayco."
				},
				{
					"name": "Transacciones",
					"item": [
						{
							"name": "Detalle Transacción",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filter\":{\n\t\t\"referencePayco\":108385186\n\t}\n}"
								},
								"url": {
									"raw": "{{url_apify}}/transaction/detail",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"transaction",
										"detail"
									]
								},
								"description": "Para realizar la consulta del detalle de una transacción de cualquier medio de pago que ePayco tiene a su disposición, usted podrá emplear este servicio.\n\n## ¿Cómo obtener el detalle de una transacción?\n\nPara obtener el detalle de una transacción se debe enviar en la solicitud como parámetro la referencia que se desea obtener el detalle. La solicitud debe realizarse enviando filter con el parámetro referencePayco.\n\n ## Resultado del detalle de la transacción\n\nLa respuesta del detalle de la transacción esta compuesta de una serie de parámetros que describen todo el procedimiento de la transacción.\n\n|Parámetro|Descripción|\n|--------|---------------------------|\n|success| Resultado de la solicitud (true o false).|\n|titleResponse| Título de la respuesta de ser correcta se obtiene (Successful consult).|\n|textResponse| Texto de respuesta|\n|lastAction| Última acción|\n|data| Datos del detalle de la transacción|\n\nEl parámetro de data está compuesto por la información de la transacción como referencia, valores, impuestos, factura, si es por PSE el banco con el que se hizo el pago, si es con tarjeta de crédito el número de la misma, estado de la transacción, fecha y demás datos de la transacción.\n\nPara pagos con PSE se incluye el campo cicloPSE el cual indica el horario y los ciclos de pagos para el envío de las transacciones."
							},
							"response": [
								{
									"name": "Detalle Transacción respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url_apify}}/transaction/detail",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"transaction",
												"detail"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": " {\r\n    \"success\": true,\r\n    \"titleResponse\": \"Successful consult\",\r\n    \"textResponse\": \"successful consult\",\r\n    \"lastAction\": \"successful consult\",\r\n    \"data\": {\r\n        \"referencePayco\": 45512072,\r\n        \"amount\": 33333,\r\n        \"amountNet\": 23333,\r\n        \"dollars\": 0,\r\n        \"status\": \"Aceptada\",\r\n        \"test\": \"1\",\r\n        \"description\": \"pruebaAgregadorConsolidado4\",\r\n        \"tax\": 5000,\r\n        \"transactionDate\": \"2021-08-20 10:52:13\",\r\n        \"taxBaseClient\": 10000,\r\n        \"currency\": \"COP\",\r\n        \"response\": \"Aprobada\",\r\n        \"bill\": \"iKfjp7FJARsYtmnYc\",\r\n        \"authorization\": \"2315402\",\r\n        \"ip\": \"186.97.212.162\",\r\n        \"paymentMethod\": \"PSE\",\r\n        \"receipt\": \"455120721629474733\",\r\n        \"bank\": \"BANKA\",\r\n        \"numberCard\": \"******\",\r\n        \"document\": \"3434343\",\r\n        \"address\": \"N/A\",\r\n        \"country\": \"CO\",\r\n        \"department\": null,\r\n        \"city\": \"N/A\",\r\n        \"firstName\": \"dasdasd\",\r\n        \"lastName\": \"asdas\",\r\n        \"telephone\": \"\",\r\n        \"mobilePhone\": \"3434343433\",\r\n        \"company\": \"N/A\",\r\n        \"email\": \"facundo.alvarez@epayco.com\",\r\n        \"ipoconsumo\": null,\r\n        \"urlResponse\": \"https://ejemplo.com/respuesta.html\",\r\n        \"urlConfirmation\": \"https://ejemplo.com/confirmacion\",\r\n        \"log\": {\r\n            \"x_cust_id_cliente\": 28770,\r\n            \"x_ref_payco\": 45512072,\r\n            \"x_id_factura\": \"iKfjp7FJARsYtmnYc\",\r\n            \"x_id_invoice\": \"iKfjp7FJARsYtmnYc\",\r\n            \"x_description\": \"pruebaAgregadorConsolidado4\",\r\n            \"x_amount\": \"33333.00\",\r\n            \"x_amount_country\": \"33333.00\",\r\n            \"x_amount_ok\": \"33333.00\",\r\n            \"x_tax\": \"5000.00\",\r\n            \"x_amount_base\": \"10000.00\",\r\n            \"x_currency_code\": \"COP\",\r\n            \"x_bank_name\": \"BANKA\",\r\n            \"x_cardnumber\": \"*******\",\r\n            \"x_quotas\": 0,\r\n            \"x_respuesta\": \"Aceptada\",\r\n            \"x_response\": \"Aceptada\",\r\n            \"x_approval_code\": \"2315402\",\r\n            \"x_transaction_id\": \"455120721629474733\",\r\n            \"x_fecha_transaccion\": \"2021-08-20 10:52:13\",\r\n            \"x_transaction_date\": \"2021-08-20 10:52:13\",\r\n            \"x_cod_respuesta\": 1,\r\n            \"x_cod_response\": 1,\r\n            \"x_response_reason_text\": \"00-Aprobada\",\r\n            \"x_errorcode\": \"00\",\r\n            \"x_cod_transaction_state\": 1,\r\n            \"x_transaction_state\": \"Aceptada\",\r\n            \"x_franchise\": \"PSE\",\r\n            \"x_business\": null,\r\n            \"x_customer_doctype\": \"CC\",\r\n            \"x_customer_document\": \"3434343\",\r\n            \"x_customer_name\": \"dasdasd\",\r\n            \"x_customer_lastname\": \"asdas\",\r\n            \"x_customer_email\": \"facundo.alvarez@epayco.com\",\r\n            \"x_customer_phone\": \"\",\r\n            \"x_customer_movil\": \"3434343433\",\r\n            \"x_customer_ind_pais\": null,\r\n            \"x_customer_country\": \"CO\",\r\n            \"x_customer_city\": \"N/A\",\r\n            \"x_customer_address\": \"N/A\",\r\n            \"x_customer_ip\": \"186.97.212.162\",\r\n            \"x_signature\": \"e9e63913d1de87ef7f64b7b7a6cc1486eb19c7a0e44117662768731689ba324a\",\r\n            \"x_test_request\": \"TRUE\",\r\n            \"x_extra1\": \"\",\r\n            \"x_extra2\": \"\",\r\n            \"x_extra3\": \"\",\r\n            \"x_extra4\": \"\",\r\n            \"x_extra5\": \"\",\r\n            \"x_extra6\": \"\",\r\n            \"x_extra7\": \"\",\r\n            \"x_extra8\": \"\",\r\n            \"x_extra9\": \"\",\r\n            \"x_extra10\": \"\"\r\n        },\r\n        \"allLogs\": [\r\n            {\r\n                \"x_cust_id_cliente\": 28770,\r\n                \"x_ref_payco\": 45512072,\r\n                \"x_id_factura\": \"iKfjp7FJARsYtmnYc\",\r\n                \"x_id_invoice\": \"iKfjp7FJARsYtmnYc\",\r\n                \"x_description\": \"pruebaAgregadorConsolidado4\",\r\n                \"x_amount\": \"33333.00\",\r\n                \"x_amount_country\": \"33333.00\",\r\n                \"x_amount_ok\": \"33333.00\",\r\n                \"x_tax\": \"5000.00\",\r\n                \"x_amount_base\": \"10000.00\",\r\n                \"x_currency_code\": \"COP\",\r\n                \"x_bank_name\": \"BANKA\",\r\n                \"x_cardnumber\": \"*******\",\r\n                \"x_quotas\": 0,\r\n                \"x_respuesta\": \"Aceptada\",\r\n                \"x_response\": \"Aceptada\",\r\n                \"x_approval_code\": \"2315402\",\r\n                \"x_transaction_id\": \"455120721629474733\",\r\n                \"x_fecha_transaccion\": \"2021-08-20 10:52:13\",\r\n                \"x_transaction_date\": \"2021-08-20 10:52:13\",\r\n                \"x_cod_respuesta\": 1,\r\n                \"x_cod_response\": 1,\r\n                \"x_response_reason_text\": \"00-Aprobada\",\r\n                \"x_errorcode\": \"00\",\r\n                \"x_cod_transaction_state\": 1,\r\n                \"x_transaction_state\": \"Aceptada\",\r\n                \"x_franchise\": \"PSE\",\r\n                \"x_business\": null,\r\n                \"x_customer_doctype\": \"CC\",\r\n                \"x_customer_document\": \"3434343\",\r\n                \"x_customer_name\": \"dasdasd\",\r\n                \"x_customer_lastname\": \"asdas\",\r\n                \"x_customer_email\": \"facundo.alvarez@epayco.com\",\r\n                \"x_customer_phone\": \"\",\r\n                \"x_customer_movil\": \"3434343433\",\r\n                \"x_customer_ind_pais\": null,\r\n                \"x_customer_country\": \"CO\",\r\n                \"x_customer_city\": \"N/A\",\r\n                \"x_customer_address\": \"N/A\",\r\n                \"x_customer_ip\": \"186.97.212.162\",\r\n                \"x_signature\": \"e9e63913d1de87ef7f64b7b7a6cc1486eb19c7a0e44117662768731689ba324a\",\r\n                \"x_test_request\": \"TRUE\",\r\n                \"x_extra1\": \"\",\r\n                \"x_extra2\": \"\",\r\n                \"x_extra3\": \"\",\r\n                \"x_extra4\": \"\",\r\n                \"x_extra5\": \"\",\r\n                \"x_extra6\": \"\",\r\n                \"x_extra7\": \"\",\r\n                \"x_extra8\": \"\",\r\n                \"x_extra9\": \"\",\r\n                \"x_extra10\": \"\",\r\n                \"url\": \"https://ejemplo.com/confirmacion\",\r\n                \"status\": \"200\",\r\n                \"date\": \"2021-08-20T15:53:49.000000Z\"\r\n            },\r\n            {\r\n                \"x_cust_id_cliente\": 28770,\r\n                \"x_ref_payco\": 45512072,\r\n                \"x_id_factura\": \"iKfjp7FJARsYtmnYc\",\r\n                \"x_id_invoice\": \"iKfjp7FJARsYtmnYc\",\r\n                \"x_description\": \"pruebaAgregadorConsolidado4\",\r\n                \"x_amount\": \"33333.00\",\r\n                \"x_amount_country\": \"33333.00\",\r\n                \"x_amount_ok\": \"33333.00\",\r\n                \"x_tax\": \"5000.00\",\r\n                \"x_amount_base\": \"10000.00\",\r\n                \"x_currency_code\": \"COP\",\r\n                \"x_bank_name\": \"BANKA\",\r\n                \"x_cardnumber\": \"*******\",\r\n                \"x_quotas\": 0,\r\n                \"x_respuesta\": \"Pendiente\",\r\n                \"x_response\": \"Pendiente\",\r\n                \"x_approval_code\": \"2315402\",\r\n                \"x_transaction_id\": \"455120721629474733\",\r\n                \"x_fecha_transaccion\": \"2021-08-20 10:52:13\",\r\n                \"x_transaction_date\": \"2021-08-20 10:52:13\",\r\n                \"x_cod_respuesta\": 3,\r\n                \"x_cod_response\": 3,\r\n                \"x_response_reason_text\": \"-Redireccionando al banco\",\r\n                \"x_errorcode\": \"\",\r\n                \"x_cod_transaction_state\": 3,\r\n                \"x_transaction_state\": \"Pendiente\",\r\n                \"x_franchise\": \"PSE\",\r\n                \"x_business\": null,\r\n                \"x_customer_doctype\": \"CC\",\r\n                \"x_customer_document\": \"3434343\",\r\n                \"x_customer_name\": \"dasdasd\",\r\n                \"x_customer_lastname\": \"asdas\",\r\n                \"x_customer_email\": \"facundo.alvarez@epayco.com\",\r\n                \"x_customer_phone\": \"\",\r\n                \"x_customer_movil\": \"3434343433\",\r\n                \"x_customer_ind_pais\": null,\r\n                \"x_customer_country\": \"CO\",\r\n                \"x_customer_city\": \"N/A\",\r\n                \"x_customer_address\": \"N/A\",\r\n                \"x_customer_ip\": \"186.97.212.162\",\r\n                \"x_signature\": \"e9e63913d1de87ef7f64b7b7a6cc1486eb19c7a0e44117662768731689ba324a\",\r\n                \"x_test_request\": \"TRUE\",\r\n                \"x_extra1\": \"\",\r\n                \"x_extra2\": \"\",\r\n                \"x_extra3\": \"\",\r\n                \"x_extra4\": \"\",\r\n                \"x_extra5\": \"\",\r\n                \"x_extra6\": \"\",\r\n                \"x_extra7\": \"\",\r\n                \"x_extra8\": \"\",\r\n                \"x_extra9\": \"\",\r\n                \"x_extra10\": \"\",\r\n                \"url\": \"https://ejemplo.com/confirmacion\",\r\n                \"status\": \"200\",\r\n                \"date\": \"2021-08-20T15:52:16.000000Z\"\r\n            }\r\n        ],\r\n        \"movements\": [],\r\n        \"extras\": {\r\n            \"extra1\": \"\",\r\n            \"extra2\": \"\",\r\n            \"extra3\": \"\",\r\n            \"extra4\": \"\",\r\n            \"extra5\": \"\",\r\n            \"extra6\": \"\",\r\n            \"extra7\": \"\",\r\n            \"extra8\": \"\",\r\n            \"extra9\": \"\",\r\n            \"extra10\": \"\"\r\n        },\r\n        \"cicloPse\": 2\r\n    }\r\n}"
								},
								{
									"name": "Detalle Transacción respuesta fallida",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url_apify}}/transaction/detail",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"transaction",
												"detail"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": " {\"success\": false,\r\n     \"titleResponse\": \"Error\",\r\n     \"textResponse\": \"referencePayco invalid\",\r\n     \"lastAction\": \"consult transaction detail\",\r\n     \"data\": {\r\n        \"totalerrores\": 1,\r\n        \"errores\": [{\r\n            \"codError\": \"E100\",\r\n            \"errorMessage\": \"Error inesperado\"\r\n            }]\r\n      }    \r\n    }"
								}
							]
						},
						{
							"name": "Listar Transacciones",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filter\":{\n\t\t\"transactionInitialDate\":\"2021-08-01 00:00:00\",\n\t\t\"transactionEndDate\":\"2021-08-30 23:59:59\",\n        \"paymentMethodId\":\"PSE\"\n\t},\n\t\"pagination\":{\n\t\t\"page\":1,\n\t\t\"limit\":50\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_apify}}/transaction",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"transaction"
									]
								},
								"description": "Con este endpoint podrá obtener las transacciones de un cliente. Así mismo, puede filtrarlas por estado, fechas, descripción, referencia epayco, referencia cliente, medio de pago y entorno.\n\n## ¿Cómo consultar las transacciones de un cliente?\n\nPara obtener las transacciones de un cliente es necesario realizar la siguiente solicitud.\n\n* Parámetros opcionales para el filtrado en la solicitud\n\n|Parámetros | Descripción|\n|----------------------|------------------|\n|**filter**| `object` `opcional` Parámetros condicionales de filtrado|\n|**pagination**| `object` `opcional` Parámetros correspondientes a la paginación de acuerdo a los resultados.|\n\n> Descripción de parámetros de filtrado\n\n|Parámetros | Descripción|\n|---------------------|------------------|\n|**transactionInitialDate**| `Format Date`  Fecha inicial de las transacciones que desea consultar.|\n|**transactionEndDate**|`Format Date` Fecha final de las transacciones que desea consultar.|\n|**referenceePayco**|`string` Número de referencia.|\n|**referenceClient**|`string` Número de referencia del cliente.|\n|**description**|`string` Descripción de la transacción.|\n|**enviromentId**|`integer` Id del entorno.|\n|**paymentMethodId**|`string` Método de pago.|\n|**statusId**|`integer` Id del estado.|\n\n \n> Parámetros que componen el Array de **pagination**\n\n|Parámetro|Descripción|\n|-------------------|----------------|\n|**page**|`integer` Número de la página.|\n|**limit**|`integer` Cantidad de transacciones por página.|\n\n> Una vez descritos los parámetros, a continuación deberá realizar la solicitud de la forma indicada."
							},
							"response": [
								{
									"name": "Listar Transacciones respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/transaction",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"transaction"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Successful consult\",\n    \"textResponse\": \"successful consult\",\n    \"lastAction\": \"successful consult\",\n    \"data\": {\n        \"pagination\": {\n            \"totalCount\": 11,\n            \"limit\": 1,\n            \"page\": 1\n        },\n        \"data\": [\n            {\n                \"referencePayco\": 16064668,\n                \"referenceClient\": \"FkyMLsxD7pfDn9XxL\",\n                \"transactionDate\": \"2020-03-09\",\n                \"description\": \"Id Cliente 100242\",\n                \"paymentMethod\": \"VS\",\n                \"amount\": 59500,\n                \"status\": \"Aceptada\",\n                \"test\": true\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Reversar Transacción",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"referencePayco\":15319626\n}"
								},
								"url": {
									"raw": "{{url_apify}}/transaction/reversion",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"transaction",
										"reversion"
									]
								},
								"description": "Si necesita reversar una transacción, usted podrá emplear este este endpoint. Donde deberá enviar como parámetro obligatorio la referencia ePayco de la transacción que desea reversar.\n\n## ¿Cómo reversar una transacción?\n\nPara reversar una transacción debe realizar la siguiente consulta."
							},
							"response": [
								{
									"name": "Reversar Transacción respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"referencePayco\":15319626\n}"
										},
										"url": {
											"raw": "{{url_apify}}/transaction/reversion",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"transaction",
												"reversion"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "  { \"sucess\": true,\r\n      \"titleResponse\": \"Transaction reversed\",\r\n     \"textResponse\": \"The transaction #7363636 reversed success\",\r\n     \"lastAction\": \"transaction_reversed\",\r\n      \"data\": {\r\n        \"success\": true,\r\n        \"texto\": \"Transaccion # XXXXXX reversada\"\r\n    }"
								},
								{
									"name": "Reversar Transacción respuesta fallida campos requeridos",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"referencePayco\":15319626\n}"
										},
										"url": {
											"raw": "{{url_apify}}/transaction/reversion",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"transaction",
												"reversion"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "  {\r\n    \"success\": false,\r\n    \"titleResponse\": \"Error\",\r\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\r\n    \"lastAction\": \"validation data\",\r\n    \"data\": {\r\n        \"totalErrors\": 1,\r\n        \"errors\": [\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field referencePayco is type integer\"\r\n            }\r\n        ]\r\n    }\r\n}"
								},
								{
									"name": "Reversar Transacción respuesta fallida transacción inválida",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"referencePayco\":15319626\n}"
										},
										"url": {
											"raw": "{{url_apify}}/transaction/reversion",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"transaction",
												"reversion"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": " {\r\n    \"success\": false,\r\n    \"titleResponse\": \"Invalid transaction\",\r\n    \"textResponse\": \"Remember that the online reversal process can only vary until 9:00 pm on the day of the evolution\",\r\n    \"lastAction\": \"valid_transaction_date\",\r\n    \"data\": []\r\n}"
								},
								{
									"name": "Reversar Transacción respuesta fallida transacción no puede ser reversada",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"referencePayco\":15319626\n}"
										},
										"url": {
											"raw": "{{url_apify}}/transaction/reversion",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"transaction",
												"reversion"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": " {\r\n    \"success\": false,\r\n    \"titleResponse\": \"Transaction cannot be reversed\",\r\n    \"textResponse\": \"The transaction #7363636 cannot be reversed\",\r\n    \"lastAction\": \"transaction_error_reversed\",\r\n    \"data\": {\r\n        \"success\": false,\r\n        \"texto\": \"Transaccion # XXXXX no reversada,\\n                    error:Fallida (No se encontro el recibo)\"\r\n    }\r\n}"
								}
							]
						}
					],
					"description": "En esta sección usted podrá encontrar toda la información relacionada con la consulta de transacciones, movimientos y sus estados."
				},
				{
					"name": "Catálogo",
					"item": [
						{
							"name": "Crear Catálogo",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"id\":\"\",\n\"name\":\"Avon\",\n\"image\":\"\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/catalogue/create",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"catalogue",
										"create"
									]
								},
								"description": ">Si desea crear un nuevo catálogo, con este endpoint podrá hacerlo de la forma en la que se detalla.\n\n## ¿Cómo crear un nuevo catálogo?\n\n> Para realizar esta acción debe hacer la solcitud enviando los siguientes parámetros.\n\n* **Parámetros obligatorios**\n\n|Parámetro|Tipo (longitud)|Descripción|\n|----------|-----------|---------------|\n|**id**|Integer|Identificador único del catálogo (enviar vacio ó 0 para que el id sea asignado por el api).|\n|**name**|String(50)|Nombre del catálogo.\n\n* **Parámetros opcionales**\n\n|Parámetro|Tipo (longitud)|Descripción|\n|----------|-----------|---------------|\n|**image**|String (Base64)| imagen del catálogo.|\n\n* **Solicitud para crear un catálogo**\n\n\n    curl --location --request POST '{{url_apify}}/catalogue/create' \\\n    --header 'Content-Type: application/json' \\\n    --header 'Authorization: Bearer {jwt_token}' \\\n    --data-raw '{\n          \"id\":id,\n          \"name\":\"Nombre del catálogo\"\n      }\n\n\n## Respuesta satisfactoria de la creación de un catálogo\n\n    { \"success\": true,\n      \"titleResponse\": \"Successful created catalogue\",\n      \"textResponse\": \"successful created catalogue\",\n      \"lastAction\": \"catalogue_created\"\",\n      \"data\": {\n        \"id\": 15,\n        \"date\": \"2020-04-23 12:58:11\",\n        \"name\": \"Avon\",\n        \"image\": null,\n        \"clientId\": 100320\n      }\n    }\n\n\n## Ejemplo creación de catálogo\n\n    { \"id\":\"\",\n      \"name\":\"Avon\",\n      \"image\":\"\"\n    }\n\n## Ejemplo de respuesta exitosa\n\n``` json\n{\n    \"success\": true,\n    \"titleResponse\": \"Successful created catalogue\",\n    \"textResponse\": \"successful created catalogue\",\n    \"lastAction\": \"catalogue_created\",\n    \"data\": {\n        \"id\": 15,\n        \"date\": \"2020-04-23 12:58:11\",\n        \"name\": \"Avon\",\n        \"image\": null,\n        \"clientId\": 100320\n    }\n}\n```\n\n## Ejemplo de respuesta fallida\n\n> En caso que no se envíe el campo obligatorio id\n\n```json\n{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data save\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field id is invalid\"\n            }\n        ]\n    }\n}\n```\n\n> En caso que no se envíe el parámetro obligatorio name\n\n\n```json\n{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data save\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field name is invalid\"\n            }\n        ]\n    }\n}\n\n```\n\n> Respuesta de error cuando el formato de la imagen no es el correcto\n\n  \n    {\n    \"success\": false,\n    \"titleResponse\": \"file format not allowed\",\n    \"textResponse\": \"file format not allowed\",\n    \"lastAction\": \"generalException\",\n    \"data\": []\n    }\n\n> Respuesta de error cuando el catálogo está bloqueado o el nombre no está permitido\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Error created catalogue\",\n    \"textResponse\": \"el nombre no cumple\",\n    \"lastAction\": \"catalogue_created\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": \"AED100\",\n                \"errorMessage\": \"el nombre no cumple\"\n            }\n        ]\n    }\n    }\n\n> Respuesta fallida en caso que el nombre del catálogo ya existe para el mismo **client_id** \n\n    {\n      \"success\": false,\n      \"titleResponse\":\"Catalogue name already exist\",\n      \"textResponse\":\"Catalogue name already exist\",\n      \"lastAction\": \"generalException\",\n      \"data\": []\n    }"
							},
							"response": []
						},
						{
							"name": "Listar Catálogo",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_apify}}/catalogue",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"catalogue"
									]
								},
								"description": "> Si desea obtener una lista de los catálogos creados por un cliente en la plataforma puede hacer uso de este endpoint.\n\n## ¿Cómo obtener la lista de los catálogos creados por los clientes?\n\n> Para obtener la lista de catálogos creados por los clientes en la plataforma debe realizar la siguiente solicitud.\n\n\n    curl --location --request POST '{{url_apify}}/catalogue' \\\n    --header 'Content-Type: application/json' \\\n    --header 'Authorization: Bearer {jwt_token}' \\\n\n\n> Adicionalmente, en este endpoint puede enviar como parámetro opcional **filter** que es un objeto compuesto de los siguientes parámetros\n\n\n|Parámetro| Tipo (longitud) | Descripción|\n|----------|----------|------------------|\n| **id**|Integer|Id del catálogo|\n|**name**|String|Nombre del catálogo|\n|**initialDate**|Format Date|Fecha inicial con la que desea realizar el filtro.|\n|**endDate**|Format Date| Fecha final con la que desea filtrar.|\n\n\n> De acuerdo a su necesidad puede enviar los parámetros que requiera.\n\n## Ejemplo de solicitud con filtro\n\n\nPara filtrar debe enviar en el body de la solicitud los parámetros como se indica.\n\n\n\n    {\n\tfilter:{\n           \"id\":1,\n           \"name\":\"catalogo 1\",\n           \"initialDate\";\"2019-11-01\",\n           \"endDate\":\"2019-11-31\"\n\t}\n    }\n\n\n## Ejemplo de respuesta exitosa\n\n    {\"success\": true,\n     \"titleResponse\": \"Successfully consult list catalogue\",\n     \"textResponse\": \"Successfully consult list catalogue\",\n     \"lastAction\": \"consult_list_catalogue\",\n     \"data\": {\n        \"current_page\": 1,\n        \"data\": [{\n            \"id\": 9,\n            \"date\": \"2019-11-14 11:48:55\",\n            \"name\": \"Avon\",\n            \"image\": null\n            },\n            {\"id\": 8,\n             \"date\": \"2019-11-14 11:48:06\",\n              \"name\": \"hola\",\n              \"image\": null\n            }],\n        \"from\": 1,\n        \"last_page\": 1,\n        \"next_page_url\": null,\n        \"path\": \"https://apify.epayco.co/catalogue\",\n        \"per_page\": 50,\n        \"prev_page_url\": null,\n        \"to\": 3,\n        \"total\": 3\n       }\n    }"
							},
							"response": []
						},
						{
							"name": "Actualizar Catálogo",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\n\"id\":\"1\", \"name\":\"Avon 2\", \"image\":\"\"\n\n}"
								},
								"url": {
									"raw": "{{url_apify}}/catalogue/update",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"catalogue",
										"update"
									]
								},
								"description": "> En caso que desee actualizar un catálago existente en la plataforma de ePayco, usted podrá hacerlo con este endpoint.\n\n## ¿Cómo actualizar una catálogo existente en la plataforma?\n\n> Usted debe enviar los siguientes parámetros como obligatorios:\n\n|Parámetro| Tipo (longitud)|Descripción|\n|----------|----------|----------------|\n|**id**|Integer|Identificador único del catálogo.|\n|**name**|String(50)|Nombre del catálogo.|\n\n\n> Los siguientes son opcionales:\n\n|Parámetro| Tipo (longitud)|Descripción|\n|----------|----------|----------------|\n|**image**| String - Base64|imágen del catálogo (Sólo se aceptan formatos JPG, JPEG y PNG).|\n\n* **Solicitud para actualizar un catálogo existente**\n\n    curl --location --request POST '{{url_apify}}/catalogue/update' \\ \n    --header 'Content-Type: application/json' \\\n    --header 'Authorization: Bearer {token_apify}' \\\n    --data-raw '{\n        \"id\": id_catálogo,\n        \"name\": \"nombre a actualizar\"\n      }\n\n## Ejemplo editar catálogo\n\n    {\t\n\t\"id\":\"\",\n\t\"name\":\"Avon 2\",\n\t\"image\":\"\"\t\n    }\n\n## Ejemplo de respuesta exitosa\n\n    {\"success\": true,\n     \"titleResponse\": \"Successful created catalogue\",\n     \"textResponse\": \"successful created catalogue\",\n    \"lastAction\": \"catalogue_created\",\n    \"data\": {\n\t\"id\": \"1\",\n\t\"date\": \"2019-11-14 11:48:55\",\n\t\"name\": \"Avon 2\",\n\t\"image\": null,\n\t\"clientId\": 9375\n       }\t    \n    }\n\n## Ejemplo de respuesta fallida\n\n> Si se envía el campo name obligatorio vacio se obtiene el siguiente error de respuesta\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data save\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field name is invalid\"\n            }\n        ]\n    }\n    } \n\n> Si el formato de la imagen no es correcto recibirá la siguiente respuesta de error\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"file format not allowed\",\n    \"textResponse\": \"file format not allowed\",\n    \"lastAction\": \"generalException\",\n    \"data\": []\n    }\n\n> Respuesta fallida si el catálogo esta bloqueado o el nombre no es permitido\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Error created catalogue\",\n    \"textResponse\": \"el nombre no cumple\",\n    \"lastAction\": \"catalogue_created\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": \"AED100\",\n                \"errorMessage\": \"el nombre no cumple\"\n            }\n        ]\n    }\n    }"
							},
							"response": []
						},
						{
							"name": "Eliminar Catálogo",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\":257\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_apify}}/catalogue/delete",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"catalogue",
										"delete"
									]
								},
								"description": "Para eliminar un catálogo y todos los productos asosciados al mismo empleando este endpoint.\n\n## ¿Cómo eliminar un catálogo?\n\n> Para eliminar un catálogo en la plataforma, es necesario enviar los siguientes parámetros como obligatorios.\n\n|Parámetro| Tipo (longitud)| Descripción|\n|----------|-----------|-----------------|\n|**id**| Integer (11)|Identificador único del catálogo.|\n\n* **Solicitud para eliminar un catálogo**\n\n``` php\ncurl --location --request POST '{{url_apify}}/catalogue/delete' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer {token_apify}' \\\n--data-raw '{\n       \"id\":id_catálago\n      }'\n``` \n## Ejemplo eliminar catálogo\n\n\n    {\"id\": 1}\n\n## Ejemplo de respuesta exitosa\n\n\n    {\"success\": true,\n     \"titleResponse\": \"Successful delete catalogue\",\n     \"textResponse\": \"successful delete catalogue\",\n     \"lastAction\": \"delete catalogue\",\n     \"data\": {}\n    }    \n\n## Ejmplo de respuesta fallida\n\n> Si el campo obligatorio id se envía vacio o no se envía.\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation clientId y data of filter\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field id required\"\n            }\n        ]\n    }\n    }\n\n> Si el id enviado no existe\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Error delete catalogue\",\n    \"textResponse\": \"Error delete catalogue, catalogue not found\",\n    \"lastAction\": \"delete catalogue\",\n    \"data\": []\n    }\n\n> Si intenta eliminar un catálogo que pertenece a otro cliente\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Error delete catalogue\",\n    \"textResponse\": \"Error delete catalogue, catalogue not found\",\n    \"lastAction\": \"delete catalogue\",\n    \"data\": []\n    }"
							},
							"response": []
						},
						{
							"name": "Crear Categoría",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\":\"\",\n\t\"name\":\"otros 600\",\n\t\"catalogueId\":\"1\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/catalogue/category/create",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"catalogue",
										"category",
										"create"
									]
								},
								"description": "> Si desea crear una nueva categoría y asignarla a un catálogo existente en la plataforma de ePayco, empleando este endpoint usted podrá crearla como se indica.\n\n## ¿Cómo crear una nueva categoría para un catálogo?\n\n\n> Usted debe enviar los siguientes parametros como obligatorios:\n\n|Parámetro| Tipo (longitud)|Descripción|\n|----------|----------|----------------|\n|**id**|Integer|Identificador único de la categoría (enviar vacio o 0 para que el id sea asignado por el api).|\n|**name**|String(50)|Nombre de la categoría.|\n|**catalogueId**|String|Indica el Id del catálogo al cual se le asignará la categoría|\n\n\n* **Solicitud para crear una nueva categoría para un catálogo**\n\n\n    curl --location --request POST '{{url_apify}}/catalogue/category/create' \\ \n    --header 'Content-Type: application/json' \\\n    --header 'Authorization: Bearer {token_apify}' \\\n     --data-raw '{\n          \"id\":0,\n          \"name\":\"nombre de la categoría\"\n          \"catalogueId\": \"Id del Catálogo\"\n      }\n\n\n## Respuesta satisfactoria\n\n     {\"success\": true,\n     \"titleResponse\": \"Successful category\",\n     \"textResponse\": \"successful category\",\n     \"lastAction\": \"successful category\",\n     \"data\": {\n        \"id\":id,\n        \"name\": \"categoría\",\n        \"date\": \"YYYY-MM-DD H:i:s\"\n      }\n    }\n\n## Respuestas Fallida\n\n> Catálogo no existe ó falta id y/o name\n\n    {\n      \"success\": false,\n      \"titleResponse\": \"Error\",\n      \"textResponse\": \"Error query to database\",\n      \"lastAction\": \"fetch data from database\",\n      \"data\": {\n        \"totalerrores\": 1,\n        \"errores\": [\n            {\n                \"codError\": \"AE100\",\n                \"errorMessage\": \"Error interno en el servidor, no se logró realizar la acción\"\n            }]\n       }\n    }\n\n\n> Campo de CatalogueId requerido\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation clientId y data of filter\",\n    \"data\": {\n        \"totalerrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field catalogueId is invalid\"\n            }\n        ] }\n    }\n\n> Si intenta crear una categoría para una catálogo de otro usuario recibirá la siguiente respuesta de error\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Error query to database\",\n    \"lastAction\": \"fetch data from database\",\n    \"data\": {\n        \"totalerrores\": 1,\n        \"errores\": [\n            {\n                \"codError\": \"AE100\",\n                \"errorMessage\": \"Error interno en el servidor, no se logró realizar la acción\"\n            }\n        ]\n    }\n    }\n\n> Respuesta fallida cuando el catálogo está bloqueado o el nombre no es permitido\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Error created category\",\n    \"textResponse\": \"el nombre no cumple\",\n    \"lastAction\": \"category_created\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": \"AED100\",\n                \"errorMessage\": \"el nombre no cumple\"\n            }\n        ]\n    }\n    }"
							},
							"response": []
						},
						{
							"name": "Listar Categorías",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url_apify}}/catalogue/category",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"catalogue",
										"category"
									]
								},
								"description": ">Para obtener un listado de las categorpias creas por un cliente en la plataforma de ePayco, podrá consultar este endpoint de la foma indicada.\n\n    curl --location --request POST '{{url_apify}}/catalogue/category' \\ \n    --header 'Content-Type: application/json' \\\n    --header 'Authorization: Bearer {token_apify}' \\\n\n\n> Respuesta\n\n\n``` json\n{ \"success\": true,\n  \"titleResponse\": \"Successful consult\",\n  \"textResponse\": \"successful consult\",\n  \"lastAction\": \"successful consult\",\n  \"data\": {\n      \"current_page\": 1,\n      \"data\": [{\n\t   \"id\": id,\n\t   \"name\": \"Nombre categoría\",\n\t   \"date\": \"YYYY-MM-DD H:i:s\",\n           \"catalogueId\": id_catálogo\n\t  },{...}],\n      \"from\": cantidad.\n      \"last_page\": cantidad,\n      \"next_page_url\": null,\n      \"path\": \"url\",\n     \"per_page\": cantidad_página,\n     \"prev_page_url\": null,\n     \"to\": cantidad,\n     \"total\": total\n}\n```\n"
							},
							"response": []
						},
						{
							"name": "Actualizar Categoría",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\":\"24\",\n\t\"name\":\"otros 10\",\n\t\"catalogueId\":\"1\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/catalogue/category/update",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"catalogue",
										"category",
										"update"
									]
								},
								"description": ">Para actualizar una categoría de un catálogo existente en la plataforma, en este endpoint usted podrá realizar esta acción.\n\n## ¿Cómo actualizar una categoría de una catálogo?\n\n> Para actualizar una categoría debe enviar los siguientes parametros como obligatorios:\n\n|Parámetro|Tipo (longitud)|Descripción|\n|----------|----------|---------------|\n|**id**|Integer|Identificador único del catálogo (enviar vacio o 0 para que el id sea asignado por el api).|\n|**name**|Sring(50)|Nombre de la categoría).|\n|**catalogueId**|String(50)|Id padre del catálogo a la cual pertenece la categoría.|\n\n\n* **Solicitud para actualizar una categoría**\n\n\n    curl --location --request POST                  '{{url_apify}}/catalogue/category/update' \\      \n    --header 'Content-Type: application/json' \\\n    --header 'Authorization: Bearer {token_apify}' \\\n    --data-raw '{\n          \"id\": id,\n          \"name\":\"Nombre categoría\"\n          \"catalogueId\": idCatálogo\n      }\n\n\n## Ejemplo actualización de categoría\n\n    \n    {\"id\":\"\",\n     \"name\":\"Otros\",\n     \"catalogueId\":\"1\"\n    }\n   \n\n## Ejemplo de respuesta exitosa\n\n    {\"success\": true,\n     \"titleResponse\": \"Successful category\",\n     \"textResponse\": \"successful category\",\n     \"lastAction\": \"successful category\",\n     \"data\": {\n        \"id\": 24,\n        \"name\": \"otros\",\n        \"catalogueId\": \"1\",\n        \"date\": \"2019-11-14 13:13:01\"\n      } \n    }\n\n## Ejemplo de respuesta fallida\n\n> Respuesta fallida si el catálogo no existe\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Catalogue not found\",\n    \"textResponse\": \"Catalogue not found\",\n    \"lastAction\": \"UpdateCatalogueGeneralException\",\n    \"data\": []\n    }\n\n> Respuesta fallida categoría no existe\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"category no found\",\n    \"textResponse\": \"category no found\",\n    \"lastAction\": \"UpdateCatalogueGeneralException\",\n    \"data\": []\n    }\n\n> Respuesta fallida cuando hace falta un campo obligatorio en errorMessage se referencia el campo que no se está enviando\n\n     {\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation clientId y data of filter\",\n    \"data\": {\n        \"totalerrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field name required\"\n            }\n        ]\n    }\n    }\n\n> Respuesta fallida cuando la categoría está bloqueada o el nombre no está permitido\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Error created category\",\n    \"textResponse\": \"el nombre no cumple\",\n    \"lastAction\": \"category_created\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": \"AED100\",\n                \"errorMessage\": \"el nombre no cumple\"\n            }\n        ]\n    }\n    }"
							},
							"response": []
						},
						{
							"name": "Eliminar Categoria",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 12345\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_apify}}/catalogue/delete",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"catalogue",
										"delete"
									]
								},
								"description": ">Para eliminar una categoría de una catálogo podrá emplear este endpoint.\n\n¿Cómo eliminiar una categoría de un catálogo?\n\n> Para eliminar una categoría es necesario enviar el parámetro **id**  que representa al identificador único como obligatorio en la solicitud.\n\n    curl --location --request POST '{{url_apify}}/catalogue/delete' \\ \n    --header 'Content-Type: application/json' \\\n    --header 'Authorization: Bearer {token_apify}' \\\n    --data-raw '{\n         \"id\":id\n      }\n\n* **Respuesta satisfactoría de la solicitud**\n\n\n    {\"success\": true,\n     \"titleResponse\": \"Successful delete categoria\",\n     \"textResponse\": \"successful delete categoria\",\n     \"lastAction\": \"delete categoria\",\n     \"data\": {}    \n    }\n\n## Respuesta fallida\n\n> Si está intentando eliminar un catálogo que no existe obtendrá la siguiente respuesta de error.\n\n     {\n    \"success\": false,\n    \"titleResponse\": \"Error delete catalogue\",\n    \"textResponse\": \"Error delete catalogue, catalogue not found\",\n    \"lastAction\": \"delete catalogue\",\n    \"data\": []\n    }\n\n> Si no envía el campo obligatorio **id** obtendrá la siguiente respuesta de error\n\n     {\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation clientId y data of filter\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field id required\"\n            }\n        ]\n    }\n    }"
							},
							"response": []
						},
						{
							"name": "Crear Producto Catálogo",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "      {\n    \"catalogueId\":2,\n    \"id\":\"\",\n    \"currency\":\"COP\",\n    \"amount\":5000,\n    \"quantity\":6000,\n    \"title\":\"Pruebas Producto\",\n    \"description\":\"Pruebas Producto \",\n    \"contactNumber\":\"1234567\",\n    \"contactName\":\"Jhon Doe\",\n    \"shippingTypes\":[\n        {\n            \"type\":\"local\",\n            \"amount\":2000\n        },\n        {\n            \"type\":\"nacional\",\n            \"amount\":5000\n        },\n        {\n        \t\"type\":\"negociable\",\n        \t\"amount\":\"\"\n        }\n    ],\n    \"productReferences\":{\n        \"reference1\":{\n            \"name\":\"referencia1\",\n            \"amount\":2,\n            \"quantity\":1\n        },\n        \"reference2\":{\n            \"name\":\"referencia1\",\n            \"amount\":2,\n            \"quantity\":1\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{url_apify}}/catalogue/products/create",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"catalogue",
										"products",
										"create"
									]
								},
								"description": "Una vez que se tengan creados los catálogos y categorías puede proceder a crear nuevos productos en la plataforma de ePayco enviando las variables mínimas .\n\n## ¿Cómo crear un producto?\n\n> Para crear un nuevo producto usted debe enviar los siguientes parametros como obligatorios:\n\n|Parámetro|Tipo (longitud) | Descripción|\n|----------|----------|-----------------|\n|**id**|Integer|Identificador único del producto, en caso de enviar 0 se asignará un ID por el API.|\n|**title**|String(50)|Título del producto.|\n|**description** |String(600)|Descripción del producto.|\n|**amount**|Float(2 decimales)|Valor a cobrar.|\n|**quantity**|Integer(11)|Cantidad de veces que estará disponible el producto para manejo de inventario.|\n|**currency**|String |Tipo de moneda a desplegar en el checkout (\"COP\"-\"USD\").|\n|**catalogueId**|Integer(11)|Id del catálogo padre del producto.|\n\n> Los siguientes son opcionales:\n\n|Parámetro| Tipo (longitud)|Descripción|\n|---------|-----------|----------------|\n|**categories**|Array|Id de las categorias a las cuales pertenece el producto.|\n|**category_new**|String(50)|Nombre de la nueva categoria a la cual se asociara el producto.|\n|**img**|Array| string en base64 de las imagenes a subir en la nube para el producto. Formatos soportados (png,jpg,jpeg).|\n|**document**|String| base64 del documento a subir en la nube para el producto. Formatos soportados (pdf).|\n|**reference**| Integer(11)|Número de referencia del producto o servicio.|\n|**baseTax**|Float(2 decimales)|Valor base del cobro (sin impuestos).|\n|**tax**|Float(2 decimales)|Valor del impuesto.|\n|**urlConfirmation**|String(255)|Url donde se enviará la confirmacion de cualquier cambio realizado sobre el pago.|\n|**urlResponse**|String(255)|Url donde se redireccionará al usuario después de realizar el pago en el checkout.|\n|**shippingTypes**|Array de objetos tipo shipping|Valores de envio nacional,local,contraentrega,negociable.|\n|**productReferences**|Array de objetos tipo reference|Los objetos tipo referencia agregan caracteristicas como nombre,valor,cantidad,e imagenes, un producto puede tener varias referencias personalizando tallas,colores, u otras características agregando cantidades e imagenes por cada una.|\n|**contactName**|String (100)|Nombre del contacto del producto.|\n|**contactNumber**|Int(15) |Número del contacto del producto.|\n\n\n> Solicitud de la creación de un producto\n\n    curl --location --request POST '{{url_apify}}/catalogue/products/create' \\ \n    --header 'Content-Type: application/json' \\\n    --header 'Authorization: Bearer {token_apify}' \\\n    --data-raw '{\n        \"id\":0,\n        \"title\":\"título\",\n        \"description\": \"descripción\",\n        \"amount\": XXXXX,\n        \"quantity\": XXXX,\n        \"currency\": \"XXX\",\n        \"catalogueId\": id_catálago\n      }\n\n\n**En el Header *Authorization*  debe ir la palabra *Bearer* acompañada del *token* proveido por el endpoint *{{url_apify}}/login*.**\n\n## Ejemplo de Respuesta Exitosa\n\n``` json\t\n{   \"success\": true,\n    \"titleResponse\": \"Successful consult\",\n    \"textResponse\": \"successful consult\",\n    \"lastAction\": \"successful consult\",\n    \"data\": {\n        \"date\": \"2020-04-29 23:41:51\",\n        \"state\": 1,\n        \"txtCode\": \"00207\",\n        \"clientId\": 1,\n        \"quantity\": 6000,\n        \"baseTax\": 0,\n        \"description\": \"Pruebas Producto \",\n        \"title\": \"Pruebas Producto\",\n        \"currency\": \"COP\",\n        \"urlConfirmation\": \"\",\n        \"urlResponse\": \"\",\n        \"tax\": 0,\n        \"amount\": 5000,\n        \"invoiceNumber\": 1588221710,\n        \"expirationDate\": null,\n        \"contactName\": \"Jhon Doe\",\n        \"contactNumber\": \"1234567\",\n        \"routeQr\": \"https://secure2.epayco.io/apprest/printqr?txtcodigo=https://default.epayco.me/catalogo/Catalogo1/207\",\n        \"routeLink\": \"https://default.epayco.me/catalogo/Catalogo1/207\",\n        \"id\": 207,\n        \"shippingTypes\": [\n            {\n                \"type\": \"local\",\n                \"amount\": 2000\n            },\n            {\n                \"type\": \"nacional\",\n                \"amount\": 5000\n            },\n            {\n                \"type\": \"negociable\",\n                \"amount\": \"\"\n            }\n        ],\n        \"categories\": [],\n        \"references\": [\n            {\n                \"id\": 222,\n                \"title\": \"referencia1\",\n                \"quantity\": 1,\n                \"available\": 1,\n                \"amount\": 2,\n                \"date\": \"2020-04-29 23:41:56\",\n                \"txtCode\": \"00207\",\n                \"baseTax\": 0,\n                \"description\": \"Pruebas Producto \",\n                \"currency\": \"COP\",\n                \"urlConfirmation\": \"\",\n                \"urlResponse\": \"\",\n                \"tax\": 0,\n                \"invoiceNumber\": 1588221715,\n                \"expirationDate\": null,\n                \"routeQr\": \"https://secure2.epayco.io/apprest/printqr?txtcodigo=https://default.epayco.me/catalogo/Catalogo1/222\",\n                \"routeLink\": \"https://default.epayco.me/catalogo/Catalogo1/222\",\n                \"img\": []\n            },\n            {\n                \"id\": 223,\n                \"title\": \"referencia1\",\n                \"quantity\": 1,\n                \"available\": 1,\n                \"amount\": 2,\n                \"date\": \"2020-04-29 23:41:58\",\n                \"txtCode\": \"00207\",\n                \"baseTax\": 0,\n                \"description\": \"Pruebas Producto \",\n                \"currency\": \"COP\",\n                \"urlConfirmation\": \"\",\n                \"urlResponse\": \"\",\n                \"tax\": 0,\n                \"invoiceNumber\": 1588221717,\n                \"expirationDate\": null,\n                \"routeQr\": \"https://secure2.epayco.io/apprest/printqr?txtcodigo=https://default.epayco.me/catalogo/Catalogo1/223\",\n                \"routeLink\": \"https://default.epayco.me/catalogo/Catalogo1/223\",\n                \"img\": []\n            }\n        ]\n    }\n}\n```\n\n\n## Ejemplo de Respuesta Fallida \n\n> Respuesta fallida en caso de no enviar el token en la cabecera\n\n``` json\n\t{\n\t\n\t   \"Unauthorized\"\n\t    \n\t}\n```\n\n> Respuesta fallida que se obtendrá si el catálogo no existe o es nulo\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"CatalogueId not found\",\n    \"textResponse\": \"CatalogueId is null\",\n    \"lastAction\": \"create new product\",\n    \"data\": []\n    }\n\n> Respuesta fallida se no se envía alguno de los campos obligatorios, en errorMessage se describe el campo faltante\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data of filter\",\n    \"data\": {\n        \"totalerrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field currency is invalid\"\n            }\n        ]\n    }\n    }\n\n> Si el formato de la imagen no es el correcto recibirá el siguiente error\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"file format not allowed\",\n    \"textResponse\": \"file format not allowed\",\n    \"lastAction\": \"Create new product\",\n    \"data\": []\n    }\n\n> Error al crear un nuevo producto sin nombre\n\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data of filter\",\n    \"data\": {\n        \"totalerrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field title is invalid\"\n            }\n        ]\n    }\n     }\n\n> Error al crear un nuevo producto con **amount** con valor 0\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data of filter\",\n    \"data\": {\n        \"totalerrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field amount is invalid\"\n            }\n        ]\n    }\n    }\n\n> Error al crear un nuevo producto sin cantidades\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data of filter\",\n    \"data\": {\n        \"totalerrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field quantity is invalid\"\n            }\n        ]\n    }\n    }\n\n> Error al crear un producto sin el campo **currency**\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data of filter\",\n    \"data\": {\n        \"totalerrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field currency is invalid\"\n            }\n        ]\n    }\n    }\n\n> Respuesta fallida cuando el producto está bloqueado o el nombre no está permitido\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Error created catalogue products\",\n    \"textResponse\": \"no cumple\",\n    \"lastAction\": \"catalogue products created\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": \"AED100\",\n                \"errorMessage\": \"no cumple\"\n            }\n        ]\n    }\n    }\n\n> Respuesta fallida cuando el nombre de la referencia se envía vacío\n\n\n     {\n      \"success\":false,\n      \"titleResponse\": \"Invalid referenceX field name invalid\",\n     \"textResponse\":\"Invalid referenceX field name invalid\",\n     \"lastAction\":\"Create new product\"\n     \"data\": []\n    }\n\n> Respuesta fallida cuando la descripción se envía vacía o excede el límite de carácteres permitidos\n\n    {\n     \"success\":false,\n     \"titleResponse\":\"Error\",\n     \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n     \"lastAction\":\"validation data of filter\",\n     \"data\": {\n        \"totalErrors\":1,\n        \"errors\":[\n            {\n               \"codError\":500,\n               \"errorMessage\":\"field description is invalid\"\n            }\n           ]\n          }\n       }\n\n"
							},
							"response": []
						},
						{
							"name": "Listar Catálogo Productos",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filter\":{\n\t\t\"id\":1,\n\t\t\"catalogueId\":1,\n        \"title\": \"tenis\"\n\t}\n}"
								},
								"url": {
									"raw": "{{url_apify}}/catalogue/products",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"catalogue",
										"products"
									]
								},
								"description": "Para obtener una lista de todos los productos de un catálogo de productos y filtrarlos, usted podrá emplear este endpoint.\n\n\n## ¿Cómo obtener la lista de productos de un catálogo?\n\n>\n> Para obtener una lista de los productos de un catálogo es necesario realizar la solicitud.\n\n    curl --location --request POST '{{url_apify}}/catologue/products' \\ \n    --header 'Content-Type: application/json' \\\n    --header 'Authorization: Bearer {token_apify}' \\\n    --data-raw '{\n          \"filter\" : {\n             \"id\":id,\n             \"catalogueId\": id_catálogo,\n             \"title\": \"título\"\n           }\n      }\n\n\n> Ejemplo filter:\n\n``` json\n    {\n\t\"filter\":{\n\t    \"id\":15,\n\t    \"catalogueId\":1\n\t    \"title\":\"tenis\"\n       \t}\n    }\n```\t\n\n## Ejemplo Respuesta:\n\n``` json\n{\n    \"success\": true,\n    \"titleResponse\": \"Successful consult\",\n    \"textResponse\": \"successful consult\",\n    \"lastAction\": \"successful consult\",\n    \"data\": {\n        \"current_page\": 1,\n        \"data\": [\n            {\n                \"date\": \"2020-04-29 23:04:42\",\n                \"state\": 1,\n                \"txtCode\": \"00205\",\n                \"clientId\": 1,\n                \"quantity\": 6000,\n                \"baseTax\": null,\n                \"description\": \"Pruebas Producto \",\n                \"title\": \"Pruebas Producto\",\n                \"currency\": \"COP\",\n                \"urlConfirmation\": \"\",\n                \"urlResponse\": \"\",\n                \"tax\": 0,\n                \"amount\": 5000,\n                \"invoiceNumber\": \"1588219481\",\n                \"expirationDate\": null,\n                \"contactName\": null,\n                \"contactNumber\": null,\n                \"routeQr\": \"https://secure2.epayco.io/apprest/printqr?txtcodigo=https://default.epayco.me/catalogo/Catalogo1/205\",\n                \"routeLink\": \"https://default.epayco.me/catalogo/Catalogo1/205\",\n                \"id\": 205,\n                \"shippingTypes\": [],\n                \"categories\": [],\n                \"references\": [\n                    {\n                        \"id\": 220,\n                        \"title\": \"referencia1\",\n                        \"quantity\": 1,\n                        \"available\": 1,\n                        \"amount\": 2,\n                        \"date\": \"2020-04-29 23:35:34\",\n                        \"txtCode\": \"00205\",\n                        \"baseTax\": 0,\n                        \"description\": \"Pruebas Producto \",\n                        \"currency\": \"COP\",\n                        \"urlConfirmation\": \"\",\n                        \"urlResponse\": \"\",\n                        \"tax\": 0,\n                        \"invoiceNumber\": \"1588219485\",\n                        \"expirationDate\": null,\n                        \"routeQr\": \"https://secure2.epayco.io/apprest/printqr?txtcodigo=https://default.epayco.me/catalogo/Catalogo1/220\",\n                        \"routeLink\": \"https://default.epayco.me/catalogo/Catalogo1/220\",\n                        \"img\": []\n                    },\n                    {\n                        \"id\": 221,\n                        \"title\": \"referencia1\",\n                        \"quantity\": 1,\n                        \"available\": 1,\n                        \"amount\": 2,\n                        \"date\": \"2020-04-29 23:35:34\",\n                        \"txtCode\": \"00205\",\n                        \"baseTax\": 0,\n                        \"description\": \"Pruebas Producto \",\n                        \"currency\": \"COP\",\n                        \"urlConfirmation\": \"\",\n                        \"urlResponse\": \"\",\n                        \"tax\": 0,\n                        \"invoiceNumber\": \"1588219487\",\n                        \"expirationDate\": null,\n                        \"routeQr\": \"https://secure2.epayco.io/apprest/printqr?txtcodigo=https://default.epayco.me/catalogo/Catalogo1/221\",\n                        \"routeLink\": \"https://default.epayco.me/catalogo/Catalogo1/221\",\n                        \"img\": []\n                    }\n                ]\n            }\n        ],\n        \"from\": 1,\n        \"last_page\": 1,\n        \"next_page_url\": null,\n        \"path\": \"/\",\n        \"per_page\": 50,\n        \"prev_page_url\": null,\n        \"to\": 1,\n        \"total\": 1\n    }\n}\n```"
							},
							"response": []
						},
						{
							"name": "Actualizar Producto Catálogo",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\":17,\n  \"quantity\": 50,\n  \"reference\": \"12345678\",\n  \"amount\": \"119000\",\n  \"currency\": \"COP\",\n  \"baseTax\": \"0\",\n  \"description\": \"tenis negros\",\n  \"title\": \"tenis\",\n  \"tax\": \"19\",\n  \"catalogueId\":1,\n  \"categories\":[1,2,3],\n  \"category_new\":\"cosas nuevas\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/catalogue/products/update",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"catalogue",
										"products",
										"update"
									]
								},
								"description": "Si desea actualizar los productos existentes de un catálogo en la plataforma de ePayco, en este endpoint usted podrá actualizarlos las variables mínimas .\n\n## ¿Cómo actualizar un producto?\n\n> Para actualizar una producto es necesario enviar los siguientes parametros como obligatorios:\n\n|Parámetro|Tipo (longitud)|Descripción|\n|---------|----------|----------------------|\n|**id**|Integer|Identificador único del producto.|\n|**title**|String (500)|Título del producto.|\n|**description**|String (600)|Descripción del producto.|\n|**amount**|Float (2 decimales)|Valor a cobrar.|\n|**quantity**|Integer(11)|Cantidad de veces que estará disponible el producto para manejo de inventario.|\n|**currency**|String|Tipo de moneda a desplegar en el checkout (\"COP\"-\"USD\").|\n|**catalogueId**|Integer (11)|Id del catálogo padre del producto.|\n\n\n> Los siguientes son opcionales:\n\n\n|Parámetro|Tipo (longitud)|Descripción|\n|---------|-----------|--------------------|\n|**categories**|Array|los Id de las categorias a las cuales pertenece el producto.|\n|**category_new**|String(50)|Nombre de la nueva categoria a la cual se asociara el producto.|\n|**img**|Array|Valores en string en base64 de las imagenes a subir en la nube para el producto. Formatos soportados (png,jpg,jpeg).|\n|**reference**|Integer(11)|Número de documento de identificación del cliente.|\n|**baseTax**|Float(2 decimales)|Es el valor base del cobro (sin impuestos).|\n|**tax**|Float(2 decimales)|Es el valor del impuesto.|\n|**urlConfirmation**|String(255)|Url donde se enviará la confirmacion de cualquier cambio realizado sobre el pago.|\n|**urlResponse**|String(255)|Url donde se redireccionará al usuario después de realizar el pago en el checkout.|\n|**shippingTypes**|Array|objetos tipo shipping  - Valores de envio nacional,local,contraentrega.|\n|**productReferences**|Array|objetos tipo reference - Los objetos tipo referencia agregan caracteristicas como nombre,valor,cantidad,e imagenes, un producto puede tener varias referencias personalizando tallas,colores, u otras características agregando cantidades e imagenes por cada una).|\n|**contactName**|String(100)|Nombre del contacto del producto.|\n|**contactNumber**|Int(15)|Número del contacto del producto.|\n\n\n \n> Solicitud para actualizar los productos de una catálogo\n\n\n    curl --location --request POST '{{url_apify}}/catalogue/products/update' \\ \n    --header 'Content-Type: application/json'      \n    --header 'Authorization: Bearer {token_apify}' \\\n     --data-raw '{\n         \"id\":id,\n         \"quantity\": XXX,\n         \"reference\": \"XXXXXXXX\",\n         \"amount\": \"XXXXXX\",\n         \"currency\": \"XXX\",\n         \"baseTax\": \"XXX\",\n         \"description\": \"Descripción\",\n         \"title\": \"Título\",\n         \"tax\": \"XX\",\n         \"catalogueId\":id_catálogo,\n         \"categories\":[1,2,3],\n         \"category_new\":\"nueva categoría\"\n      }\n\n**En el Header *Authorization*  debe ir la palabra *Bearer* acompañada del *token* proveido por el endpoint */login*.**\n\n\n\n## Ejemplo de Respuesta Exitosa\n\t\n\t{  \n\t    \n\t    \"success\": true,\n\t    \"titleResponse\": \"Successful consult\",\n\t    \"textResponse\": \"successful consult\",\n\t    \"lastAction\": \"successful consult\",\n\t    \"data\": {\n\t        \"date\": \"2019-11-12 02:02:12\",\n\t        \"state\": 1,\n\t        \"txtCode\": \"00020\",\n\t        \"clientId\": 9375,\n\t        \"quantity\": 50,\n\t        \"baseTax\": 0,\n\t        \"description\": \"tenis negros\",\n\t        \"title\": \"tenis\",\n\t        \"currency\": \"COP\",\n\t        \"urlConfirmation\": \"\",\n\t        \"urlResponse\": \"\",\n\t        \"tax\": 0,\n\t        \"amount\": \"119000\",\n\t        \"invoiceNumber\": 1573542132,\n\t        \"expirationDate\": null,\n\t        \"routeQr\": \"secure.payco.co/apprest/images/QRcodes/00020.png\",\n\t        \"id\": 20,\n\t        \"categories\":[1,2]\n\t    }\n\t    \n\t}\n\n\n## Ejemplo de Respuesta Fallida \n\n\t{\n\t\n\t   \"Unauthorized\"\n\t    \n\t}\n\n## Respuesta fallida cuando el producto está bloqueado o el nombre no está permitido\n\n    {\n    \"success\": false,\n    \"titleResponse\": \"Error created catalogue products\",\n    \"textResponse\": \"no cumple\",\n    \"lastAction\": \"catalogue products created\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": \"AED100\",\n                \"errorMessage\": \"no cumple\"\n            }\n        ]\n    }\n    }"
							},
							"response": []
						},
						{
							"name": "Eliminar Producto Catálogo",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\":27\n\n}"
								},
								"url": {
									"raw": "{{url_apify}}/catalogue/products/delete",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"catalogue",
										"products",
										"delete"
									]
								},
								"description": ">Para eliminar un productos de un catálogo existente en la plataforma de ePayco, podrá eliminarlo empleando este endpoint.\n\n## ¿Cómo eliminar un producto?\n\nUsted debe enviar el **id** el identificador único del producto como parámetro obligatorio\n\n**Tipo Autenticación:** *Bearer Token*  \n\n**En el Header *Authorization*  debe ir la palabra *Bearer* acompañada del *token* proveido por el endpoint */login*.**\n\n> Para realizar esta solicitud debe hacerla de la forma indicada.\n\n    curl --location --request POST '{{url_apify}}/catalogue/products/delete' \\ \n    --header 'Content-Type: application/json' \\\n    --header 'Authorization: Bearer {token_apify}' \\\n    --data-raw '{\n           \"id\":id_producto\n       }\n\n\n## Ejemplo de Respuesta Exitosa\n\t\n    {\"success\": true,\n     \"titleResponse\": \"Successful delete catalogue product\",\n     \"textResponse\": \"Successful delete catalogue product\",\n     \"lastAction\": \"Successful delete catalogue product\",\n     \"data\": []\n    }\n\n\n## Ejemplo de Respuesta Fallida \n\n\t{\t\n\t   \"Unauthorized\"\t    \n\t}"
							},
							"response": []
						},
						{
							"name": "obtener información de carrito",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"id\":\"70dd21597070780def1\",\n   \"origin\":\"epayco\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/catalogue/shoppingcart/find",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"catalogue",
										"shoppingcart",
										"find"
									]
								},
								"description": "Si desea obtener la información del carro de compras puede realizarlo empleando este endpoint, que tenemos a su disposición.\n\nPara realizar esta función de manera correcta debe realizar los pasos descritos.\n\n## ¿Cómo obtener la información del carro de compras?\n\nPara obtener la información del carro de compras se debe enviar los siguientes parámetros debe enviar los siguientes parámetros: \n\n\n|Parámetro| Tipo (longitud)|Descripción|\n|---------|--------|------------------|\n|id| Int(11) obligatorio| Id del carro de compras al que se desea obtener la información.|\n|origin| String(50)| Indica el origen del carro de compras es obligatorio para el proyecto de vende, se debe enviar el valor \"epayco\"|\n\n\n## Ejemplo de Respuesta Exitosa\n\t\n``` json\n{\n    \"success\": true,\n    \"titleResponse\": \"List Shopping cart\",\n    \"textResponse\": \"List Shopping cart\",\n    \"lastAction\": \"shopping_cart\",\n    \"data\": {\n        \"id\": \"4dad316225840287fbf4\",\n        \"total\": 400,\n        \"quantity\": 4,\n        \"state\": \"activo\",\n        \"date\": \"2021-06-01T16:47:08-05:00\",\n        \"sellerPhone\": \"3122718796\",\n        \"channel\": \"\",\n        \"contactName\": \"\",\n        \"contactPhone\": \"\",\n        \"clientId\": 100631,\n        \"address\": \"\",\n        \"city\": \"\",\n        \"email\": \"\",\n        \"commissions\": [{\n              \"value\": 0,\n              \"channel\": \"DPA\"\n           },\n           {\n              \"value\": 595,\n              \"channel\": \"RDP\"\n         }],\n        \"products\": [{\n            \"id\": 1622563360085,\n            \"quantity\": 4,\n            \"productData\": {\n            \"available\": 995,\n            \"date\": \"2021-06-01T11:05:29-05:00\",\n            \"state\": 1,\n            \"txtCode\": 1622563360085,\n            \"clientId\": 100631,\n            \"quantity\": 2000,\n            \"baseTax\": 0,\n            \"description\": \"Descripcion\",\n            \"title\": \"Galleta de fresa\",\n            \"currency\": 0,\n            \"urlConfirmation\": \"\",\n            \"urlResponse\": \"\",\n            \"tax\": 0,\n            \"amount\": 100,\n            \"invoiceNumber\": null,\n            \"expirationDate\": null,\n            \"contactName\": null,\n            \"contactNumber\": null,\n            \"routeQr\": 1622563360085,\n            \"routeLink\": 1622563360085,\n            \"id\": 1622563360085,\n            \"discountRate\": 10,\n            \"discountPrice\": 0,\n            \"shippingTypes\": [],\n            \"references\": [],\n            \"categories\": [\n                   \"1622498875362\"\n                    ],\n            \"img\": [\n               \"https://multimedia-epayco-test.s3.amazonaws.com/vende/productos/100631_1622563529_954.png\"\n                 ]\n                },\n             \"position\": 1\n            }\n        ]\n    }\n}\n```"
							},
							"response": []
						},
						{
							"name": "listar carro de compra de un cliente",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"filter\" : {\n       \"state\" : \"eliminado\"\n   }\n}"
								},
								"url": {
									"raw": "{{url_apify}}/catalogue/shoppingcart/list",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"catalogue",
										"shoppingcart",
										"list"
									]
								},
								"description": "Si desea listar los carros de compras de un clientes puede listarlos empleando este endpoint, que tenemos a su disposición.\n\nPara realizar esta función de manera correcta debe realizar los pasos descritos.\n\n## ¿Cómo listar los carros de compras de un cliente?\n\nPara listar los carros de compras no es necesario enviar algún parámetros obligatorio. Sin embargo, puede emplear las opciones de filtrado de los carros de compras con los siguientes parámetros: \n\n|Parámetro| Descripción|\n|-----|---------------------------|\n|filter| Object parámetro compuestos de los campos para las opciones de filtrado.|\n\nDescripción de los parámetros que puede contener el campo filter.\n\n|Parámetros | Tipo (longitud)| Descripción|\n|-----------|------|-----------------------|\n|id| string | Indica el id del carro de compras.|\n|state| String(50) opcional| Hace referencia al estado del carro de compras, los valores aceptados en este parámetros son: \"activo\", \"procesando_pago\", \"abandonado\", \"eliminado\" o \"pagado\".|\n|initialDate| String(10) opcional| Indica la fecha inicial para limitar la consulta de carros de compras por fecha de creación en formato YYYY-MM-DD.|\n|endDate|String(10) opcional| Indica la fecha final para limitar la consulta de carros de compras por fecha de creación en formato YYYY-MM-DD.|\n|minAmount| double opcional| Monto mínimo para filtrar y limitar el listado de carritos.|\n|maxAmount| double opcional| Monto máximo para filtrar y limitar el listado de carritos.|\n\n\n## Ejemplo de Respuesta Exitosa\n\t\n``` json\n{\n    \"success\": true,\n    \"titleResponse\": \"List Shopping cart\",\n    \"textResponse\": \"List Shopping cart\",\n    \"lastAction\": \"shopping_cart\",\n    \"data\": [\n        {\n            \"id\": \"38bf51627492124c69c9\",\n            \"total\": 100,\n            \"quantity\": 1,\n            \"state\": \"activo\",\n            \"date\": \"2021-07-28T12:19:02-05:00\",\n            \"clientId\": 76956\n        },\n        {\n            \"id\": \"0c53716270776320f078\",\n            \"total\": 100,\n            \"quantity\": 1,\n            \"state\": \"activo\",\n            \"date\": \"2021-07-23T17:00:35-05:00\",\n            \"clientId\": 76956\n        }\n    ]\n}\n```\n\n## Respuesta cuando no existen carritos para los parámetros definidos en el filtro\n\n```\n{\n    \"success\": true,\n    \"titleResponse\": \"List Shopping cart\",\n    \"textResponse\": \"List Shopping cart\",\n    \"lastAction\": \"shopping_cart\",\n    \"data\": []\n}\n```"
							},
							"response": []
						}
					],
					"description": "Esta sección esta creada para proporcionarle a usted toda la información relacionada con los catálogos de los clientes, por medio del uso de los endpoint que se detallan a continuación, usted podrá crear, listar, actuarlizar o eliminar catálagos. Adicionalmente, podrá realizar estas mismas acciones para la opción de categorías y catálogo productos.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Retiros",
					"item": [
						{
							"name": "Retirar Dinero ePayco",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"bankAccountId\":6889,\n\"total\":100.000\n}"
								},
								"url": {
									"raw": "{{url_apify}}/withdraw/epayco/create",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"withdraw",
										"epayco",
										"create"
									]
								},
								"description": "Para solicitar el retiro del dinero de una cliente en la plataforma ePayco, en este endpoint usted podrá realizar esta solicitud.\n\n## ¿Cómo crear un retiro?\n\n> Usted debe enviar los siguientes parámetros como obligatorios:\n\n|Parámetro| Descripción|\n|--------------------|---------------------|\n|**bankAccountId**|`integer(11)` `obligatorio` Id cuenta bancaria del cliente obtenida del siguiente endpoint [withdraw](https://api.epayco.co/#a5e9ea74-a7e5-4d60-a86b-8e44b532bc42).|\n|**total**|`float(2 decimales)` `obligatorio` Total a retirar.|\n\n\n## Importante\n\nePayco cobrará las comisiones respectivas al total enviado, el cliente recibe en su cuenta bancaria el total a retirar menos los costos de comisiones bancarias. \n\n|Ejemplo|\n|-----------------------------------|\n|Saldo Cliente = 100,000|\n|Total a Retirar = 100,000|\n|Comision Retiro = 7,735|\n| Cuatro x mil (gmf)=0|\n|Total Abono banco = 92,265|"
							},
							"response": [
								{
									"name": "respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"bankAccountId\":6889,\n\"total\":100.000\n}"
										},
										"url": {
											"raw": "{{url_apify}}/withdraw/epayco/create",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"withdraw",
												"epayco",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{   \"success\": true,\r\n    \"titleResponse\": \"Successful ePayco withdraw create\",\r\n    \"textResponse\": \"successful ePayco withdraw create\",\r\n    \"lastAction\": \"ePayco withdraw create\",\r\n    \"data\": {\r\n        \"balance\": {\r\n             \"previousBalance\": 100,000,\r\n             \"newBalance\": 0\r\n         },\r\n         \"withdraw\": {\r\n             \"total\": 100,000,\r\n             \"commission\": 6500,\r\n             \"tax\": 1235,\r\n             \"gmf\": 0,\r\n             \"totalReceiverFee\": 7,735,\r\n             \"totalReceiver\": 92,265\r\n           }\r\n      }\r\n}"
								},
								{
									"name": "respuesta fallida cuenta no pertenece al cliente",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"bankAccountId\":6889,\n\"total\":100.000\n}"
										},
										"url": {
											"raw": "{{url_apify}}/withdraw/epayco/create",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"withdraw",
												"epayco",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n    \"success\": false,\r\n    \"titleResponse\": \"The bank does not correspond to the client\",\r\n    \"textResponse\": \"The bank does not correspond to the client\",\r\n    \"lastAction\": \"createWithdraw\",\r\n    \"data\": {\r\n        \"error\": \"The bank does not correspond to the client\"\r\n    }\r\n}"
								}
							]
						},
						{
							"name": "Listar cuentas bancarias",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url_apify}}/withdraw/consult",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"withdraw",
										"consult"
									]
								},
								"description": "Para listar las cuentas bancarias, saldos y comisiones de retiro de un cliente de ePayco, puede emplear este endpoint el cual funciona tanto para cuentas ePayco y cuentas Paypal."
							},
							"response": [
								{
									"name": "respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_apify}}/withdraw/consult",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"withdraw",
												"consult"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": " {   \"success\": true,\r\n        \"titleResponse\": \"Successful withdraw\",\r\n        \"textResponse\": \"successful withdraw\",\r\n        \"lastAction\": \"withdraw\",\r\n        \"data\": {\r\n            \"epayco\": {\r\n               \"withdrawCommission\": XXX,\r\n               \"cuatroPorMil\": false,\r\n               \"accountBanks\": [\r\n                {\r\n                  \"shortNumber\": \"******\",\r\n                  \"typeAccount\": \"tipo de cuenta\",\r\n                  \"bank\": \"Banco\",\r\n                  \"idAccountBank\": XXX,\r\n                  \"idBank\": XXXX,\r\n                  \"default\": false,\r\n                  \"id\": XXX,\r\n                  \"tag\": null,\r\n                  \"idState\": id_estado\r\n                },{...}\r\n            ],\r\n            \"accountBankDefault\": \"\",\r\n            \"accountDefaultBankId\": \"\",\r\n            \"withdrawMonth\": XXXX,\r\n            \"normalCommission\": XXXX,\r\n            \"defaultCommission\": XXXX,\r\n            \"trmDia\": XXXXX\r\n        },\r\n        \"paypal\": {\r\n            \"trmDia\": XXXX,\r\n            \"accountBanksPayPal\": [\r\n                {\r\n                  \"id\": XXX,\r\n                  \"typeAccountId\": id_tipo_cuenta,\r\n                  \"shortNumber\": \"XXXX\",\r\n                  \"idAccountBank\": XXX,\r\n                  \"idBank\": XXXX,\r\n                  \"idState\": id_estado,\r\n                  \"default\": false,\r\n                  \"typeAccountDavivienda\": null,\r\n                    \"tag\": null\r\n                },{...}\r\n            ],\r\n            \"topDayPayPal\": XXX,\r\n            \"amountCommissionPayPal\": XX,\r\n            \"gmfPayPal\": true\r\n          }\r\n      }    \r\n    }"
								}
							]
						}
					],
					"description": "En esta sección podrá encontrar las solicitudes necesarias para los retiro de dinero de la plataforma ePayco."
				},
				{
					"name": "Paypal",
					"item": [
						{
							"name": "Vinculación de cuenta Paypal",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_apify}}/paypal/associate",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"paypal",
										"associate"
									]
								},
								"description": "Si desea vincular un cliente con los servicios de Paypal, usted podrá usar este endpoint para realizar dicha acción.\n\n> Este servicio consta de 3 pasos:\n\n1) Descargar el script del lado del cliente y configuar los parametros appid,return url.\n\n2) En la url de respuesta cerrar el modal abierto por el script anterior donde el cliente se logueo en paypal y dio permisos para vincular su cuenta y enviar los parametros code y apiResponse a la url https://apify.epayco.co/paypal/associate.\n\n3) Preparar una segunda url de notificación enviada en apiResponse para recibir la respuesta final de la vinculación.\n\n\n##  Paso 1 Script del lado del cliente\n\n``` javascript\n<script src='https://www.paypalobjects.com/js/external/connect/api.js'></script>\n<script>\n    const host = window.location.host;\n    paypal.use(['login'], function (login) {\n        login.render({\n            \"appid\": \"App Id Enviado por ePayco\",\n            \"authend\": \"sandbox\",\n            \"scopes\": \"openid profile email address https://uri.paypal.com/services/paypalattributes https://uri.paypal.com/services/wallet/balance-accounts/read https://uri.paypal.com/transfers/withdrawals https://uri.paypal.com/transfers/deposits\",\n            \"containerid\": \"div_contenedor_boton\",\n            \"responseType\": \"code\",\n            \"locale\": \"es-es\",\n            \"buttonType\": \"CWP\",\n            \"buttonShape\": \"pill\",\n            \"buttonSize\": \"lg\",\n            \"fullPage\": \"false\",\n            \"returnurl\": \"https://url_respuesta\"\n        });\n    });\n</script>\n```\n\n## Paso 2 Enviar el code y la url final de notificación.\n\nLuego de ejecutar este script y que la persona se logue en paypal y retorne a la url de respuesta se debe consumir la siguiente url:\n\n> https://apify.epayco.co/paypal/associate\n\n\nA esta url se debe enviar los siguiente parametros.\n\n``` json\n{\n    \"apiResponse\":\"url de notificación despues de vincular al cliente en Paypal \",\n    \"code\":\"codigo retornado por paypal en la url de respuesta indicada en el script\"\n}\n```\n\n## Paso 3 / Respuesta final notificación de vincualación.\n\nA la url proporcionada en apiResponse ePayco enviará los siguientes parametros via POST."
							},
							"response": [
								{
									"name": "respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_apify}}/paypal/associate",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"paypal",
												"associate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Successful PayPal associated PayPal\",\n    \"textResponse\": \"successful PayPal associated PayPal\",\n    \"lastAction\": \"paypal_PayPal associated\",\n    \"data\": {\n        \"balance\": {\n            \"available\": \"972.06\",\n            \"pending\": 0,\n            \"total\": \"972.06\",\n            \"currency\": \"USD\"\n        },\n        \"associated\": true\n    }\n}"
								}
							]
						},
						{
							"name": "Retirar Dinero Paypal",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"bankAccountId\":6889,\n\"total\":1\n}"
								},
								"url": {
									"raw": "{{url_apify}}/withdraw/paypal/create",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"withdraw",
										"paypal",
										"create"
									]
								},
								"description": "En este endpoint usted podrá solicitar el retiro de un cliente previamente vinculado a Paypal.\n\n## ¿Cómo crear un retiro?\n\n> Usted debe enviar los siguientes parámetros como obligatorios:\n\n|Parámetro|Descripción|\n|------------------|-------------------|\n|**bankAccountId**|`integer(11)` Id cuenta bancaria del cliente obtenida del siguiente endpoint [withdraw](https://api.epayco.co/#a5e9ea74-a7e5-4d60-a86b-8e44b532bc42).|\n|**total**|`float(2)` Total a retirar.|\n\n## Importante\n\nePayco cobrará las comisiones respectivas al total enviado, el cliente recibe en su cuenta bancaria el total a retirar menos los costos de comisiones bancarias. \n\n|Ejemplo|\n|---------------------------------------|\n|Saldo Cliente = 100,000|\n|Total a Retirar = 100,000|\n|Comision Retiro = 7,735|\n|Cuatro x mil (gmf)=0|\n|Total Abono banco = 92,265|"
							},
							"response": [
								{
									"name": "respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"bankAccountId\":6889,\n\"total\":1\n}"
										},
										"url": {
											"raw": "{{url_apify}}/withdraw/paypal/create",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"withdraw",
												"paypal",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Successful PayPal withdraw create\",\n    \"textResponse\": \"successful PayPal withdraw create\",\n    \"lastAction\": \"paypal_PayPal withdraw create\",\n    \"data\": {\n        \"balance\": {\n            \"previousBalance\": 986.06,\n            \"newBalance\": 973.146\n        },\n        \"withdraw\": {\n            \"total\": 12.914,\n            \"commission\": 10,\n            \"tax\": 1.9,\n            \"gmf\": 0.051656,\n            \"totalReceiverFee\": 11.951656,\n            \"totalReceiver\": 0.9623439999999999\n        }\n    }\n}"
								},
								{
									"name": "respuesta fallida cuenta bancaria no pertenece al cliente",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"bankAccountId\":6889,\n\"total\":1\n}"
										},
										"url": {
											"raw": "{{url_apify}}/withdraw/paypal/create",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"withdraw",
												"paypal",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"The bank does not correspond to the client\",\n    \"textResponse\": \"The bank does not correspond to the client\",\n    \"lastAction\": \"createWithdraw\",\n    \"data\": {\n        \"error\": \"The bank does not correspond to the client\"\n    }\n}"
								}
							]
						}
					],
					"description": "En esta sección se detallan todas las acciones que se pueden realizar en la plataforma de Paypal, como vinculación de cuentas y retiro de dinero."
				},
				{
					"name": "Subscripciones",
					"item": [
						{
							"name": "Crear token tarjeta",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cardNumber\":\"4575623182290326\",\n    \"cardExpYear\":\"2019\",\n    \"cardExpMonth\":\"12\",\n    \"cardCvc\":\"123\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/token/card",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"token",
										"card"
									]
								},
								"description": "Si desea tener mayor seguridad al realizar transacciones con tarjeta de crédito, en este endpoint usted podrá crear un token de la tarjeta de crédito y procesar los futuros pagos empleando este token.\n\n## ¿Cómo tokenizar una tarjeta?\n\n> Usted debe enviar los siguientes parámetros como obligatorios:\n\n|Parámetro|Descripción|\n|-------------------|----------------------|\n|**cardNumber**|`string(16)` Número de tarjeta.|\n|**cardExpYear**| `string(2)` Fecha año de expiración (AA)|\n|**cardExpMonth** |`string(2)` Fecha mes de expiración.|\n|**cardCvc**|`string(4)` CVV.|\n\n## Importante\n\n>Es muy importante almacenar los datos los datos de los token cuando se procese por primera vez, y así evitar crear distintos token de una misma tarjeta ya generada anteriormente."
							},
							"response": [
								{
									"name": "Crear token tarjeta respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cardNumber\":\"4575623182290326\",\n    \"cardExpYear\":\"2019\",\n    \"cardExpMonth\":\"12\",\n    \"cardCvc\":\"123\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/token/card",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"token",
												"card"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Success token generate\",\n    \"textResponse\": \"Success token generate\",\n    \"lastAction\": \"token_card\",\n    \"data\": {\n        \"status\": true,\n        \"id\": \"6MPbuNLPbMiBR2PR9\",\n        \"success\": true,\n        \"type\": \"card\",\n        \"data\": {\n            \"status\": \"exitoso\",\n            \"id\": \"6MPbuNLPbMiBR2PR9\",\n            \"created\": \"12/18/2019\",\n            \"livemode\": false\n        },\n        \"card\": {\n            \"exp_month\": \"12\",\n            \"exp_year\": \"2019\",\n            \"name\": \"visa\"\n        },\n        \"object\": \"token\"\n    }\n}"
								},
								{
									"name": "Crear token tarjeta campos requeridos",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cardNumber\":\"4575623182290326\",\n    \"cardExpYear\":\"2019\",\n    \"cardExpMonth\":\"12\",\n    \"cardCvc\":\"123\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/token/card",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"token",
												"card"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data\",\n    \"data\": {\n        \"totalErrors\": 13,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field cardNumber required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field cardExpYear required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field cardExpMonth required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field cardCvc required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field dues required\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "Crear token tarjeta error de campos Copy",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cardNumber\":\"4575623182290326\",\n    \"cardExpYear\":\"2019\",\n    \"cardExpMonth\":\"12\",\n    \"cardCvc\":\"123\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/token/card",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"token",
												"card"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data\",\n    \"data\": {\n        \"totalErrors\": 13,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field cardNumber required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field cardExpYear required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field cardExpMonth required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field cardCvc required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field dues required\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Crear un customer",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"docType\":\"CC\",\n    \"docNumber\":\"123456789\",\n    \"name\":\"jon\",\n    \"lastName\":\"doe\",\n    \"email\":\"jondoe@hotmaisl.com\",\n    \"cellPhone\":\"0000000000\",\n    \"phone\":\"0000000\",\n    \"cardTokenId\":\"152bab72564cc40122ed183\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/token/customer",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"token",
										"customer"
									]
								},
								"description": "En este endpoint usted podrá crear el customer y/o asociar un token generado a un customer ya creado.\n\n## ¿Cómo tokenizar un customer?\n\n> Para asignar un token a un customer usted debe enviar los siguientes parámetros como obligatorios:\n\n|Parámetro|Descripción|\n|--------------------|--------------------|\n|**docType**|`string(4)` `obligatorio` Tipo documento cliente.|\n|**docNumber**|`string(20)` `obligatorio` Número documento cliente.|\n|**name**|`string(50)` `obligatorio` Nombre cliente.|\n|**lastName**|`string(50)` `obligatorio` Apellido cliente).|\n|**email**|`string(50)` `obligatorio` Email cliente.|\n|**cellPhone**|`string(10)` `obligatorio` Celular cliente.|\n|**phone**|`string(10)` `obligatorio` Teléfono cliente.|\n|**requireCardToken**|`boolean` `obligatorio` Condicional si se enviará o no el token id de la tarjeta|\n|**cardTokenId**|`string(20)` `obligatorio` Token de la tarjeta, si el parámetro anterior es true este campo se vuelve obligatorio.|\n\n\n> Parámetros opcionales:\n\n|Parámetro| Descripción|\n|----------|-----------|-------------------|\n|**address**| `string(100)` `opcional` Dirección cliente.|\n|**city**| `string(100)` `opcional` ciudad cliente.|\n\n## Importante\n\nEs muy importante almacenar los datos de los token con los datos del cliente, para realizar las futuras transacciones empleando mismo datos de cliente con el token de la tarjeta.\n\n> Para agregar más tokens de tarjetas de crédito al customer, se puede invocar nuevamente este método enviando el nuevo token de la tarjeta generado en este endpoint [tokenCard](https://api.epayco.co/#14ce0e39-2f4f-48bc-bb62-b4ef773fcb4b)"
							},
							"response": [
								{
									"name": "Crear un customer respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"docType\":\"CC\",\n    \"docNumber\":\"123456789\",\n    \"name\":\"jon\",\n    \"lastName\":\"doe\",\n    \"email\":\"jondoe@hotmail.com\",\n    \"cellPhone\":\"0000000000\",\n    \"phone\":\"0000000\",\n    \"cardTokenId\":\"rdSHdTmJFioQdfp9k\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/token/customer",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"token",
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n    \"success\": true,\r\n    \"titleResponse\": \"Success token generate\",\r\n    \"textResponse\": \"Success token generate\",\r\n    \"lastAction\": \"token_customer\",\r\n    \"data\": {\r\n        \"status\": true,\r\n        \"success\": true,\r\n        \"type\": \"Create customer\",\r\n        \"data\": {\r\n            \"status\": \"exitoso\",\r\n            \"description\": \"El cliente fue creado exitosamente con el id: DiYPdhgncppes9KAb\",\r\n            \"customerId\": \"DiYPdhgncppes9KAb\",\r\n            \"name\": \"jon\",\r\n            \"email\": \"jondoe@hotmail.com\"\r\n        },\r\n        \"object\": \"customer\"\r\n    }\r\n}"
								},
								{
									"name": "Crear un customer errores de campos Copy",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"docType\":\"CC\",\n    \"docNumber\":\"123456789\",\n    \"name\":\"jon\",\n    \"lastName\":\"doe\",\n    \"email\":\"jondoe@hotmail.com\",\n    \"cellPhone\":\"0000000000\",\n    \"phone\":\"0000000\",\n    \"cardTokenId\":\"rdSHdTmJFioQdfp9k\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/token/customer",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"token",
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n    \"success\": false,\r\n    \"titleResponse\": \"Error\",\r\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\r\n    \"lastAction\": \"validation data\",\r\n    \"data\": {\r\n        \"totalErrors\": 13,\r\n        \"errors\": [\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field cardTokenId required\"\r\n            },\r\n        ]\r\n    }\r\n}"
								},
								{
									"name": "Crear un customer errores token ya asociado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"docType\":\"CC\",\n    \"docNumber\":\"123456789\",\n    \"name\":\"jon\",\n    \"lastName\":\"doe\",\n    \"email\":\"jondoe@hotmail.com\",\n    \"cellPhone\":\"0000000000\",\n    \"phone\":\"0000000\",\n    \"cardTokenId\":\"rdSHdTmJFioQdfp9k\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/token/customer",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"token",
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n    \"success\": false,\r\n    \"titleResponse\": \"Error customer\",\r\n    \"textResponse\": \"Error customer Cliente ya asociado ó token inexistente\",\r\n    \"lastAction\": \"create_customer\",\r\n    \"data\": {\r\n        \"error\": {\r\n            \"status\": \"error\",\r\n            \"description\": \"El token no se puede asociar al cliente, verifique que: el token existe, el cliente no esté asociado y que el token no este asociado a otro cliente .\"\r\n        }\r\n    }\r\n}"
								}
							]
						},
						{
							"name": "Editar un customer",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customerId\":\"152bacc689d067242390782\",\n    \"name\":\"Juan david\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/subscriptions/customer/update",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"subscriptions",
										"customer",
										"update"
									]
								},
								"description": "Para actualizar un customer, usted podrá emplear este endpoint para realizar esta acción.\n\n\n## ¿Cómo actualizar un customer?\n\n> Usted debe enviar los siguientes parámetros como obligatorios:\n\n|Parámetros| Descripción|\n|-------------------|------------------|\n|**customerId**|`string` id del customer a actualizar.|\n|**name**|`string(50)` Nombre cliente.|"
							},
							"response": [
								{
									"name": "Editar un customer respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\":\"cDrjtT6J3NXgkorWB\",\n    \"name\":\"Juan Felipe\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscriptions/customer/update",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscriptions",
												"customer",
												"update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Customer successfully updated\",\n    \"textResponse\": \"Customer successfully updated\",\n    \"lastAction\": \"update_customer\",\n    \"data\": {\n        \"status\": true,\n        \"success\": true,\n        \"type\": \"Edit customer\",\n        \"data\": {\n            \"status\": \"exitoso\",\n            \"description\": \"El cliente se actualizo correctamente con el id: xxxxxxxxxxxx\",\n            \"customerId\": \"xxxxxxxxxx\",\n            \"name\": \"xxxxxxxxxx\",\n            \"email\": \"xxxxxxxxxx@xxxxxxxxxx.com\"\n        },\n        \"object\": \"customer\"\n    }\n}"
								},
								{
									"name": "Editar un customer respuesta fallida error de campos",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\":\"cDrjtT6J3NXgkorWB\",\n    \"name\":\"Juan Felipe\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscriptions/customer/update",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscriptions",
												"customer",
												"update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data\",\n    \"data\": {\n        \"totalErrors\": 13,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field customerId required\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "Editar un customer respuesta fallida error de actualización",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\":\"cDrjtT6J3NXgkorWB\",\n    \"name\":\"Juan Felipe\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscriptions/customer/update",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscriptions",
												"customer",
												"update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error customer\",\n    \"textResponse\": \"Error customer Error actualizando cliente\",\n    \"lastAction\": \"update_customer\",\n    \"data\": {\n        \"error\": {\n            \"status\": \"error\",\n            \"description\": \"El cliente customId: $$$ no pudo ser actualizado\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Obtener un customer",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customerId\":\"cEqSJMvbx2ENFXe3h\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/subscriptions/customer",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"subscriptions",
										"customer"
									]
								},
								"description": "Si desea consultar los tokens y la data que tiene un cliente creado en la plataforma de ePayco, usted podrá emplear este endpoint para obtener esta información.\n\n## ¿Cómo consultar un customer?\n\n> Para obtener la información de un customer usted debe enviar los siguientes parámetros como obligatorios:\n\n|Parámetro | Descripción|\n|-------------------|------------------|\n|**customerId**|`string` CustomerId a consultar.|\n\n## Importante\n\nEs muy importante almacenar los datos de los token cuando se procese por primera vez, para evitar estar creando token de la misma tarjeta ya generada anteriormente."
							},
							"response": [
								{
									"name": "Obtener un customer respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\":\"cEqSJMvbx2ENFXe3h\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscriptions/customer",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscriptions",
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n    \"success\": true,\r\n    \"titleResponse\": \"Customer successfully recovered\",\r\n    \"textResponse\": \"Customer successfully recovered\",\r\n    \"lastAction\": \"get_customer\",\r\n    \"data\": {\r\n        \"status\": true,\r\n        \"success\": true,\r\n        \"type\": \"Find customer\",\r\n        \"data\": {\r\n            \"id_customer\": \"cDrjtT6J3NXgkorWB\",\r\n            \"name\": \"Juan Felipe\",\r\n            \"email\": \"felipemesa14@hotmail.com\",\r\n            \"doc_type\": \"CC\",\r\n            \"doc_number\": \"1035863428\",\r\n            \"created\": \"03/31/2020\",\r\n            \"cards\": [\r\n                {\r\n                    \"token\": \"**********FqctY4\",\r\n                    \"franchise\": \"visa\",\r\n                    \"mask\": \"************0326\",\r\n                    \"created\": \"11/29/2019\",\r\n                    \"default\": false\r\n                },\r\n                {\r\n                    \"token\": \"**********Xwk5pF\",\r\n                    \"franchise\": \"visa\",\r\n                    \"mask\": \"************0326\",\r\n                    \"created\": \"11/29/2019\",\r\n                    \"default\": false\r\n                }\r\n            ]\r\n        },\r\n        \"object\": \"customer\"\r\n    }\r\n}"
								},
								{
									"name": "Obtener un customer respuesta fallida error de campos",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\":\"cEqSJMvbx2ENFXe3h\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscriptions/customer",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscriptions",
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n    \"success\": false,\r\n    \"titleResponse\": \"Error\",\r\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\r\n    \"lastAction\": \"validation data\",\r\n    \"data\": {\r\n        \"totalErrors\": 1,\r\n        \"errors\": [\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field customerId is type string\"\r\n            }\r\n        ]\r\n    }\r\n}"
								},
								{
									"name": "Obtener un customer respuesta fallida error de validación",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\":\"cEqSJMvbx2ENFXe3h\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscriptions/customer",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscriptions",
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n    \"success\": false,\r\n    \"titleResponse\": \"Error\",\r\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\r\n    \"lastAction\": \"validation data\",\r\n    \"data\": {\r\n        \"totalErrors\": 1,\r\n        \"errors\": [\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field customerId required\"\r\n            }\r\n        ]\r\n    }\r\n}"
								},
								{
									"name": "Obtener un customer respuesta fallida cliente no válido",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\":\"cEqSJMvbx2ENFXe3h\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscriptions/customer",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscriptions",
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n    \"success\": false,\r\n    \"titleResponse\": \"Error customer\",\r\n    \"textResponse\": \"Error customer\",\r\n    \"lastAction\": \"customer\",\r\n    \"data\": {\r\n        \"error\": \"Error valid customer\"\r\n    }\r\n}"
								}
							]
						},
						{
							"name": "Obtener los customers",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url_apify}}/subscriptions/customers",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"subscriptions",
										"customers"
									]
								},
								"description": "Para obtener una lista de los customers creados en la plataforma ePayco, con este endpoint usted podrá consultar esta infomración.\n\n## ¿Cómo obtener una lista de los customers?\n\nPara obtener una lista de los clientes creados en la plataforma debe realizar la siguiente solicitud.\n\n>Es muy importante almacenar los datos de los token cuando se procese por primera vez, para evitar estar creando token de la misma tarjeta ya generada anteriormente."
							},
							"response": [
								{
									"name": "Obtener los customers respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/subscriptions/customers",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscriptions",
												"customers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Customers successfully recovered\",\n    \"textResponse\": \"Customers successfully recovered\",\n    \"lastAction\": \"get_customers\",\n    \"data\": {\n        \"status\": true,\n        \"success\": true,\n        \"type\": \"Find all customer\",\n        \"data\": [\n            {\n                \"id_customer\": \"cEqSJMvbx2ENFXe3h\",\n                \"object\": \"customer\",\n                \"name\": \"Juan Felipe\",\n                \"email\": \"felipemesa14@gmail.com\",\n                \"phone\": \"3024133765\",\n                \"created\": \"03/13/2019\"\n            },\n            {\n                \"id_customer\": \"cDrjtT6J3NXgkorWB\",\n                \"object\": \"customer\",\n                \"name\": \"Juan Felipe\",\n                \"email\": \"felipemesa14@hotmail.com\",\n                \"created\": \"11/29/2019\"\n            },\n            {\n                \"id_customer\": \"4r6j5Ch5v9tHPjL7P\",\n                \"object\": \"customer\",\n                \"name\": \"jon\",\n                \"email\": \"jondoe@hotmail.com\",\n                \"phone\": \"0000000\",\n                \"created\": \"03/18/2020\"\n            }\n        ],\n        \"object\": \"customers\"\n    }\n}"
								}
							]
						},
						{
							"name": "Eliminar token de un customer",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"franchise\":\"visa\",\n    \"mask\":\"457562******0326\",\n    \"customerId\":\"4r6j5Ch5v9tHPjL7P\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/subscription/token/card/delete",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"subscription",
										"token",
										"card",
										"delete"
									]
								},
								"description": "Si desea eliminar una tarjeta asignada a un customer, podrá hacerlo con este endpoint.\n\n## ¿Cómo eliminar una tarjeta asignada a un customer?\n\n> Para eliminar una tarjeta asignada a un customar debe hacer la solicitud enviando los siguientes parámetros como obligatorios:\n\n|Parámetro|Descripción|\n|----------------------|------------|\n|**franchise**|`string` franquicia de la tarjeta.|\n|**mask**|`string` máscara de la tarjeta.|\n|**customerId**|`string` id cliente.|\n\n\n## Importante\n\nEs muy importante recordar almacenar los datos del token cuando se procese por primera vez, para evitar estar creando token de la misma tarjeta ya generada anteriormente."
							},
							"response": [
								{
									"name": "Eliminar token de un customer respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"franchise\":\"visa\",\n    \"mask\":\"457562******0326\",\n    \"customerId\":\"4r6j5Ch5v9tHPjL7P\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscription/token/card/delete",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscription",
												"token",
												"card",
												"delete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Success token delete\",\n    \"textResponse\": \"Success token delete\",\n    \"lastAction\": \"delete_token_card\",\n    \"data\": {\n        \"status\": true,\n        \"message\": \"Token removido\",\n        \"success\": true,\n        \"type\": \"Token\",\n        \"data\": {},\n        \"object\": \"token\"\n    }\n}"
								},
								{
									"name": "Eliminar token de un customer respuesta fallida error de campos",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"franchise\":\"visa\",\n    \"mask\":\"457562******0326\",\n    \"customerId\":\"4r6j5Ch5v9tHPjL7P\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscription/token/card/delete",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscription",
												"token",
												"card",
												"delete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data\",\n    \"data\": {\n        \"totalErrors\": 3,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field franchise required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field mask required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field customerId required\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "Eliminar token de un customer respuesta fallida no se puede eliminar",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"franchise\":\"visa\",\n    \"mask\":\"457562******0326\",\n    \"customerId\":\"4r6j5Ch5v9tHPjL7P\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscription/token/card/delete",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscription",
												"token",
												"card",
												"delete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error delete token card\",\n    \"textResponse\": \"Error delete token cardError eliminando el token\",\n    \"lastAction\": \"delete_token_card\",\n    \"data\": {\n        \"error\": {\n            \"status\": \"error\",\n            \"description\": \"\\\"No se pudo realizar la eliminación del token\\\"\",\n            \"errors\": \"Cannot read property 'cards' of undefined\"\n        }\n    }\n}"
								},
								{
									"name": "Eliminar token de un customer respuesta fallida campos requeridos",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"franchise\":\"visa\",\n    \"mask\":\"457562******0326\",\n    \"customerId\":\"4r6j5Ch5v9tHPjL7P\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscription/token/card/delete",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscription",
												"token",
												"card",
												"delete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field mask is type string\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Agregar un nuevo token a un customer existente",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"cardToken\": \"doDhtM4jrahhf3Hyv\",\n    \"customerId\":\"4r6j5Ch5v9tHPjL7P\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/subscriptions/customer/add/new/token",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"subscriptions",
										"customer",
										"add",
										"new",
										"token"
									]
								},
								"description": "Para asociar una tarjeta a un customer existente en la plataforma de ePayco, usted podrá realizar dicha acción haciendo uso de este endpoint.\n\n## ¿Cómo asociar una tarjeta a un customer existente?\n\n> Para asociar una tarjeta a un customer existente usted debe debe realizar la solicitud enviando los siguientes parámetros como obligatorios\n\n|Parámetro|Descripción|\n|--------------------|--------------------|\n|**cardToken**|`string` token de la  tarjeta.|\n|**customerId**|`string` id cliente.|\n\n## Importante\n\nEs muy importante almacenar los datos de los token cuando se procese por primera vez, para evitar estar creando token de la misma tarjeta ya generada anteriormente."
							},
							"response": [
								{
									"name": "respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"cardToken\": \"doDhtM4jrahhf3Hyv\",\n    \"customerId\":\"4r6j5Ch5v9tHPjL7P\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscriptions/customer/add/new/token",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscriptions",
												"customer",
												"add",
												"new",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Success add token customer\",\n    \"textResponse\": \"Success add token customer\",\n    \"lastAction\": \"add_token_customer\",\n    \"data\": {\n        \"status\": true,\n        \"type\": \"add card customer\",\n        \"message\": \"El token doDhtM4jrahhf3Hyv fué atachado con éxito al customer\",\n        \"object\": \"customer\"\n    }\n}"
								},
								{
									"name": "respuesta fallida campos requeridos",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"cardToken\": \"doDhtM4jrahhf3Hyv\",\n    \"customerId\":\"4r6j5Ch5v9tHPjL7P\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscriptions/customer/add/new/token",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscriptions",
												"customer",
												"add",
												"new",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field cardToken required\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "respuesta fallida validación de datos",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"cardToken\": \"doDhtM4jrahhf3Hyv\",\n    \"customerId\":\"4r6j5Ch5v9tHPjL7P\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscriptions/customer/add/new/token",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscriptions",
												"customer",
												"add",
												"new",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field customerId is type string\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "respuesta fallida token no existe",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"cardToken\": \"doDhtM4jrahhf3Hyv\",\n    \"customerId\":\"4r6j5Ch5v9tHPjL7P\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscriptions/customer/add/new/token",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscriptions",
												"customer",
												"add",
												"new",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error customer\",\n    \"textResponse\": \"Error customer Token inexistente, o no perteneciente al comercio\",\n    \"lastAction\": \"add_token_customer\",\n    \"data\": {\n        \"error\": {\n            \"status\": false,\n            \"type\": \"add card customer\",\n            \"message\": \"Token inexistente, o no perteneciente al comercio\",\n            \"object\": \"customer\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Agregar un nuevo token predeterminado a la tarjeta existente",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"cardToken\": \"**********mGinvH\",\n    \"customerId\":\"KgLW4kJ4j3Y3qPH76\",\n\t\"franchise\":\"visa\",\n    \"mask\":\"457562******0326\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/subscriptions/customer/add/new/token/default",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"subscriptions",
										"customer",
										"add",
										"new",
										"token",
										"default"
									]
								},
								"description": "Para volver una tarjeta existente en la plataforma de ePayco como la tarjeta predeterminada para las transacciones, usted puede emplear este endpoint.\n\n## ¿Cómo predeterminar tarjeta existente?\n\n> Para predeterminar una tarjeta usted debe realizar la solicitud enviando los siguientes parámetros como obligatorios.\n\n|Parámetro|  Descripción|\n|---------------------|--------------------|\n|**cardToken**|`string` token de la tarjeta.|\n|**customerId**|`string` id cliente.|\n|**franchise**|`string` Franquicia.|\n|**mask**|`string` Máscara de la tarjeta.|\n\n## Importante\n\nEs muy importante almacenar los datos de los token cuando se procese por primera vez, para evitar estar creando token de la misma tarjeta ya generada anteriormente."
							},
							"response": [
								{
									"name": "respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"cardToken\": \"**********mGinvH\",\n    \"customerId\":\"KgLW4kJ4j3Y3qPH76\",\n\t\"franchise\":\"visa\",\n    \"mask\":\"457562******0326\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscriptions/customer/add/new/token/default",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscriptions",
												"customer",
												"add",
												"new",
												"token",
												"default"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Success add new token default\",\n    \"textResponse\": \"Success add new token default\",\n    \"lastAction\": \"add_new_token_default\",\n    \"data\": {\n        \"status\": true,\n        \"message\": \"Reassignment card by default successful\"\n    }\n}"
								},
								{
									"name": "respuesta fallida campos requeridos",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"cardToken\": \"**********mGinvH\",\n    \"customerId\":\"KgLW4kJ4j3Y3qPH76\",\n\t\"franchise\":\"visa\",\n    \"mask\":\"457562******0326\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscriptions/customer/add/new/token/default",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscriptions",
												"customer",
												"add",
												"new",
												"token",
												"default"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field cardToken required\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "respuesta fallida validación de datos",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"cardToken\": \"**********mGinvH\",\n    \"customerId\":\"KgLW4kJ4j3Y3qPH76\",\n\t\"franchise\":\"visa\",\n    \"mask\":\"457562******0326\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subscriptions/customer/add/new/token/default",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subscriptions",
												"customer",
												"add",
												"new",
												"token",
												"default"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field customerId is type string\"\n            }\n        ]\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Movimientos",
					"item": [
						{
							"name": "Listar Movimientos",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filter\":{\n\t \"initialDate\":\"2020-01-01\",\n\t \"endDate\":\"2020-03-31\"\n\t}\n}"
								},
								"url": {
									"raw": "{{url_apify}}/movements",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"movements"
									]
								},
								"description": ">Si desea conocer todos los movimientos realizados en la plataforma de ePayco, con este endpoint usted podrá listar todos los movimientos, filtrarlos por id, idRegister, movementType, description, initialDate, endDate.\n\n## ¿Cómo listar todos los movimientos realizados en la plataforma?\n\n> Para obtener una lista en detalle de todos los movimientos, primeramente es necesario que conozca los campos por los que puede filtar\n\n\n* Parámetros opcionales de filtrado\n\n|Parámetro|Descripción|\n|---------------------|------------------|\n|**id**|`integer` `opcional` Id del movimiento a consultar.|\n|**idRegister**|`integer` `opcional` id del registro.|\n|**movementType**|`string` `opcional` Tipo de movimiento.|\n|**description**|`string` `opcional` Descripción del movimiento.|\n|**initialDate**|`format date` `opcional` Fecha inicial de los movimientos.|\n|**endDate**|`format date` `opcional` Fecha final del filtrado de los movimientos.|"
							},
							"response": [
								{
									"name": "Listar Movimientos respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/movements",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"movements"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": " {\"success\": true,\r\n     \"titleResponse\": \"Successful consult\",\r\n     \"textResponse\": \"successful consult\",\r\n     \"lastAction\": \"successful consult\",\r\n     \"data\": {\r\n        \"current_page\":página_actual,\r\n         \"data\": [{\r\n               \"id\": id,  \r\n               \"idRegister\":XXXXX,\r\n                \"date\": \"YYYY-MM-DD H:i:s\",\r\n\t        \"movementType\": \"tipo movimiento\",\r\n\t        \"description\": \"descripción\",\r\n\t        \"newBalance\": XXXX,\r\n\t        \"previousBalance\":XXXXX,\r\n\t        \"reservedBalance\": 0,\r\n\t        \"retainedBalance\": 0,\r\n\t        \"value\": XXXXXX,\r\n\t        \"operation\": \"suma\"\r\n\t          },{...}]\r\n           }\r\n     }\r\n\r\n\r\n"
								}
							]
						}
					],
					"description": "En esta sección se encuentran las solicitudes referente a los movimientos realizados en la plataforma de ePayco. Cada una de estas opciones se detallan a continuación."
				},
				{
					"name": "Pagos",
					"item": [
						{
							"name": "Certificación procesamiento TDC",
							"item": [
								{
									"name": "Crear  red procesamiento cliente",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_apify}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"networkId\": 4,\n    \"uniqueCode\": \"conex\",\n    \"terminalCode\": \"conex\",\n    \"emailNotifications\": \"conex@conex.com\",\n    \"username\": \"conex\",\n    \"password\": \"conex\",\n    \"certificate\": \"ssssssssssssssssssssssssssssssssssssssss\",\n    \"certificateKey\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/client/create/network",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"client",
												"create",
												"network"
											]
										},
										"description": "Inicialmente en el proceso de certificación de pagos debemos proceder a crear la red de procesamiento del cliente.\n\nEs importante destacar que para emplear este proceso debe ser un **Gateway** registrado correctamente en **ePayco**.\n\nEl método que se va a describir le permite crear ó editar el medio de pago del cliente.\n\n## ¿Cómo crear/editar un medio de pago del cliente?\n\nPara crear una red de procesamiento del cliente debe realizar un request enviando primeramente los parámetros acá descritos.\n\n> Parámetros obligatorios\n\n|Parámetro | Descripción|\n|-----------------|--------------------|\n|**id**|`integer(11)` `obligatorio` Integer (11)| Id de la red de procesamiento del cliente (siempre y cuando desea actualizar).| \n|**networkId**| `integer(11)` `obligatorio`  id de la red de procesamiento. Se obtiene consultando el listado maestro redes de procesamiento [redes de procesamiento](https://api.epayco.co/?version=latest#87735f5f-4243-4b00-8dc6-c97cb8f14714)| [REDEBAN, CREDIBANCO] |\n|**uniqueCode**|`string(8)` `obligatorio` Código unico. [REDEBAN, CREDIBANCO] |\n|**terminalCode**| `string(8)` `obligatorio`  Terminal. [REDEBAN, CREDIBANCO] |\n|**username**|`string(100)` `obligatorio` Es obligatorio para credibanco. [CREDIBANCO] |\n|**password**|`string(100)` `obligatorio` Es obligatorio para credibanco.[CREDIBANCO] |\n|**certificate**|`string(100)` `obligatorio` Certificado público, obligatorio para credibanco.[CREDIBANCO] |\n|**certificateKey**| `string(100)` `obligatorio` Certificado privado, obligatorio para credibanco. [CREDIBANCO] |\n\n> Parámetros opcionales\n\n|Parámetro | Descripción|\n|----------------|-----------------------|\n|**emailNotifications**| `Integer` email de notificación.|"
									},
									"response": [
										{
											"name": "Crear  red procesamiento cliente respuesta exitosa",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"networkId\": 4,\n    \"uniqueCode\": \"conex\",\n    \"terminalCode\": \"conex\",\n    \"emailNotifications\": \"conex@conex.com\",\n    \"username\": \"conex\",\n    \"password\": \"conex\",\n    \"certificate\": \"ssssssssssssssssssssssssssssssssssssssss\",\n    \"certificateKey\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\n}"
												},
												"url": {
													"raw": "{{url_apify}}/client/create/network",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"client",
														"create",
														"network"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Created client network\",\n    \"textResponse\": \"Created client network successfully\",\n    \"lastAction\": \"Create client network\",\n    \"data\": {\n        \"id\": 1469,\n        \"network\": \"credibanco\",\n        \"networkId\": 4,\n        \"clientId\": 18785\n    }\n}"
										},
										{
											"name": "Crear  red procesamiento cliente respuesta fallida",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"networkId\": 4,\n    \"uniqueCode\": \"conex\",\n    \"terminalCode\": \"conex\",\n    \"emailNotifications\": \"conex@conex.com\",\n    \"username\": \"conex\",\n    \"password\": \"conex\",\n    \"certificate\": \"ssssssssssssssssssssssssssssssssssssssss\",\n    \"certificateKey\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\n}"
												},
												"url": {
													"raw": "{{url_apify}}/client/create/network",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"client",
														"create",
														"network"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Algunos campos son obligatorios, corrija los errores e intente nuevamente\",\n    \"lastAction\": \"validation data\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": \"A001\",\n                \"errorMessage\": \"El campo 'terminalCode' es requerido\"\n            }\n        ]\n    }\n}"
										}
									]
								},
								{
									"name": "Redes de procesamiento del cliente",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_apify}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/client/networks",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"client",
												"networks"
											]
										},
										"description": "Si desea consultar las redes de procesamiento que tiene actualmente creadas con el uso de este servicio puede obtener un listado con dichas redes.\n\nEs importante que tenga en cuenta que para hacer uso de este servicio debe ser un cliente Gateway registrado en **ePayco**."
									},
									"response": [
										{
											"name": "Redes de procesamiento del cliente respuesta exitosa",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{url_apify}}/client/networks",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"client",
														"networks"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"success\": true,\n    \"titleResponse\": \"client networks list\",\n    \"textResponse\": \"client networks list success\",\n    \"lastAction\": \"Query client networks list\",\n    \"data\": [\n        {\n            \"id\": 1468,\n            \"uniqueCode\": \"000conex\",\n            \"terminalCode\": \"conex\",\n            \"emailNotifications\": \"conex@conex.com\",\n            \"network\": \"credibanco\",\n            \"networkId\": 4,\n            \"username\": \"conex\",\n            \"password\": \"conex\",\n            \"certificateTxt\": \"ssssssssssssssssssssssssssssssssssssssss\",\n            \"certificateKeyTxt\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n            \"certificatePassword\": \"0\"\n        },\n        {\n            \"id\": 1469,\n            \"uniqueCode\": \"000conex\",\n            \"terminalCode\": \"conex\",\n            \"emailNotifications\": \"conex@conex.com\",\n            \"network\": \"credibanco\",\n            \"networkId\": 4,\n            \"username\": \"conex\",\n            \"password\": \"conex\",\n            \"certificateTxt\": \"ssssssssssssssssssssssssssssssssssssssss\",\n            \"certificateKeyTxt\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n            \"certificatePassword\": \"0\"\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Medios pago cliente",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_apify}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/client/payment/methods",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"client",
												"payment",
												"methods"
											]
										},
										"description": "Antes que nada, es importante que recuerde que para usar el servicio de certificación de procesamiento TDC debe ser un cliente **Gateway** registrado correctamente en **ePayco**\n\nDe esta manera, le facilitamos en este endpoint consultar el listado de medios de pago del cliente."
									},
									"response": [
										{
											"name": "Medios pago cliente respuesta exitosa",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{url_apify}}/client/payment/methods",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"client",
														"payment",
														"methods"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\r\n    \"success\": true,\r\n    \"titleResponse\": \"client payment methods list\",\r\n    \"textResponse\": \"client payment methods list success\",\r\n    \"lastAction\": \"Query client payment methods list\",\r\n    \"data\": [\r\n        {\r\n            \"id\": 163268,\r\n            \"name\": \"American Express\",\r\n            \"commission\": 0,\r\n            \"commissionValue\": 0,\r\n            \"status\": true,\r\n            \"paymentMethodId\": \"AM\",\r\n            \"networkId\": 1\r\n        },\r\n        {\r\n            \"id\": 163269,\r\n            \"name\": \"Baloto\",\r\n            \"commission\": 0,\r\n            \"commissionValue\": 0,\r\n            \"status\": true,\r\n            \"paymentMethodId\": \"BA\",\r\n            \"networkId\": 1\r\n        },\r\n        {\r\n            \"id\": 163270,\r\n            \"name\": \"Crédito Credencial\",\r\n            \"commission\": 0,\r\n            \"commissionValue\": 0,\r\n            \"status\": true,\r\n            \"paymentMethodId\": \"CR\",\r\n            \"networkId\": 1\r\n        },\r\n        {\r\n            \"id\": 163271,\r\n            \"name\": \"Diners Club\",\r\n            \"commission\": 0,\r\n            \"commissionValue\": 0,\r\n            \"status\": true,\r\n            \"paymentMethodId\": \"DC\",\r\n            \"networkId\": 1\r\n        },\r\n        {\r\n            \"id\": 163272,\r\n            \"name\": \"Debito Mastercard\",\r\n            \"commission\": 0,\r\n            \"commissionValue\": 0,\r\n            \"status\": false,\r\n            \"paymentMethodId\": \"DM\",\r\n            \"networkId\": 1\r\n        },\r\n        {\r\n            \"id\": 163273,\r\n            \"name\": \"Debito Visa\",\r\n            \"commission\": 0,\r\n            \"commissionValue\": 0,\r\n            \"status\": false,\r\n            \"paymentMethodId\": \"DV\",\r\n            \"networkId\": 1\r\n        },\r\n        {\r\n            \"id\": 163274,\r\n            \"name\": \"Efecty\",\r\n            \"commission\": 0,\r\n            \"commissionValue\": 0,\r\n            \"status\": true,\r\n            \"paymentMethodId\": \"EF\",\r\n            \"networkId\": 1\r\n        },\r\n        {\r\n            \"id\": 163275,\r\n            \"name\": \"Gana\",\r\n            \"commission\": 0,\r\n            \"commissionValue\": 0,\r\n            \"status\": true,\r\n            \"paymentMethodId\": \"GA\",\r\n            \"networkId\": 1\r\n        },\r\n        {\r\n            \"id\": 163276,\r\n            \"name\": \"Crédito Mastercard\",\r\n            \"commission\": 0,\r\n            \"commissionValue\": 0,\r\n            \"status\": true,\r\n            \"paymentMethodId\": \"MC\",\r\n            \"networkId\": 1\r\n        },\r\n        {\r\n            \"id\": 163278,\r\n            \"name\": \"PSE\",\r\n            \"commission\": 0,\r\n            \"commissionValue\": 0,\r\n            \"status\": true,\r\n            \"paymentMethodId\": \"PSE\",\r\n            \"networkId\": 1\r\n        },\r\n        {\r\n            \"id\": 163281,\r\n            \"name\": \"SafetyPay\",\r\n            \"commission\": 0,\r\n            \"commissionValue\": 0,\r\n            \"status\": true,\r\n            \"paymentMethodId\": \"SP\",\r\n            \"networkId\": 1\r\n        },\r\n        {\r\n            \"id\": 163282,\r\n            \"name\": \"Split Payment\",\r\n            \"commission\": 0,\r\n            \"commissionValue\": 0,\r\n            \"status\": true,\r\n            \"paymentMethodId\": \"SPF\",\r\n            \"networkId\": 1\r\n        },\r\n        {\r\n            \"id\": 163284,\r\n            \"name\": \"Crédito Visa\",\r\n            \"commission\": 0,\r\n            \"commissionValue\": 0,\r\n            \"status\": true,\r\n            \"paymentMethodId\": \"VS\",\r\n            \"networkId\": 1\r\n        },\r\n        {\r\n            \"id\": 988835,\r\n            \"name\": \"Codensa\",\r\n            \"commission\": 0,\r\n            \"commissionValue\": 0,\r\n            \"status\": true,\r\n            \"paymentMethodId\": \"COD\",\r\n            \"networkId\": 2\r\n        },\r\n        {\r\n            \"id\": 1001593,\r\n            \"name\": \"Tuya\",\r\n            \"commission\": 0,\r\n            \"commissionValue\": 0,\r\n            \"status\": false,\r\n            \"paymentMethodId\": \"TY\",\r\n            \"networkId\": 2\r\n        },\r\n        {\r\n            \"id\": 1783309,\r\n            \"name\": \"Epm\",\r\n            \"commission\": 2.99,\r\n            \"commissionValue\": 900,\r\n            \"status\": false,\r\n            \"paymentMethodId\": \"EPM\",\r\n            \"networkId\": 2\r\n        }\r\n    ]\r\n}\r\n```"
										}
									]
								},
								{
									"name": "Editar medios pago cliente",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_apify}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\":163284,\n    \"status\": true,\n    \"networkId\": 1\n}"
										},
										"url": {
											"raw": "{{url_apify}}/client/payment/method",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"client",
												"payment",
												"method"
											]
										},
										"description": "Para consultar el listado de medios de pago del cliente.\n\n> Debe ser un cliente Gateway registrado en ePayco\n\n## ¿Cómo actualizar un medio de pago del cliente?\n\n> Para realizar una modificación es necesario realizar la solicitud enviando los siguientes parámetros como obligatorios.\n\n|Parámetro |Descripción|\n|----------------|--------------------|\n|**id**| `integer(11)` `obligatorio` Id del medio de pago del cliente.|\n|**status**| `boolean` `obligatorio` estado que se modificara en el medio de pago del cliente.|\n|**networkId**|`integer(11)` `obligatorio`  id de la red de procesamiento consultar el endpoint para obtener el id [redes de procesamiento](https://api.epayco.co/?version=latest#87735f5f-4243-4b00-8dc6-c97cb8f14714)|"
									},
									"response": [
										{
											"name": "Editar medios pago cliente respuesta exitosa",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":163284,\n    \"status\": true,\n    \"networkId\": 1\n}"
												},
												"url": {
													"raw": "{{url_apify}}/client/payment/method",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"client",
														"payment",
														"method"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Update client payment method\",\n    \"textResponse\": \"Updated client payment method successfully\",\n    \"lastAction\": \"Update client payment method\",\n    \"data\": {\n        \"id\": 1803680,\n        \"status\": true,\n        \"paymentMethodId\": \"VS\",\n        \"networkId\": 2\n    }\n}"
										},
										{
											"name": "Editar medios pago cliente respuesta fallida campos obligatorios",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":163284,\n    \"status\": true,\n    \"networkId\": 1\n}"
												},
												"url": {
													"raw": "{{url_apify}}/client/payment/method",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"client",
														"payment",
														"method"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Algunos campos son obligatorios, corrija los errores e intente nuevamente\",\n    \"lastAction\": \"validation data\",\n    \"data\": {\n        \"totalErrors\": 1,\n        \"errors\": [\n            {\n                \"codError\": \"A002\",\n                \"errorMessage\": \"el campo 'networkId' debe ser tipo 2 or 4\"\n            }\n        ]\n    }\n}"
										},
										{
											"name": "Editar medios pago cliente respuesta fallida client network no existe",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\":163284,\n    \"status\": true,\n    \"networkId\": 1\n}"
												},
												"url": {
													"raw": "{{url_apify}}/client/payment/method",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"client",
														"payment",
														"method"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"success\": false,\n    \"titleResponse\": \"client network id does not exists\",\n    \"textResponse\": \"client network id does not exists\",\n    \"lastAction\": \"Update client payment method\",\n    \"data\": []\n}"
										}
									]
								}
							],
							"description": "La certificación de procesamiento de pagos demuestra cumplimos con los requisitos de los lineamientos con el objetivo de garantizar el cumplimiento permanente del proceso con los requisitos definidos."
						},
						{
							"name": "Daviplata",
							"item": [
								{
									"name": "Crear Transacción",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_apify}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{token_apif}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"docType\": \"CC\",\r\n    \"document\": \"1053814720\",\r\n    \"name\": \"Testing\",\r\n    \"lastName\": \"PAYCO\",\r\n    \"email\": \"exmaple@epayco.co\",\r\n    \"indCountry\": \"CO\",\r\n    \"phone\": \"3142011285\",\r\n    \"country\": \"CO\",\r\n    \"city\": \"bogota\",\r\n    \"address\": \"Calle de prueba\",\r\n    \"ip\": \"189.176.0.1\",\r\n    \"currency\": \"COP\",\r\n    \"description\": \"ejemplo de transaccion con daviplata\",\r\n    \"value\": \"100\",\r\n    \"tax\": \"0\",\r\n    \"taxBase\": \"0\",\r\n    \"methodConfirmation\":\"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/payment/process/daviplata",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"payment",
												"process",
												"daviplata"
											]
										},
										"description": "Para crear transacciones con el medio de pago daviplata, tenemos a su disposición el siguiente endpoint con el cual podrá realizar este tipo de transacción empleando el procedimiento que se indica en esta sección.\n\n## ¿Cómo realizar una transacción con medio de pago daviplata?\n\nSi desea realizar este tipo de transacción debe enviar los siguientes parámetros:\n\n|Parámetro| Tipo (longitud) | Descripción|\n|--------|--------|-----------------------|\n|**docType**|String(4) obligatorio |  Tipo de documento del cliente, Ejemplo se debe enviar CC, NIT|\n|**document**| Int(11) obligatorio| número de documento del cliente.|\n|**name**|String(255) obligatorio|Nombre del cliente.|\n|**lastName**| String(255) opcional |Apellido del cliente.|\n|**email**| String(255) opcional| Correo del cliente|\n|**indCountry**| String(3) obligatorio| Código del país (para obtener el código del país puede consultar el endpoint paises)|\n|**phone**| Int(11) opcional| Teléfono del cliente.|\n|**country**| String(255) opcional| País del cliente.|\n|**city**| String(255) obligatorio| Ciudad del cliente.|\n|**address**| String(255) obligatorio| Dirección del cliente.|\n|**ip**|String(16) opcional| IP del cliente.|\n|**currency**| String(3) Opcional| tipo de moneda. Default COP.|\n|**invoice**| String(255) opcional| Número de Factura.|\n|**description**| String(255) opcional| Descripción de la transacción.|\n|**value**| String(255) Obligatorio| valor de la transacción|\n|**tax**| Float Opcional| impuesto de la transacción, por defecto tiene el valor de 0|\n|**taxBase**| Int(11) Opcional| base del impuesto, por defecto tiene el valor de 0|\n|**testMode**| Boolean Opcional| Indica si la transacción es una prueba, por defecto tiene el valor false.|\n|**urlResponse**| String(255) Opcional| Url de respuesta.|\n|**urlConfirmation**| String(255) opcional| url de confirmación. En esta url se debe validar que el valor de la transacción y el número de la factura coincidan con los valores recibidos en la confirmación de la transacción|\n|**methodConfirmation**| String(255) obligatorio| método de petición para la url de confirmación, por defecto tiene el valor de \"GET\".|\n\n## Example response\n``` json\n{\n    \"success\": true,\n    \"titleResponse\": \"SUCCESS\",\n    \"textResponse\": \"Transacción generada exitosamente, pendiente confirmación del usuario con el OTP generado por DaviPlata\",\n    \"lastAction\": \"Registrar pago en daviplata\",\n    \"data\": {\n        \"transaction\": {\n            \"refPayco\": 30612544,\n            \"invoice\": \"\",\n            \"description\": \"ejemplo de transaccion con daviplata\",\n            \"value\": 100,\n            \"tax\": 0,\n            \"ico\": 0,\n            \"taxBase\": 0,\n            \"netoValue\": 100,\n            \"currency\": \"COP\",\n            \"bank\": \"DaviPlata\",\n            \"estatus\": \"Pendiente\",\n            \"response\": \"Esperando confirmacion token DaviPlata\",\n            \"autorization\": \"000000\",\n            \"receipt\": 48771653795895,\n            \"date\": \"2021-06-08 15:15:51\",\n            \"franchise\": \"DP\",\n            \"codResponse\": 3,\n            \"ip\": \"10.0.1.11\",\n            \"testMode\": \"1\",\n            \"docType\": \"CC\",\n            \"document\": \"123456789\",\n            \"name\": \"Testing\",\n            \"lastName\": \"PAYCO\",\n            \"email\": \"exmaple@epayco.co\",\n            \"city\": \"\",\n            \"address\": \"bogota\",\n            \"indCountry\": null,\n            \"idSessionToken\": null,\n            \"tokenExpirationDate\": null\n        }\n    }\n}\n```"
									},
									"response": []
								},
								{
									"name": "Confirmar pago (OTP)",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "password",
													"value": "{{token_apif}}",
													"type": "string"
												},
												{
													"key": "token",
													"value": "{{token_apify}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"refPayco\": \"63177693\",\r\n    \"idSessionToken\": \"56002871\",\r\n    \"otp\": \"2580\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/payment/confirm/daviplata",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"payment",
												"confirm",
												"daviplata"
											]
										},
										"description": "En este endpoint podrá confirmar la transacción con daviplata después de recibir el OTP\n\n## ¿Cómo confirmar la transacción con daviplata?\n\nPara confirmar la transacción con daviplata se debe hacer la solicitud con los siguientes parámetros:\n\n|Parámetro| Tipo (longitud) | Descripción|\n|-------|--------|------------------------|\n|**refPayco**| String(20) Obligatorio| Referencia epayco.|\n|**idSessionToken**| String(20) Obligatorio| Id de session.|\n|**otp**| String(20) Obligatorio| Código otp enviada al celular del cliente.|\n\n## Example response\n``` json\n\n{\n    \"success\": true,\n    \"titleResponse\": \"SUCCESS\",\n    \"textResponse\": \"Aprobada\",\n    \"lastAction\": \"Confirmar pago en daviplata\",\n    \"data\": {\n        \"refPayco\": \"45512234\",\n        \"status\": \"Aprobado\",\n        \"date\": \"2021-08-23T11:54:33\",\n        \"numApproval\": \"433790\",\n        \"idTransactionDaviplata\": 8393,\n        \"idTransactionAutorization\": \"000000008393\",\n        \"response\": \"Aprobado\"\n    }\n}\n```"
									},
									"response": []
								}
							]
						},
						{
							"name": "Efectivo",
							"item": [
								{
									"name": "Consultar medios de pago efectivo",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "password",
													"value": "{{token_apif}}",
													"type": "string"
												},
												{
													"key": "token",
													"value": "{{token_apify}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_apify}}/payment/cash/entities",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"payment",
												"cash",
												"entities"
											]
										},
										"description": "En este endpoint usted podrá obtener las entidades disponibles para transacciones de efectivo. Realizar el request enviando en la cabecera como Autorización el token generado en login.\n\n## Ejemplo de respuesta Entidades efectivo.\n``` json\n{\n    \"success\": true,\n    \"titleResponse\": \"SUCCESS\",\n    \"textResponse\": \"Bancos Consultados Exitosamente\",\n    \"lastAction\": \"Query Bancos\",\n    \"data\": [\n        {\n            \"Id\": \"EF\",\n            \"nombre\": \"Efecty\"\n        }\n    ]\n}\n```"
									},
									"response": []
								},
								{
									"name": "Crear Transacción",
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "password",
													"value": "{{token_apif}}",
													"type": "string"
												},
												{
													"key": "token",
													"value": "{{token_apify}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"pay test\",\r\n    \"value\": 20000,\r\n    \"tax\": 0,\r\n    \"taxBase\": 0,\r\n    \"currency\": \"COP\",\r\n    \"typePerson\": \"0\",\r\n    \"docType\": \"CC\",\r\n    \"docNumber\": \"123456789\",\r\n    \"name\": \"Testing\",\r\n    \"lastName\": \"PAYCO\",\r\n    \"email\": \"test@mailinator.com\",\r\n    \"cellPhone\": \"3010000001\",\r\n    \"endDate\": \"21-11-21\",\r\n    \"ip\":\"127.0.0.1\",\r\n    \"paymentMethod\": \"EF\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/payment/process/cash",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"payment",
												"process",
												"cash"
											]
										},
										"description": "Para crear las transacciones con medio de pago efectivo, tenemos este endpoint el cual siguiendo los pasos indicados podrá generar dicha transacción de forma correcta.\n\n## ¿Cómo crear una transacción con medio de pago en efectivo?\n\nPara crear la transacción es necesario enviar los siguientes parámetros en la solicitud a realizar: \n\n|Parámetro| Tipo (longitud) | Descripción|\n|------|------|--------------------------|\n|**invoice**| String(10 dígitos) Opcional|  Factura.|\n|**description**|String(255 dígitos) Opcional| Descripción de la transacción.|\n|**value**| Float(2 decimales)  obligatorio| Valor de la transacción.|\n|**tax**|Int - Opcional| IVA, Default: 0.|\n|**baseTax**|Int - Opcional| Base de IVA, Default: 0.|\n|**currency**|String(3 dígitos) Opcional| Tipo de moneda. Default: COP.|\n|**typePerson**| int opcional| id del tipo de persona. (Persona = 0, Comercio=1)|\n|**docType**|String(4 caracteres) obligatorio| Tipo documento cliente.|\n|**docNumber**|String(20 caracteres) obligatorio|Número documento cliente.|\n|**name**|String(50 caracteres) obligatorio| Nombre cliente.|\n|**lastName**|String(50 caracteres) obligatorio| Apellido cliente.|\n|**email**|String(50 caracteres) obligatorio| Email cliente.|\n|**cellPhone**|String(10 dígitos) obligatorio| Celular cliente.|\n|**endDate**|String(10 dígitos) obligatorio| Fecha en formato yy-mm-dd.|\n|**ip**|String(10 dígitos) obligatorio| esta es la ip del cliente.|\n|**urlResponse**| String(255) Opcional| URL de respuesta para el cliente.|\n|**urlConfirmation**|String(255) Opcional| URL de confirmación para el cliente. En esta url se debe validar que el valor de la transacción y el número de la factura coincidan con los valores recibidos en la confirmación de la transacción|\n|**methodConfirmation**| String(255) Opcional| método de petición para la URL de confirmación.|\n|**paymentMethod**|String(3) obligatorio| ID de la entidad para recibir el efectivo, se obtiene desde Get entities cash.|\n|**extra**|String(255) Opcional| Parámetros opcionales para ser usados por el comercio. Deben enviarse 1 a 1 como extra1, extra2...extra7)|\n\n> Para Split payment enviar los siguientes parámetros: \n\n|Parámetro| Tipo (longitud) | Descripción|\n|---------|--------|---------------------|\n|**splitpayment**|Boolean Opcional| Indica si el pago será con split payment|\n|**splitAppId**| String(255) obligatorio| \n cuando splitpayment es true (P_CUST_ID_CLIENTE APPLICATION).|\n|**splitMerchantId**| String(255) obligatorio| cuando splitpayment es true (P_CUST_ID_CLIENTE COMMERCE).|\n|**splitType**| Int(2 dígitos) obligatorio| cuando splitpayment es true (tipo de split).|\n|**splitPrimaryReceiver**|String(255) obligatorio| cuando splitpayment es true (P_CUST_ID_CLIENTE APPLICATION).|\n|**splitPrimaryReceiverFee**|String(255) obligatorio| cuando splitpayment es true (Tarifa dividida).|\n\n> Para split payment múltiple enviar los siguientes parámetros:\n\n|Parámetro| Tipo (longitud) | Descripción|\n|---------|---------|--------------------|\n|**splitRule**| String(255) Opcional| Regla de split.|\n|**splitReceivers**| Array obligatorio| cuando se envía splitRule (Regla de split).|\n\n> Cada elemento de splitReceivers debe contener: \n\n* **id** : String(255)- Requerido (P_CUST_ID_CLIENTE RECEIVER)\n* **total** : Int- Requerido (total a pagar)\n* **tax** : Int- Requerido (IVA aplciado)\n* **baseTax** : Int- Requerido (base del IVA)\n* **\"fee\"** : Int- Requerido (tarifa)\n\n\n## Ejemplo de respuesta satisfactoria\n\n``` json\n{\n    \"success\": true,\n    \"titleResponse\": \"SUCCESS\",\n    \"textResponse\": \"Transacción y pin generados exitosamente\",\n    \"lastAction\": \"Crear pin efecty\",\n    \"data\": {\n        \"transaction\": {\n            \"refPayco\": 30612509,\n            \"invoice\": \"1472050778\",\n            \"description\": \"pay test\",\n            \"value\": 20000,\n            \"tax\": 0,\n            \"ico\": 0,\n            \"taxBase\": 20000,\n            \"valueNeto\": 20000,\n            \"currency\": \"COP\",\n            \"bank\": \"Efecty\",\n            \"status\": \"Pendiente\",\n            \"response\": \"Esperando pago del cliente en punto de servicio Efecty\",\n            \"autorization\": \"000000\",\n            \"receipt\": 48771653791189,\n            \"date\": \"2021-06-08 13:57:57\",\n            \"paymentMethod\": \"EF\",\n            \"codResponse\": 3,\n            \"ip\": \"10.0.1.11\",\n            \"testMode\": 1,\n            \"docType\": \"CC\",\n            \"document\": \"123456789\",\n            \"name\": \"testing\",\n            \"lastName\": \"PAYCO\",\n            \"email\": \"test@mailinator.com\",\n            \"city\": \"\",\n            \"address\": \"N/A\",\n            \"indCountry\": null,\n            \"pin\": \"Prueba-000000\",\n            \"codeProject\": 111992,\n            \"paymentDate\": \"2021-06-08 13:57:57\",\n            \"expirationDate\": \"2021-07-01 23:59:59\",\n            \"conversionFactor\": 3582.41,\n            \"valuePesos\": 20000\n        }\n    }\n}\n```"
									},
									"response": []
								}
							]
						},
						{
							"name": "Tarjeta de credito",
							"item": [
								{
									"name": "Transacción TC",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_apify}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\":\"10\",\n    \"tax\": 0,\n    \"ico\": \"0\",\n    \"currency\": \"USD\",\n    \"taxBase\": 0,\n    \"docType\":\"CC\",\n    \"docNumber\":\"123456789\",\n    \"name\":\"jon\",\n    \"lastName\":\"doe\",\n    \"email\":\"jondoe@hotmail.com\",\n    \"cellPhone\":\"0000000000\",\n    \"phone\":\"0000000\",\n    \"dues\":\"1\", \n    \"urlResponse\":\"http://localhost.com\",\n    \"cardTokenId\":\"30587d357e5127cb60519b3\", \n    \"customerId\": \"30587dc0ab4246b9410d302\"\n\n}"
										},
										"url": {
											"raw": "{{url_apify}}/payment/process",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"payment",
												"process"
											]
										},
										"description": "Para realizar una transacción con tarjeta de crédito, usted puede emplear este endpoint.\n\n## ¿Cómo crear una transacción tarjeta de crédito?\n\n> Para crear una transacción con tarjeta de crédito usted deber realizar la solicitud enviando  los siguientes parámetros como obligatorios:\n\n|Parámetro| Descripción|\n|------------------|-------------------|\n|**value**|`float(2 decimales)` Valor de la transacción.|\n|**docType**|`string(4)` Tipo documento cliente.|\n|**docNumber**|`string(20)` Número documento cliente.|\n|**name**|`string(50)` Nombre cliente.|\n|**lastName**|`string(50)` Apellido cliente.|\n|**email**|`string(50)` Email cliente.|\n|**cellPhone**|`string(10)` Celular cliente.|\n|**phone**|`string(10)` Teléfono cliente.|\n\n> Si es la primera transacción del cliente, es decir que anteriormente no ha realizado transacciones con la plataforma, debe enviar los parámetros de la tarjeta.\n\n|Parámetro|Descripción|\n|-------------------|------------------|\n|**cardNumber**|`string(16)` Número de tarjeta.|\n|**cardExpYear**|`string(AA)` Fecha año de expiración.|\n|**cardExpMonth**|`string(10)` Fecha mes de expiración.|\n|**cardCvc**|`string(4)` CVV.|\n|**dues**|`string` Número de cuotas.|\n\n> Parámetros opcionales\n\n|Parámetro|Descripción|\n|---------|-------------------------------|\n|**cardTokenId**|`string` Id del token de la tarjeta de crédito.|\n|**ip**|String|Dirección IP.|\n|**urlResponse**|`string` Url donde será redireccionado luego de realizar la transacción.|\n|**urlConfirmation**|`string` Url de confirmación donde se enviarán variables de respuesta confirmando o negando la transacción. En esta url se debe validar que el valor de la transacción coincida con los valores recibidos en la confirmación de la transacción|\n|**extra1**|`string` Parámetro extra 1|\n|**extra2**|`string` Parámetro extra 2|\n|**extra3**|`string` Parámetro extra 3|\n|**extra4**|`string` Parámetro extra 4|\n|**extra5**|`string` Parámetro extra 5|\n|**extra6**|`string` Parámetro extra 6|\n|**extra7**|`string` Parámetro extra 7|\n|**extra8**|`string` Parámetro extra 8|\n|**extra9**|`string` Parámetro extra 9|\n|**extra10**|`string` Parámetro extra 10|\n \n> En la primera respuesta obtendras los token del cliente y la tarjeta, los cuales son asociados a el correo enviado por el comercio, debes validar en la aplicación que los siguientes consumos del servicio se deben enviar los parametros sin los datos de la tajeta.\n\n|Parámetro|Descripción|\n|---------|------------------------------|\n|**cardTokenId**|`string(20)` Token de la tajeta.|\n|**customerId**|`string(20)` Token del cliente.|\n\n## Importante\n\nEs muy importante almacenar los datos de los token cuando se procese por primera vez, para evitar estar creando token de la misma tarjeta ya generada anteriormente."
									},
									"response": [
										{
											"name": "Transacción TC respuesta exitosa",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\":\"500000\",\n    \"docType\":\"CC\",\n    \"docNumber\":\"123456789\",\n    \"name\":\"jon\",\n    \"lastName\":\"doe\",\n    \"email\":\"jondoe@hotmail.com\",\n    \"cellPhone\":\"0000000000\",\n    \"phone\":\"0000000\",\n    \"cardNumber\":\"4575623182290326\",\n    \"cardExpYear\":\"2019\",\n    \"cardExpMonth\":\"12\",\n    \"cardCvc\":\"123\",\n    \"dues\":\"1\",\n    \"_cardTokenId\":\"ahYq8skKSzyMgcmwC\"\n}"
												},
												"url": {
													"raw": "{{url_apify}}/payment/process",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"process"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\r\n    \"value\":\"500000\", //Obligatorio\r\n    \"docType\":\"CC\", //Obligatorio\r\n    \"docNumber\":\"xxxxxxxxx\", //Obligatorio\r\n    \"name\":\"Jon\", //Obligatorio\r\n    \"lastName\":\"Doe\", //Obligatorio\r\n    \"email\":\"cjondoe@hotmail.com\", //Obligatorio\r\n    \"cellPhone\":\"xxxxxxxxxx\", //Obligatorio\r\n    \"phone\":\"0000000\", //Obligatorio\r\n    \"tax\":\"19\", //Opcional\r\n    \"taxBase\":\"200000\", //Opcional\r\n    \"description\":\"Prueba\", //Opcional\r\n    \"invoice\":\"1231516546\", //Opcional\r\n    \"currency\":\"COP\", //Opcional\r\n    \"typePerson\":\"1\", //Opcinal\r\n    \"address\":\"Crr86#56-415\", //Opcinal\r\n    \"urlResponse\":\"www.prueba.com\", //Opcinal\r\n    \"urlConfirmation\":\"www.pruebaconfirmacion.com\", //Opcinal\r\n    \"extra1\":\"\", // Opcional, permitidos hasta 10 extras \r\n    \"cardTokenId\":\"P98etya6rPd2HCsEF\",  // Estos token son generados al momento de realizar la primera transacción con la tarjeta diligenciada por el cliente pagador, el cual debe almacenare para futuras transacciones con la misma tarjeta asociada.\r\n    \"customerId\":\"Qdm37njMSTj9RhoyR\", // Este el token del cliente generado al momento de crear la primera transacción, no es una parámetro obligatorio, ya que el endpoint valida que el correo se encuentre registrado, para obtener siempre el mismo token.\r\n    \"_cardNumber\":\"4575623182290326\", // Enviar la primera vez que se envía a procesar con este número de tarjeta, para futuros pagos enviar el token id retornado en la respuesta.\r\n    \"_cardExpYear\":\"2019\", // Enviar la primera vez que se envía a procesar con este número de tarjeta, para futuros pagos enviar el token id retornado en la respuesta.\r\n     \"_cardExpMonth\":\"12\", // Enviar la primera vez que se envía a procesar con este número de tarjeta, para futuros pagos enviar el token id retornado en la respuesta.\r\n     \"_cardCvc\":\"123\" // Enviar la primera vez que se envía a procesar con este número de tarjeta, para futuros pagos enviar el token id retornado en la respuesta.\r\n}  "
										},
										{
											"name": "Transacción TC respuesta exitosa Copy",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\":\"500000\",\n    \"docType\":\"CC\",\n    \"docNumber\":\"123456789\",\n    \"name\":\"jon\",\n    \"lastName\":\"doe\",\n    \"email\":\"jondoe@hotmail.com\",\n    \"cellPhone\":\"0000000000\",\n    \"phone\":\"0000000\",\n    \"cardNumber\":\"4575623182290326\",\n    \"cardExpYear\":\"2019\",\n    \"cardExpMonth\":\"12\",\n    \"cardCvc\":\"123\",\n    \"dues\":\"1\",\n    \"_cardTokenId\":\"ahYq8skKSzyMgcmwC\"\n}"
												},
												"url": {
													"raw": "{{url_apify}}/payment/process",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"process"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\r\n    \"success\": false,\r\n    \"titleResponse\": \"Error\",\r\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\r\n    \"lastAction\": \"validation data\",\r\n    \"data\": {\r\n        \"totalErrors\": 13,\r\n        \"errors\": [\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field value required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field docType required\"\r\n            },\r\n            {\r\n                 \"codError\": 500,\r\n                \"errorMessage\": \"field docNumber required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field name required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field lastName required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field email required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field cellPhone required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field phone required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field cardNumber required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field cardExpYear required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field cardExpMonth required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field cardCvc required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field dues required\"\r\n            }\r\n        ]\r\n    }\r\n}"
										}
									]
								},
								{
									"name": "Transacción TC Split Payment",
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_apify}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\":\"1\",\n    \"docType\":\"CC\",\n    \"docNumber\":\"80198455\",\n    \"name\":\"Jhon\",\n    \"lastName\":\"Doe\",\n    \"email\":\"jhondoe@gmail.com\",\n    \"cellPhone\":\"0000000000\",\n    \"description\":\"Pago split gateway\",\n    \"phone\":\"0000000\",\n    \"cardNumber\":\"4575623182290326\",\n    \"cardExpYear\":\"2020\",\n    \"cardExpMonth\":\"12\",\n    \"cardCvc\":\"123\",\n    \"dues\":\"1\",\n    \"_cardTokenId\": \"sEMcnanNA3jbwmvjX\",\n    \"_customerId\": \"BgNWb8BXqhiEMuZ3Y\",\n    \"splitpayment\":true,\n    \"splitRule\":\"8\",\n\t\"splitReceivers\":\"79497\",\n\t\"splitReceiversAmount\":\"1\",\n    \"tax\":0,\n    \"taxBase\":0\n}"
										},
										"url": {
											"raw": "{{url_apify}}/payment/process",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"payment",
												"process"
											]
										},
										"description": "Para realizar una transacción de tarjeta de crédito con pagos divididos (split payment), es decir, que el pago realizado en la transacción se divide en los correspondientes pagos a cada cliente que fije en la solicitud.\n\n## ¿Cómo crear una transacción tarjeta de crédito con split payment?\n\n> Para crear una transacción con tarjeta de crédito con split payment se debe realizar la solicitud que se indica enviando los siguientes parámetros como obligatorios.\n\n|Parámetro| Descripción|\n|------------------|---------------------|\n|**value**| `string(2)` Valor de la transacción.|\n|**docType**|`string(4)`Tipo documento cliente.|\n|**docNumber**| `string(20)` Número documento cliente.|\n|**name**| `string(50)` Nombre cliente.|\n|**lastName**|`string(50)` Apellido cliente.|\n|**email**| `string(50)` Email cliente.|\n|**cellPhone**| `string(10)` Celular cliente.|\n|**phone**| `string(10)` Teléfono cliente.|\n|**splitpayment**| `Boolean` Condicional si se dividirá el pago|\n|**splitRule**|`string(20)` código de la regla.|\n|**splitReceivers**|`string(255)` Clientes que se le harán la dispersión, separados por coma.|\n|**splitReceiversAmount**| `string(255)` Valores que se harán dispersión, separados por coma, en el mismo orden de los splitReceivers.|\n\n>Si unos de los clientes no realizó transacciones anteriormente en la plataforma de ePayco, debe enviar los parámetros de la tarjeta:\n\n|Parámetro| Descripción|\n|------------------|--------------------|\n|**cardNumber**| `string(16)` Número de tarjeta.|\n|**cardExpYear**|`string(AA)` Fecha año de expiración.|\n|**cardExpMonth**|`string(10)` Fecha mes de expiración.|\n|**cardCvc**|`string(4)` CVV.|\n\n \n> En la primera respuesta obtendras los token del cliente y la tarjeta, los cuales son asociados a el correo enviado por el comercio, debes validar en la aplicación que los siguientes consumos del servicio se deben enviar los parametros sin los datos de la tajeta:\n\n|Parámetro |  Descripción|\n|---------|------------------------------|\n|**cardTokenId**|`string(20)` Token de la tajeta.|\n|**customerId**|`string(20)` Token del cliente.|\n\n\n## Importante\n\nEs muy importante almacenar los datos de los token cuando se procese por primera vez, para evitar estar creando token de la misma tarjeta ya generada anteriormente."
									},
									"response": [
										{
											"name": "Transacción TC Split Payment respuesta exitosa",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\":\"1\",\n    \"docType\":\"CC\",\n    \"docNumber\":\"80198455\",\n    \"name\":\"Felipe\",\n    \"lastName\":\"Ochoa\",\n    \"email\":\"felipeochoa11011@gmail.com\",\n    \"cellPhone\":\"0000000000\",\n    \"description\":\"Pago McDonalds\",\n    \"phone\":\"0000000\",\n    \"cardNumber\":\"4575623182290326\",\n    \"cardExpYear\":\"2020\",\n    \"cardExpMonth\":\"12\",\n    \"cardCvc\":\"123\",\n    \"dues\":\"1\",\n    \"_cardTokenId\": \"sEMcnanNA3jbwmvjX\",\n    \"_customerId\": \"BgNWb8BXqhiEMuZ3Y\",\n    \"splitpayment\":true,\n    \"splitRule\":\"8\",\n\t\"splitReceivers\":\"79497\",\n\t\"splitReceiversAmount\":\"1\",\n    \"tax\":0,\n    \"taxBase\":0\n}"
												},
												"url": {
													"raw": "{{url_apify}}/payment/process",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"process"
													]
												}
											},
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\r\n    \"success\": true,\r\n    \"titleResponse\": \"Success transaction\",\r\n    \"textResponse\": \"Success transaction\",\r\n    \"lastAction\": \"transaction_split_payment_tc\",\r\n    \"data\": {\r\n        \"transaction\": {\r\n            \"status\": true,\r\n            \"success\": true,\r\n            \"type\": \"Create payment\",\r\n            \"data\": {\r\n                \"ref_payco\": 7363332,\r\n                \"factura\": \"QR-APIFY1576599077\",\r\n                \"descripcion\": \"Compra referencia QR-APIFY1576599077\",\r\n                \"valor\": \"500000\",\r\n                \"iva\": \"0\",\r\n                \"baseiva\": \"0\",\r\n                \"moneda\": \"COP\",\r\n                \"banco\": \"Banco de Pruebas\",\r\n                \"estado\": \"Aceptada\",\r\n                \"respuesta\": \"Aprobada\",\r\n                \"autorizacion\": \"000000\",\r\n                \"recibo\": 7363332,\r\n                \"fecha\": \"2019-12-17 11:11:19\",\r\n                \"franquicia\": \"VS\",\r\n                \"cod_respuesta\": 1,\r\n                \"ip\": \"127.0.1.1\",\r\n                \"tipo_doc\": \"CC\",\r\n                \"documento\": \"123456789\",\r\n                \"nombres\": \"jon\",\r\n                \"apellidos\": \"doe\",\r\n                \"email\": \"jondoe@hotmail.com\",\r\n                \"enpruebas\": 1,\r\n                \"ciudad\": \"NA\",\r\n                \"direccion\": \"SIN DIRECCION\",\r\n                \"ind_pais\": \"\"\r\n            },\r\n            \"object\": \"payment\"\r\n        },\r\n        \"tokenCard\": {\r\n            \"email\": \"jondoe@hotmail.com\",\r\n            \"cardTokenId\": \"XCX92PZqBKfmcWFbA\",\r\n            \"customerId\": \"DiYPdhgncppes9KAb\"\r\n        }\r\n    }\r\n}"
										},
										{
											"name": "Transacción TC Split Payment respuesta fallida campos",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\":\"1\",\n    \"docType\":\"CC\",\n    \"docNumber\":\"80198455\",\n    \"name\":\"Felipe\",\n    \"lastName\":\"Ochoa\",\n    \"email\":\"felipeochoa11011@gmail.com\",\n    \"cellPhone\":\"0000000000\",\n    \"description\":\"Pago McDonalds\",\n    \"phone\":\"0000000\",\n    \"cardNumber\":\"4575623182290326\",\n    \"cardExpYear\":\"2020\",\n    \"cardExpMonth\":\"12\",\n    \"cardCvc\":\"123\",\n    \"dues\":\"1\",\n    \"_cardTokenId\": \"sEMcnanNA3jbwmvjX\",\n    \"_customerId\": \"BgNWb8BXqhiEMuZ3Y\",\n    \"splitpayment\":true,\n    \"splitRule\":\"8\",\n\t\"splitReceivers\":\"79497\",\n\t\"splitReceiversAmount\":\"1\",\n    \"tax\":0,\n    \"taxBase\":0\n}"
												},
												"url": {
													"raw": "{{url_apify}}/payment/process",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"process"
													]
												}
											},
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{    \"success\": false,\r\n    \"titleResponse\": \"Error\",\r\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\r\n    \"lastAction\": \"validation data\",\r\n    \"data\": {\r\n        \"totalErrors\": 13,\r\n        \"errors\": [\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field value required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field docType required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field docNumber required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field name required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field lastName required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field email required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field cellPhone required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field phone required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field cardNumber required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field cardExpYear required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field cardExpMonth required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field cardCvc required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field dues required\"\r\n            }\r\n        ]\r\n    }\r\n}"
										},
										{
											"name": "Transacción TC Split Payment respuesta fallida error transacción",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\":\"1\",\n    \"docType\":\"CC\",\n    \"docNumber\":\"80198455\",\n    \"name\":\"Felipe\",\n    \"lastName\":\"Ochoa\",\n    \"email\":\"felipeochoa11011@gmail.com\",\n    \"cellPhone\":\"0000000000\",\n    \"description\":\"Pago McDonalds\",\n    \"phone\":\"0000000\",\n    \"cardNumber\":\"4575623182290326\",\n    \"cardExpYear\":\"2020\",\n    \"cardExpMonth\":\"12\",\n    \"cardCvc\":\"123\",\n    \"dues\":\"1\",\n    \"_cardTokenId\": \"sEMcnanNA3jbwmvjX\",\n    \"_customerId\": \"BgNWb8BXqhiEMuZ3Y\",\n    \"splitpayment\":true,\n    \"splitRule\":\"8\",\n\t\"splitReceivers\":\"79497\",\n\t\"splitReceiversAmount\":\"1\",\n    \"tax\":0,\n    \"taxBase\":0\n}"
												},
												"url": {
													"raw": "{{url_apify}}/payment/process",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"process"
													]
												}
											},
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\r\n    \"success\": false,\r\n    \"titleResponse\": \"Error create transaction\",\r\n    \"textResponse\": \"Error create transaction Cliente o token inexistente\",\r\n    \"lastAction\": \"create_transaction\",\r\n    \"data\": {\r\n        \"error\": {\r\n            \"status\": \"error\",\r\n            \"description\": \"\\\"Verifica que los datos enviados seán existentes o correctos.\\\"\",\r\n            \"errors\": [\r\n                {\r\n                    \"codError\": \"E100\",\r\n                    \"errorMessage\": \"Error inesperado\"\r\n                }\r\n            ]\r\n        },\r\n        \"tokenCard\": {\r\n            \"email\": \"jondoe@hotmail.com\",\r\n            \"cardTokenId\": \"XCX92PZqBKfmcWFbA\",\r\n            \"customerId\": \"DiYPdhgncppes9KAb\"\r\n        }\r\n    }\r\n}"
										},
										{
											"name": "Transacción TC Split Payment respuesta fallida transacción valores no concuerdan",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\":\"1\",\n    \"docType\":\"CC\",\n    \"docNumber\":\"80198455\",\n    \"name\":\"Felipe\",\n    \"lastName\":\"Ochoa\",\n    \"email\":\"felipeochoa11011@gmail.com\",\n    \"cellPhone\":\"0000000000\",\n    \"description\":\"Pago McDonalds\",\n    \"phone\":\"0000000\",\n    \"cardNumber\":\"4575623182290326\",\n    \"cardExpYear\":\"2020\",\n    \"cardExpMonth\":\"12\",\n    \"cardCvc\":\"123\",\n    \"dues\":\"1\",\n    \"_cardTokenId\": \"sEMcnanNA3jbwmvjX\",\n    \"_customerId\": \"BgNWb8BXqhiEMuZ3Y\",\n    \"splitpayment\":true,\n    \"splitRule\":\"8\",\n\t\"splitReceivers\":\"79497\",\n\t\"splitReceiversAmount\":\"1\",\n    \"tax\":0,\n    \"taxBase\":0\n}"
												},
												"url": {
													"raw": "{{url_apify}}/payment/process",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"process"
													]
												}
											},
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{ \r\n   \"success\":false,\r\n   \"title_response\":\"Error\",\r\n   \"text_response\":\"Algunos campos son invalidos, por favor corrija los errores y vuelva a intentarlo\",\r\n   \"last_action\":\"validation transaction\",\r\n   \"data\":{ \r\n      \"totalerrores\":1,\r\n      \"errores\":[ \r\n         { \r\n            \"codError\":\"S003\",\r\n            \"errorMessage\":\"El valor de la transacci\\u00f3n no concuerda a la suma del split\"\r\n         }\r\n      ]\r\n   }\r\n}"
										},
										{
											"name": "Transacción TC Split Payment respuesta fallida regla no existe",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\":\"1\",\n    \"docType\":\"CC\",\n    \"docNumber\":\"80198455\",\n    \"name\":\"Felipe\",\n    \"lastName\":\"Ochoa\",\n    \"email\":\"felipeochoa11011@gmail.com\",\n    \"cellPhone\":\"0000000000\",\n    \"description\":\"Pago McDonalds\",\n    \"phone\":\"0000000\",\n    \"cardNumber\":\"4575623182290326\",\n    \"cardExpYear\":\"2020\",\n    \"cardExpMonth\":\"12\",\n    \"cardCvc\":\"123\",\n    \"dues\":\"1\",\n    \"_cardTokenId\": \"sEMcnanNA3jbwmvjX\",\n    \"_customerId\": \"BgNWb8BXqhiEMuZ3Y\",\n    \"splitpayment\":true,\n    \"splitRule\":\"8\",\n\t\"splitReceivers\":\"79497\",\n\t\"splitReceiversAmount\":\"1\",\n    \"tax\":0,\n    \"taxBase\":0\n}"
												},
												"url": {
													"raw": "{{url_apify}}/payment/process",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"process"
													]
												}
											},
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{ \r\n   \"success\":false,\r\n   \"title_response\":\"Error\",\r\n   \"text_response\":\"Algunos campos son invalidos, por favor corrija los errores y vuelva a intentarlo\",\r\n   \"last_action\":\"validation transaction\",\r\n   \"data\":{ \r\n      \"totalerrores\":3,\r\n      \"errores\":[ \r\n         { \r\n            \"codError\":\"S000\",\r\n            \"errorMessage\":\"Regla inexistente\"\r\n         },\r\n         { \r\n            \"codError\":\"S001\",\r\n            \"errorMessage\":\"El cliente no cuenta con una regla asociada\"\r\n         },\r\n         { \r\n            \"codError\":\"S002\",\r\n            \"errorMessage\":\"El cliente ingresado en el split no esta asociado a la regla.\"\r\n         }\r\n      ]\r\n   }\r\n}"
										}
									]
								}
							]
						},
						{
							"name": "PSE",
							"item": [
								{
									"name": "Transacción PSE",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_apify}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bank\":\"1051\",\n    \"value\":\"100\", \n    \"currency\": \"USD\",\n    \"docType\":\"CC\", \n    \"docNumber\":\"1017237749\", \n    \"name\":\"Juan\",\n    \"lastName\":\"valencia\",\n    \"email\":\"juanda.vid1996@hotmail.com\", \n    \"cellPhone\":\"3113456768\",\n    \"ip\":\"190.000.000.000\",\n    \"urlResponse\":\"https://pruebaepayco.000webhostapp.com/response.html\",\n    \"urlConfirmation\":\"https://pruebaepayco.000webhostapp.com/insert.php\"\n}  "
										},
										"url": {
											"raw": "{{url_apify}}/payment/process/pse",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"payment",
												"process",
												"pse"
											]
										},
										"description": "Para crear una transacción por PSE, puede emplear este endpoint de la forma indicada a continuación.\n\n## ¿Cómo crear una transacción pse?\n\n> Para realizar una transacción por PSE debe realizar la siguiente solicitud enviando los siguientes parámetros como obligatorios:\n\n| Parámetro|  Descripción|\n|--------------------|---------------------------------|\n|**bank**| `string(10)` `obligatorio` Id del banco en pse.|\n|**value**| `string(2)` `obligatorio` Valor de la transacción.|\n|**docType**|`string(4)` `obligatorio` Tipo documento cliente.\n|**docNumber**|`string(20)` `obligatorio` Número documento cliente.|\n|**name**|`string(50)` `obligatorio` Nombre cliente.|\n|**email**| `string(50)` `obligatorio` Email cliente.|\n|**cellPhone**|`string(10)` `obligatorio` Celular cliente.|\n|**ip**| `string(10)` `obligatorio` esta es la ip del cliente, es requerida.|\n|**urlResponse**|`text` `obligatorio` Esta es la url de respuesta donde llegará la transacción luego de ser confirmada por el banco.|\n\n> Parámetros opcionales\n\n|Parámetro| Descripción|\n|--------------|--------------------|\n|**phone**|`string` `obligatorio` télefono.|\n|**lastName**| `string(50)` `obligatorio` Apellido cliente.|\n|**tax**|`string` `obligatorio` Impuesto.|\n|**taxBase**|`string` `obligatorio` Valor base sin impuesto.|\n|**description**|`string` `obligatorio` Descripción.|\n|**invoice**|`string` `obligatorio` Número de factura.|\n|**currency**|`string` `obligatorio` Moneda.|\n|**typePerson**|`string` `obligatorio` id del tipo de persona. (Persona = 0, Comercio=1)|\n|**address**|`string` `obligatorio` Dirección.|\n|**urlConfirmation**|`text` `obligatorio` Url de confirmación donde se enviarán variables de respuesta confirmando o negando la transacción. En esta url se debe validar que el valor de la transacción y el número de la factura coincidan con los valores recibidos en la confirmación de la transacción|\n|**methodConfimation**|`string`     `obligatorio` Método de confirmación (GET, POST) Valor por default GET.|\n|**extra1**|`string`  `obligatorio`  información extra.|\n|**extra2**|`string`  `obligatorio`  información extra.|\n|**extra3**|`string`  `obligatorio`  información extra.|\n|**extra4**|`string`  `obligatorio`  información extra.|\n|**extra5**|`string` `obligatorio`  información extra.|\n|**extra6**|`string` `obligatorio`  información extra.|\n|**extra7**|`string` `obligatorio`  información extra.|\n|**extra8**|`string` `obligatorio`  información extra.|\n|**extra9**|`string` `obligatorio`  información extra.|\n|**extra10**|`string` `obligatorio` información extra.|"
									},
									"response": [
										{
											"name": "Transacción PSE respuesta exitosa",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bank\": \"1022\",\n    \"value\": \"500000\",\n    \"docType\": \"CC\",\n    \"docNumber\": \"xxxxxxxxx\",\n    \"name\": \"Jon\",\n    \"lastName\": \"Doe\",\n    \"email\": \"cjondoe@hotmail.com\",\n    \"cellPhone\": \"xxxxxxxxxx\",\n    \"ip\": \"190.000.000.000\",\n    \"urlResponse\": \"www.prueba.com\",\n    \"phone\": \"0000000\",\n    \"tax\": \"19\",\n    \"taxBase\": \"200000\",\n    \"description\": \"Prueba\",\n    \"invoice\": \"1231516546\",\n    \"currency\": \"COP\",\n    \"typePerson\": \"1\",\n    \"address\": \"Crr86#56-415\",\n    \"urlConfirmation\": \"www.pruebaconfirmacion.com\",\n    \"methodConfimation\": \"GET\",\n    \"extra1\": \"\",\n    \"extra2\": \"\",\n    \"extra3\": \"\"\n}"
												},
												"url": {
													"raw": "{{url_apify}}/payment/process/pse",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"process",
														"pse"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Success transaction pse\",\n    \"textResponse\": \"Success transaction pse\",\n    \"lastAction\": \"transaction_pse\",\n    \"data\": {\n        \"ref_payco\": 26292245,\n        \"factura\": \"QR-APIFY-PSE1596837368\",\n        \"descripcion\": \"Pago Factura #QR-APIFY-PSE1596837368\",\n        \"valor\": 10000,\n        \"iva\": 0,\n        \"baseiva\": 0,\n        \"moneda\": \"COP\",\n        \"estado\": \"Pendiente\",\n        \"respuesta\": \"Redireccionando al banco\",\n        \"autorizacion\": \"705895997\",\n        \"recibo\": \"48771596837369\",\n        \"fecha\": \"2020-08-07 1656:09\",\n        \"urlbanco\": \"https://registro.pse.com.co/PSEUserRegister/StartTransaction.aspx?enc=tnPcJHMKlSnmRpHM8fAbu0o6N6ZEnqaUy%2fuRgek4DoBWZzbvjUxw5V1C2T%2faQQse\",\n        \"transactionID\": \"705895997\",\n        \"ticketId\": \"48771596837369\"\n    }\n}"
										},
										{
											"name": "Transacción PSE respuesta fallida campos requeridos",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bank\": \"1022\",\n    \"value\": \"500000\",\n    \"docType\": \"CC\",\n    \"docNumber\": \"xxxxxxxxx\",\n    \"name\": \"Jon\",\n    \"lastName\": \"Doe\",\n    \"email\": \"cjondoe@hotmail.com\",\n    \"cellPhone\": \"xxxxxxxxxx\",\n    \"ip\": \"190.000.000.000\",\n    \"urlResponse\": \"www.prueba.com\",\n    \"phone\": \"0000000\",\n    \"tax\": \"19\",\n    \"taxBase\": \"200000\",\n    \"description\": \"Prueba\",\n    \"invoice\": \"1231516546\",\n    \"currency\": \"COP\",\n    \"typePerson\": \"1\",\n    \"address\": \"Crr86#56-415\",\n    \"urlConfirmation\": \"www.pruebaconfirmacion.com\",\n    \"methodConfimation\": \"GET\",\n    \"extra1\": \"\",\n    \"extra2\": \"\",\n    \"extra3\": \"\"\n}"
												},
												"url": {
													"raw": "{{url_apify}}/payment/process/pse",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"process",
														"pse"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data\",\n    \"data\": {\n        \"totalErrors\": 13,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field bank required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field value required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field docType required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field docNumber required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field name required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field lastName required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field email required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field cellPhone required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field phone required\"\n            }\n        ]\n    }\n}"
										},
										{
											"name": "Transacción PSE respuesta fallida transacción denegada",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bank\": \"1022\",\n    \"value\": \"500000\",\n    \"docType\": \"CC\",\n    \"docNumber\": \"xxxxxxxxx\",\n    \"name\": \"Jon\",\n    \"lastName\": \"Doe\",\n    \"email\": \"cjondoe@hotmail.com\",\n    \"cellPhone\": \"xxxxxxxxxx\",\n    \"ip\": \"190.000.000.000\",\n    \"urlResponse\": \"www.prueba.com\",\n    \"phone\": \"0000000\",\n    \"tax\": \"19\",\n    \"taxBase\": \"200000\",\n    \"description\": \"Prueba\",\n    \"invoice\": \"1231516546\",\n    \"currency\": \"COP\",\n    \"typePerson\": \"1\",\n    \"address\": \"Crr86#56-415\",\n    \"urlConfirmation\": \"www.pruebaconfirmacion.com\",\n    \"methodConfimation\": \"GET\",\n    \"extra1\": \"\",\n    \"extra2\": \"\",\n    \"extra3\": \"\"\n}"
												},
												"url": {
													"raw": "{{url_apify}}/payment/process/pse",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"process",
														"pse"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"success\": false,\n    \"titleResponse\": \"FAIL_ACCESSDENIED\",\n    \"textResponse\": \"El proceso de pagos en PSE para pruebas se encuentra desactivado por el momento.Actualmente se encuentra disponible los medios de pago de Tarjeta de Crédito y Efectivo en modo de pruebas.\",\n    \"lastAction\": \"create_transaction_pse\",\n    \"data\": {\n        \"error\": {\n            \"ref_payco\": 25854074,\n            \"factura\": \"QR-APIFY-PSE1596334795\",\n            \"descripcion\": \"Pago Factura #QR-APIFY-PSE1596334795\",\n            \"valor\": \"500000\",\n            \"iva\": \"0\",\n            \"baseiva\": \"0\",\n            \"moneda\": \"COP\",\n            \"estado\": \"pre-procesada\",\n            \"respuesta\": \"pre-procesada esperando por procesar en la pasarela.\",\n            \"autorizacion\": \"000000\",\n            \"recibo\": \"000000\",\n            \"fecha\": \"2020-08-01 2119:59\",\n            \"urlbanco\": \"\",\n            \"transactionID\": \"-1\",\n            \"ticketId\": \"48771596334799\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Confirmar Transacción PSE",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_apify}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transactionID\":751212089\n} "
										},
										"url": {
											"raw": "{{url_apify}}/payment/pse/transaction",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"payment",
												"pse",
												"transaction"
											]
										},
										"description": "Si desea confirmar una transacción de PSE luego de obtener la respuesta del banco, usted puedo realizar esta acción por medio del uso de este endpoint.\n\n## ¿Cómo confirmar una transacción de PSE?\n\nPara confirmar una transacción de PSE se debe realizar la siguiente solicitud enviando  los siguientes parámetros como obligatorios.\n\n|Parámetro|  Descripción|\n|----------------|--------------------|\n|**transactionID** |`integer(11)` `obligatorio` id de la transacción.|"
									},
									"response": [
										{
											"name": "Confirmar Transacción PSE respuesta exitosa",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"transactionID\":751212089\n} "
												},
												"url": {
													"raw": "{{url_apify}}/payment/pse/transaction",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"pse",
														"transaction"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"success\": true,\n    \"titleResponse\": \"PENDING\",\n    \"textResponse\": \"Transacción Pendiente\",\n    \"lastAction\": \"update_transaction\",\n    \"data\": {\n        \"ref_payco\": 26291500,\n        \"factura\": \"QR-APIFY-PSE1596836491\",\n        \"descripcion\": \"Pago Factura #QR-APIFY-PSE1596836491\",\n        \"valor\": 10000,\n        \"iva\": 0,\n        \"baseiva\": 0,\n        \"moneda\": \"COP\",\n        \"banco\": \"BANCO DAVIVIENDA\",\n        \"estado\": \"Pendiente\",\n        \"respuesta\": \"Por favor verificar si el débito fue realizado en el Banco.\",\n        \"autorizacion\": \"705885651\",\n        \"recibo\": \"48771596836492\",\n        \"fecha\": \"2020-08-07 16:41:32\",\n        \"franquicia\": \"PSE\",\n        \"cod_respuesta\": 3,\n        \"ip\": \"190.0.0.0\",\n        \"enpruebas\": 2,\n        \"tipo_doc\": \"CC\",\n        \"documento\": \"1035863428\",\n        \"nombres\": \"Juan Felipe\",\n        \"apellidos\": \"Mesa Ocampo\",\n        \"email\": \"felipemesa14@hotmail.com\",\n        \"ciudad\": \"\",\n        \"direccion\": \"N/A\",\n        \"ind_pais\": null,\n        \"transactionID\": \"705885651\",\n        \"ticketId\": 48771596836492\n    }\n}"
										},
										{
											"name": "Confirmar Transacción PSE respuesta fallida error en campos",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"transactionID\":751212089\n} "
												},
												"url": {
													"raw": "{{url_apify}}/payment/pse/transaction",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"pse",
														"transaction"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data\",\n    \"data\": {\n        \"totalErrors\": 13,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field transactionID required\"\n            }\n        ]\n    }\n}"
										}
									]
								},
								{
									"name": "Transacción PSE SplitPayment",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_apify}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bank\":\"1022\",\n    \"value\":\"1\", \n    \"docType\":\"CC\", \n    \"docNumber\":\"1234567\", \n    \"name\":\"Juan\",\n    \"lastName\":\"Mesa\",\n    \"email\":\"juanmesa@hotmail.com\", \n    \"cellPhone\":\"3113456768\",\n    \"ip\":\"190.000.000.000\",\n    \"urlResponse\":\"https://epayco.co/\",\n    \"splitpayment\":true,\n    \"splitRule\":\"2\",\n\t\"splitReceivers\":\"28770\",\n\t\"splitReceiversAmount\":\"1\"\n}  "
										},
										"url": {
											"raw": "{{url_apify}}/payment/process/pse",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"payment",
												"process",
												"pse"
											]
										},
										"description": "Para realizar una transacción por pse con pagos divididos (split payment), es decir, que el pago realizado en la transacción se divide en los correspondientes pagos a cada cliente que fije en la solicitud.\n\n## ¿Cómo crear una transacción pse con split payment?\n\n> Para crear una transacción con pse con split payment se debe realizar la solicitud que se indica enviando los siguientes parámetros como obligatorios.\n\n|Parámetro| Descripción|\n|-------------------|---------------------|\n|**bank**|`string(Id del banco)` ` obligatorio` Id del banco en pse.|\n|**value**|`string`   ` obligatorio` Valor de la transacción.|\n|**docType**|`string(4)`   ` obligatorio` Tipo documento cliente.|\n|**docNumber**|`string(20)`  ` obligatorio` Número documento cliente.|\n|**name**| `string(50)`  ` obligatorio` Nombre cliente.|\n|**lastName**|`string(50)`  ` obligatorio` Apellido cliente.|\n|**email**| `string(50)`  ` obligatorio` Email cliente.|\n|**cellPhone**| `string(10)`  ` obligatorio` Celular cliente.|\n|**ip**| `string`  ` obligatorio` Dirección IP del cliente que realizará la transacción.|\n|**urlResponse**|`string`  ` obligatorio` url donde se redirigirá al cliente después de realizar el proceso de pago.|\n|**splitpayment**| `boolean`  ` obligatorio` Condicional si se dividirá el pago|\n|**splitRule**|`string(20)`  ` obligatorio` código de la regla.|\n|**splitReceivers**|`string(255)` \n ` obligatorio` Clientes que se le harán la dispersión, separados por coma.|\n|**splitReceiversAmount**| `string(255)` \n ` obligatorio` Valores que se harán dispersión, separados por coma, en el mismo orden de los splitReceivers.|\n\n> Parámetros opcionales\n\n|Parámetro| Descripción|\n|---------------|--------------------|\n|**phone**| `string`  ` opcional` télefono.|\n|**tax**| `string`  ` opcional` Impuesto.|\n|**taxBase**|`string`  ` opcional` Valor base sin impuesto.|\n|**description**|`string`  ` opcional` Descripción.|\n|**invoice**|`string`  ` opcional` Número de factura.|\n|**currency**|`string`  ` opcional` Moneda.|\n|**typePerson**|`string`  `opcional` id del tipo de persona.|\n|**address**|`string`  `opcional` Dirección.|\n|**methodConfimation**|`string`  ` opcional` Método de confirmación (GET, POST) Valor por default GET|\n|**extra1**|`string`  ` opcional` información extra.|\n|**extra2**|`string`  ` opcional` información extra.|\n|**extra3**|`string`  ` opcional` información extra.|"
									},
									"response": [
										{
											"name": "Transacción PSE SplitPayment respuesta fallida campos requeridos",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bank\":\"1022\",\n    \"value\":\"1\", \n    \"docType\":\"CC\", \n    \"docNumber\":\"1234567\", \n    \"name\":\"Juan\",\n    \"lastName\":\"Mesa\",\n    \"email\":\"juanmesa@hotmail.com\", \n    \"cellPhone\":\"3113456768\",\n    \"ip\":\"190.000.000.000\",\n    \"urlResponse\":\"https://epayco.co/\",\n    \"splitpayment\":true,\n    \"splitRule\":\"28770\",\n\t\"splitReceivers\":\"28770\",\n\t\"splitReceiversAmount\":\"1\"\n}  "
												},
												"url": {
													"raw": "{{url_apify}}/payment/process/pse",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"process",
														"pse"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data\",\n    \"data\": {\n        \"totalErrors\": 13,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field bank required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field value required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field docType required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field docNumber required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field name required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field lastName required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field email required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field cellPhone required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field phone required\"\n            }\n        ]\n    }\n}"
										}
									]
								},
								{
									"name": "Obtener bancos PSE",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_apify}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{url_apify}}/payment/pse/banks",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"payment",
												"pse",
												"banks"
											]
										},
										"description": "Para obtener una lista de los bancos que aceptan transacciones por PSE, usted puede consultar este endpoint."
									},
									"response": [
										{
											"name": "Obtener bancos PSE respuesta exitosa",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{url_apify}}/payment/pse/banks",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"pse",
														"banks"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"success\": true,\n    \"titleResponse\": \"SUCCESS\",\n    \"textResponse\": \"Bancos Consultados Exitosamente\",\n    \"lastAction\": \"Query Bancos\",\n    \"data\": [\n        {\n            \"bankCode\": \"0\",\n            \"bankName\": \"A continuación seleccione su banco\"\n        },\n        {\n            \"bankCode\": \"1059\",\n            \"bankName\": \"BANCAMIA S.A.\"\n        },\n        {\n            \"bankCode\": \"1040\",\n            \"bankName\": \"BANCO AGRARIO\"\n        },\n        {\n            \"bankCode\": \"1052\",\n            \"bankName\": \"BANCO AV VILLAS\"\n        },\n        {\n            \"bankCode\": \"1013\",\n            \"bankName\": \"BANCO BBVA COLOMBIA S.A.\"\n        },\n        {\n            \"bankCode\": \"1032\",\n            \"bankName\": \"BANCO CAJA SOCIAL\"\n        },\n        {\n            \"bankCode\": \"1066\",\n            \"bankName\": \"BANCO COOPERATIVO COOPCENTRAL\"\n        },\n        {\n            \"bankCode\": \"1051\",\n            \"bankName\": \"BANCO DAVIVIENDA\"\n        },\n        {\n            \"bankCode\": \"1001\",\n            \"bankName\": \"BANCO DE BOGOTA\"\n        },\n        {\n            \"bankCode\": \"1023\",\n            \"bankName\": \"BANCO DE OCCIDENTE\"\n        },\n        {\n            \"bankCode\": \"1062\",\n            \"bankName\": \"BANCO FALABELLA \"\n        },\n        {\n            \"bankCode\": \"1012\",\n            \"bankName\": \"BANCO GNB SUDAMERIS\"\n        },\n        {\n            \"bankCode\": \"1006\",\n            \"bankName\": \"BANCO ITAU\"\n        },\n        {\n            \"bankCode\": \"1060\",\n            \"bankName\": \"BANCO PICHINCHA S.A.\"\n        },\n        {\n            \"bankCode\": \"1002\",\n            \"bankName\": \"BANCO POPULAR\"\n        },\n        {\n            \"bankCode\": \"1058\",\n            \"bankName\": \"BANCO PROCREDIT\"\n        },\n        {\n            \"bankCode\": \"1065\",\n            \"bankName\": \"BANCO SANTANDER COLOMBIA\"\n        },\n        {\n            \"bankCode\": \"1069\",\n            \"bankName\": \"BANCO SERFINANZA\"\n        },\n        {\n            \"bankCode\": \"1007\",\n            \"bankName\": \"BANCOLOMBIA\"\n        },\n        {\n            \"bankCode\": \"1061\",\n            \"bankName\": \"BANCOOMEVA S.A.\"\n        },\n        {\n            \"bankCode\": \"1283\",\n            \"bankName\": \"CFA COOPERATIVA FINANCIERA\"\n        },\n        {\n            \"bankCode\": \"1009\",\n            \"bankName\": \"CITIBANK \"\n        },\n        {\n            \"bankCode\": \"1292\",\n            \"bankName\": \"CONFIAR COOPERATIVA FINANCIERA\"\n        },\n        {\n            \"bankCode\": \"1551\",\n            \"bankName\": \"DAVIPLATA\"\n        },\n        {\n            \"bankCode\": \"1507\",\n            \"bankName\": \"NEQUI\"\n        },\n        {\n            \"bankCode\": \"1151\",\n            \"bankName\": \"RAPPIPAY\"\n        },\n        {\n            \"bankCode\": \"1019\",\n            \"bankName\": \"SCOTIABANK COLPATRIA\"\n        }\n    ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "SafetyPay",
							"item": [
								{
									"name": "Crear Transacción SafetyPay",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_apify}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{token_apif}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cash\": \"1\",\r\n    \"expirationDate\": \"2021-11-11\",\r\n    \"docType\": \"CC\",\r\n    \"document\": \"123456789\",\r\n    \"name\": \"Jhon\",\r\n    \"lastName\": \"doe\",\r\n    \"email\": \"jhon.doe@yopmail.com\",\r\n    \"indCountry\": \"57\",\r\n    \"phone\": \"3003003434\",\r\n    \"country\": \"CO\",\r\n    \"city\": \"N/A\",\r\n    \"address\": \"N/A\",\r\n    \"currency\": \"COP\",\r\n    \"description\": \"Diciembre 17 2021 11:37:01 GMT-0400 (hora de Colombia)\",\r\n    \"value\": 100000,\r\n    \"tax\": 0,\r\n    \"ico\": 0,\r\n    \"taxBase\": 0,\r\n    \"methodConfirmation\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/payment/process/safetypay",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"payment",
												"process",
												"safetypay"
											]
										},
										"description": "Con el siguiente endpoint se podrá crear una transacción con el medio de pago Safetypay\n\n## ¿Cómo ejecutar una transacción Safetypay?\n\nPara crear una transacción con medio de pago SafetyPay se deben enviar los siguientes parámetros:\n\n|Parámetro| Tipo (longitud)| Descripción|\n|------|-------|------------------------|\n|**cash**| String obligatorio| Indicativo si es Banca en linea o Efectivo (valores 1 o 2 respectivamente).|\n|**expirationDate**| String obligatorio| Fecha de expiración (Formato yyyy-mm-dd).|\n|**docType**| String(4) obligatorio| Tipo de documento del cliente.|\n|**document**| int obligatorio| Documento del cliente.|\n|**name**| String(255) obligatorio| Nombre del cliente.|\n|**lastName**| String(255) obligatorio| Apellido del cliente.|\n|**email**|String(255) Obligatorio| correo del cliente.|\n|**indCountry**| String(3) obligatorio| Índice del país|\n|**phone**|Int Obligatorio| Teléfono del cliente.|\n|**country**|String(255) Obligatorio| País del cliente.|\n|**city**|String(255) Opcional| Ciudad del cliente.|\n|**address**| String(255) Opcional| Dirección del cliente.|\n|**ip**|String(16) Obligatorio| IP del clinte|\n|**currency**|String(3) Opcional (tipo de moneda. Default COP).|\n|**description**|String(255) Opcional| Descripción de la transacción|\n|**value**| String(255) Obligatorio| valor de la transacción|\n|**tax**|Int Opcional| impuesto de la transacción, Default 0).|\n|**ico**|Int Opcional| Otro impuesto, default 0)|\n|**taxBase**|Int Opcional| base del impuesto, Default 0|\n|**testMode**| Boolean Opcional |Indica si la transacción es una prueba. Default false.|\n|**urlResponse**| String(255) Opcional| Url de respuesta|\n|**urlConfirmation**| String(255) opcional| url de confirmación. En esta url se debe validar que el valor de la transacción y el número de la factura coincidan con los valores recibidos en la confirmación de la transacción|\n|**methodConfirmation**| String(255) opcional| método de petición para la url de confirmación. Default \"GET\".|\n\n## Ejemplo de respuesta satisfactoria\n\n``` json\n{\n    \"success\": true,\n    \"titleResponse\": \"SUCCESS\",\n    \"textResponse\": \"\",\n    \"lastAction\": \"\",\n    \"data\": {\n         \"transaction\": {\n            \"refPayco\": 30613306,\n            \"description\": \"Thu Jun 17 2021 11:37:01 GMT-0400 (hora de Venezuela)\",\n            \"value\": 100000,\n            \"tax\": 0,\n            \"ico\": 0,\n            \"taxBase\": 0,\n            \"currency\": \"COP\",\n            \"status\": \"Pendiente\",\n            \"response\": \"Esperando pago del cliente en SafetyPay\",\n            \"autorization\": \"000000\",\n            \"receipt\": \"93751624630665\",\n            \"date\": \"2021-06-25 0917:02\",\n            \"urlBank\": \"https://sandbox-gateway.safetypay.com/Express4/Checkout/index?TokenID=b32c2c3f-747e-404b-8663-c1b9e5e2fd5c&ChannelID=ONLINE\",\n            \"transactionId\": 30613306,\n            \"ticketId\": 93751624630665\n        }\n    }\n    }\n}\n```"
									},
									"response": []
								}
							]
						},
						{
							"name": "Transacción Estandar",
							"item": [
								{
									"name": "Transacción Estandar",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_apify}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"channel\": \"RDP\",\n    \"value\": \"21000\",\n    \"docType\": \"CC\",\n    \"docNumber\": \"23443295\",\n    \"name\": \"david\",\n    \"lastName\": \"valencia\",\n    \"email\": \"test@epayco.com\",\n    \"cellPhone\": \"584127751699\",\n    \"ip\": \"190.000.000.000\",\n    \"city\": \"Medellín\",\n    \"phone\": \"584127751696\",\n    \"description\": \"2 x Pantalón blanco, 1 x Tenis Negros, 2 x Sobrero\",\n    \"_invoice\": \"87ccf160104064291722\",\n    \"address\": \"Av 48\",\n    \"urlResponse\": \"https://vende-test.epayco.io/catalogo/avon/success/87ccf160104064291721\",\n    \"urlConfirmation\": \"http://apify.epayco.io/test/catalogue/shoppingcart/checkout/confirmation\",\n    \"methodConfimation\": \"POST\",\n    \"extra1\": \"20000\",\n    \"extra2\": \"1000\",\n    \"extra3\": \"300\",\n    \"extra4\": \"20700\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/payment/process/standard",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"payment",
												"process",
												"standard"
											]
										},
										"description": "Para realizar una transacción tipo estándar, usted podra emplear este endpoint y realizar la solicitud de la forma indicada.\n\n## ¿Cómo crear una transacción estándar?\n\nPara realizar una transacción estándar es necesario realizar la solicitud enviando los siguientes parámetros como obligatorios.\n\n|Parámetro | Descripción|\n|----------------|--------------------|\n|**channel**|`string` `obligatorio` Canal o medio de pago por donde procesara la transacción.|\n\nPara este campo de canal (**chanel**)  se deben enviar los siguientes valores descritos a continuación.\n\n|Canal|Descripción|\n|---------|--------------------------|\n|DPA | Daviplata App|\n|QRDV| QR Davivienda|\n|RDP | Recarga Daviplata|\n|RCP | Recarga CívicaPay|\n\n|Parámetro| Descripción|\n|------------------|----------------------|\n|**value**|`float` `obligatorio` Valor de la transacción.|\n|**docType**|`string` `obligatorio` Tipo documento cliente.|\n|**docNumber**|`string` `obligatorio` Número documento cliente.|\n|**name**|`string` `obligatorio` Nombre cliente.|\n|**lastName**|`string` `obligatorio` Apellido cliente.|\n|**email**|`string` `obligatorio` Email cliente.|\n|**cellPhone**|`string` `obligatorio` Celular cliente.|\n|**phone**|`string` `obligatorio` Teléfono cliente.|\n|**ip**|`string` `obligatorio` Esta es la ip del cliente, es requerida.|\n|**urlResponse**|`string` `obligatorio` Url de respuesta.| \n\n\n> Parámetros opcionales\n\n|Parámetro | Descripción|\n|-----------------|----------------------|\n|**city**|`string` `opcional`  Ciudad.|\n|**country**|`string` `opcional` País|\n|**department**|`string` `opcional` Departamento|\n|**phone**|`string` `opcional` Teléfono celular.|\n|**tax**|`string` `opcional` Impuesto.|\n|**taxBase**|`string` `opcional` Valor base sin impuesto.|\n|**description**|`string` `opcional` Descripción.|\n|**invoice**|`string` `opcional` Número de factura.|\n|**currency** |`string` `opcional` Moneda (COP, USD).|\n|**typePerson**| `string` `opcional` Naturaleza de la persona (1=Persona Natural, 2=Persona Jurídica).|\n|**address**| `string` `opcional` Dirección.|\n|**urlConfirmation**| `string` `opcional` Url de confirmación. En esta url se debe validar que el valor de la transacción y el número de la factura coincidan con los valores recibidos en la confirmación de la transacción|\n|**methodConfimation**|`string` `opcional` Método de confirmación (GET, POST).|\n|**openPayment**|`boolean` `opcional`  Pago único (true, false).|\n|**extra1**|`string` `opcional` información extra permitidos hasta 10 extras.|\n|**extra2**|`string` `opcional` información extra permitidos hasta 10 extras.|\n|**extra3**|`string` `opcional` información extra, permitidos hasta 10 extras.|"
									},
									"response": [
										{
											"name": "Transacción Estandar respuesta exitosa",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"channel\": \"RDP\",\n    \"value\":\"21000\",\n    \"docType\":\"CC\",\n    \"docNumber\":\"23443295\",\n    \"name\":\"Jose\",\n    \"lastName\":\"Altuve\",\n    \"email\":\"test@hotmail.com\",\n    \"cellPhone\":\"584127751699\",\n    \"ip\":\"190.000.000.000\", \n    \"city\":\"Medellín\",\n    \"phone\":\"584127751696\", \n    \"description\":\"2 x Pantalón blanco, 1 x Tenis Negros, 2 x Sobrero\",\n    \"_invoice\":\"87ccf160104064291722\",\n    \"address\":\"Av 48\", \n    \"urlResponse\":\"https://vende-test.epayco.io/catalogo/avon/success/87ccf160104064291721\", \n    \"urlConfirmation\":\"http://apify.epayco.io/test/catalogue/shoppingcart/checkout/confirmation\",\n    \"methodConfimation\":\"POST\",\n    \"extra1\":\"20000\",\n    \"extra2\":\"1000\",\n    \"extra3\":\"300\",\n    \"extra4\":\"20700\"\n}"
												},
												"url": {
													"raw": "{{url_apify}}/payment/process/standard",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"process",
														"standard"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Success transaction\",\n    \"textResponse\": \"Success transaction\",\n    \"lastAction\": \"create_transaction\",\n    \"data\": {\n        \"refEpayco\": 26922530,\n        \"invoice\": \"QR-APIFY-RDP1600227267\",\n        \"description\": \"\",\n        \"value\": \"50000\",\n        \"tax\": \"0\",\n        \"taxBase\": \"0\",\n        \"currency\": \"COP\",\n        \"bank\": \"RDP\",\n        \"state\": \"Pendiente\",\n        \"stateMessage\": \"Esperando confirmación del cliente\",\n        \"authorizationCode\": \"000000\",\n        \"receipt\": \"000000\",\n        \"dateTime\": \"2020-09-15 22:34:30\",\n        \"channel\": \"RDP\",\n        \"responseCode\": 3,\n        \"ip\": \"190.000.000.000\",\n        \"test\": 2,\n        \"docType\": \"CC\",\n        \"docNumber\": \"1234567\",\n        \"name\": \"Juan\",\n        \"lastName\": \"Mesa\",\n        \"email\": \"juanmesa@hotmail.com\",\n        \"city\": \"\",\n        \"address\": \"N/A\",\n        \"country\": null,\n        \"urlRedirect\": \"https://recarga-daviplata.epayco.io/pagar?terminal=26922530\"\n    }\n}"
										},
										{
											"name": "Transacción Estandar respuesta fallida errores de campos",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"channel\": \"RDP\",\n    \"value\":\"21000\",\n    \"docType\":\"CC\",\n    \"docNumber\":\"23443295\",\n    \"name\":\"Jose\",\n    \"lastName\":\"Altuve\",\n    \"email\":\"test@hotmail.com\",\n    \"cellPhone\":\"584127751699\",\n    \"ip\":\"190.000.000.000\", \n    \"city\":\"Medellín\",\n    \"phone\":\"584127751696\", \n    \"description\":\"2 x Pantalón blanco, 1 x Tenis Negros, 2 x Sobrero\",\n    \"_invoice\":\"87ccf160104064291722\",\n    \"address\":\"Av 48\", \n    \"urlResponse\":\"https://vende-test.epayco.io/catalogo/avon/success/87ccf160104064291721\", \n    \"urlConfirmation\":\"http://apify.epayco.io/test/catalogue/shoppingcart/checkout/confirmation\",\n    \"methodConfimation\":\"POST\",\n    \"extra1\":\"20000\",\n    \"extra2\":\"1000\",\n    \"extra3\":\"300\",\n    \"extra4\":\"20700\"\n}"
												},
												"url": {
													"raw": "{{url_apify}}/payment/process/standard",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"process",
														"standard"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation data\",\n    \"data\": {\n        \"totalErrors\": 13,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field channel required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field value required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field docType required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field docNumber required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field name required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field lastName required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field email required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field cellPhone required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field phone required\"\n            }\n        ]\n    }\n}"
										},
										{
											"name": "Transacción Estandar respuesta fallida montos inválidos",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"channel\": \"RDP\",\n    \"value\":\"21000\",\n    \"docType\":\"CC\",\n    \"docNumber\":\"23443295\",\n    \"name\":\"Jose\",\n    \"lastName\":\"Altuve\",\n    \"email\":\"test@hotmail.com\",\n    \"cellPhone\":\"584127751699\",\n    \"ip\":\"190.000.000.000\", \n    \"city\":\"Medellín\",\n    \"phone\":\"584127751696\", \n    \"description\":\"2 x Pantalón blanco, 1 x Tenis Negros, 2 x Sobrero\",\n    \"_invoice\":\"87ccf160104064291722\",\n    \"address\":\"Av 48\", \n    \"urlResponse\":\"https://vende-test.epayco.io/catalogo/avon/success/87ccf160104064291721\", \n    \"urlConfirmation\":\"http://apify.epayco.io/test/catalogue/shoppingcart/checkout/confirmation\",\n    \"methodConfimation\":\"POST\",\n    \"extra1\":\"20000\",\n    \"extra2\":\"1000\",\n    \"extra3\":\"300\",\n    \"extra4\":\"20700\"\n}"
												},
												"url": {
													"raw": "{{url_apify}}/payment/process/standard",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"process",
														"standard"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Algunos campos son invalidos, por favor corrija los errores y vuelva a intentarlo\",\n    \"lastAction\": \"create_transaction\",\n    \"data\": {\n        \"error\": {\n            \"totalerrores\": 1,\n            \"errores\": [\n                {\n                    \"codError\": \"E015\",\n                    \"errorMessage\": \"La transacción no se puede iniciar, monto máximo superado\"\n                }\n            ]\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Confirmar transacción estandar",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_apify}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"channel\":\"RDP\",\n    \"value\":\"50000\",\n    \"refEpayco\": \"26922743\",\n    \"currentStatusTransaction\":\"Pendiente\",\n    \"statusTransaction\":\"Aceptada\",\n    \"authorizationCode\":\"123456677889\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/payment/confirm/standard",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"payment",
												"confirm",
												"standard"
											]
										},
										"description": "Para confirmar una transacción estándar es necesario hacer uso del siguiente endpoint, realizando la solicitud como se indica a continuación.\n\n## ¿Cómo confirmar una transacción estándar?\n\nPara confirmar una transacción estándar debe realizar la solicitud enviando los siguientes parámetros como obligatorios\n\n|Parámetro | Descripción|\n|------------------|--------------------|\n|**channel**|`string` `obligatorio` Canal o medio de pago por donde procesara la transacción.|\n\nPara este campo de canal (**chanel**)  se deben enviar los siguientes valores descritos a continuación.\n\n\n|Canal|Descripción|\n|---------|--------------------------|\n|DPA | Daviplata App|\n|QRDV | QR Davivienda|\n|RDP | Recarga Daviplata|\n|RCP | Recarga CívicaPay|\n\n|Parámetro|Descripción|\n|-------------------|-------------------|\n|**value**|`float` Valor de la transacción.|\n|**currentStatusTransaction**|`string` Estado actual de la transacción (Aceptada, Rechazada, Cancelada, Abandonada).|\n|**statusTransaction**|`string` Estado a pasar la transacción (Aceptada, Rechazada, Cancelada, Abandonada).|\n|**refEpayco**|`string` ref_payco de la transacción creada.|\n|**authorizationCode**|`string` Código de autorización de la transacción en la red procesada.|\n|**bank**|`string` Banco por el cual se proceso.|"
									},
									"response": [
										{
											"name": "Confirmar transacción estandar respuesta exitosa",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"channel\":\"RDP\",\n    \"value\":\"50000\",\n    \"refEpayco\": \"26922743\",\n    \"currentStatusTransaction\":\"Pendiente\",\n    \"statusTransaction\":\"Aceptada\",\n    \"authorizationCode\":\"123456677889\"\n}"
												},
												"url": {
													"raw": "{{url_apify}}/payment/confirm/standard",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"confirm",
														"standard"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\r\n    \"success\": true,\r\n    \"titleResponse\": \"Success transaction\",\r\n    \"textResponse\": \"Success transaction\",\r\n    \"lastAction\": \"confirm_transaction\",\r\n    \"data\": {\r\n        \"refEpayco\": 26922533,\r\n        \"invoice\": \"QR-APIFY-RDP1600228001\",\r\n        \"description\": \"\",\r\n        \"value\": 50000,\r\n        \"tax\": 0,\r\n        \"taxBase\": 0,\r\n        \"currency\": \"COP\",\r\n        \"bank\": \"RDP\",\r\n        \"state\": \"Aceptada\",\r\n        \"stateMessage\": \"Confirmada por el cliente\",\r\n        \"authorizationCode\": \"123456677889\",\r\n        \"receipt\": \"000000\",\r\n        \"dateTime\": \"2020-09-15 22:46:45\",\r\n        \"channel\": \"RDP\",\r\n        \"responseCode\": 1,\r\n        \"ip\": \"190.000.000.000\",\r\n        \"test\": \"2\",\r\n        \"docType\": \"CC\",\r\n        \"docNumber\": \"1234567\",\r\n        \"name\": \"Juan\",\r\n        \"lastName\": \"Mesa\",\r\n        \"email\": \"juanmesa@hotmail.com\",\r\n        \"city\": \"\",\r\n        \"address\": \"N/A\",\r\n        \"country\": null,\r\n        \"bank\":\"cualquier banco\"\r\n    }\r\n}\r\n"
										},
										{
											"name": "respuesta fallida campos requeridos",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"channel\":\"RDP\",\n    \"value\":\"50000\",\n    \"refEpayco\": \"26922743\",\n    \"currentStatusTransaction\":\"Pendiente\",\n    \"statusTransaction\":\"Aceptada\",\n    \"authorizationCode\":\"123456677889\"\n}"
												},
												"url": {
													"raw": "{{url_apify}}/payment/confirm/standard",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"confirm",
														"standard"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\r\n    \"success\": false,\r\n    \"titleResponse\": \"Error\",\r\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\r\n    \"lastAction\": \"validation data\",\r\n    \"data\": {\r\n        \"totalErrors\": 5,\r\n        \"errors\": [\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field channel required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field value required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field docNumber required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field refPayco required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field currentStatusTransaction required\"\r\n            },\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field statusTransaction required\"\r\n            }\r\n        ]\r\n    }\r\n}"
										},
										{
											"name": "transacción no confirmada",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"channel\":\"RDP\",\n    \"value\":\"50000\",\n    \"refEpayco\": \"26922743\",\n    \"currentStatusTransaction\":\"Pendiente\",\n    \"statusTransaction\":\"Aceptada\",\n    \"authorizationCode\":\"123456677889\"\n}"
												},
												"url": {
													"raw": "{{url_apify}}/payment/confirm/standard",
													"host": [
														"{{url_apify}}"
													],
													"path": [
														"payment",
														"confirm",
														"standard"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\r\n    \"success\": false,\r\n    \"titleResponse\": \"No se pudo confirmar la transacción\",\r\n    \"textResponse\": \"Transacción no confirmada\",\r\n    \"lastAction\": \"confirm_transaction\",\r\n    \"data\": {\r\n        \"error\": []\r\n    }\r\n}"
										}
									]
								}
							]
						},
						{
							"name": "Consultar Transacción",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "password",
											"value": "{{token_apif}}",
											"type": "string"
										},
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"referencePayco\": \"45510327\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_apify}}/payment/transaction",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"payment",
										"transaction"
									]
								},
								"description": "> En este endpoint se podrá consultar una transacción de efectivo\n\nDeberá enviar el transactionId por el url \n\n#### Example response\n``` json\n{\n    \"success\": true,\n    \"titleResponse\": \"Correcto\",\n    \"textResponse\": \"Transacción consultada existosamente\",\n    \"lastAction\": \"Consultar Transaccion\",\n    \"data\": {\n        \"clientId\": \"101291\",\n        \"refPayco\": 30615768,\n        \"invoice\": \"1472050778\",\n        \"description\": \"pay test\",\n        \"amount\": \"20000.00\",\n        \"amountCountry\": \"20000.00\",\n        \"amountOk\": \"20000.00\",\n        \"tax\": \"0.00\",\n        \"ico\": 0,\n        \"baseTax\": \"0.00\",\n        \"currency\": \"COP\",\n        \"bank\": \"EFECTY\",\n        \"cardNumber\": \"*******\",\n        \"quotas\": \"\",\n        \"response\": \"Pendiente\",\n        \"autorizacion\": \"000000\",\n        \"transactionId\": \"48771657326867\",\n        \"date\": \"2021-07-19 11:11:39\",\n        \"codeResponse\": 3,\n        \"responseReasonText\": \"P004-Esperando pago del cliente en punto de servicio Efecty\",\n        \"codTransactionState\": \"3\",\n        \"status\": \"Pendiente\",\n        \"errorCode\": \"P004\",\n        \"franchise\": \"EF\",\n        \"nameBusiness\": \"Gerson david Vasquez Rodriguez\",\n        \"docType\": \"\",\n        \"document\": \"\",\n        \"name\": \"\",\n        \"lastName\": \"\",\n        \"email\": \"\",\n        \"phone\": \"\",\n        \"indCountry\": \"\",\n        \"country\": \"\",\n        \"city\": \"\",\n        \"address\": \"\",\n        \"ip\": \"10.0.1.11\",\n        \"signature\": \"637c7c39e40bfff6b2b6239ed1ab63a2db495750c47e81278ed8749cec0065fa\",\n        \"testMode\": \"FALSE\",\n        \"extra1\": \"\",\n        \"extra2\": \"\",\n        \"extra3\": \"\",\n        \"extra4\": \"\",\n        \"extra5\": \"\",\n        \"extra6\": \"\",\n        \"extra7\": \"\"\n    }\n}\n```\n\n#### Example response\n``` json\n{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Transacción no existe\",\n    \"data\": {\n        \"error\": {}\n    }\n}\n```"
							},
							"response": []
						}
					],
					"description": "> En esta sección se describen los servicios para la creación de pagos por medio de la pasarela ePayco."
				},
				{
					"name": "Subdominio",
					"item": [
						{
							"name": "Crear subdominio",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subdomain\":\"recaudo2020-4\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/subdomain/create",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"subdomain",
										"create"
									]
								},
								"description": "Con este servicio usted puede crear un subdomino donde se alojará la landing de los productos.\n\n## ¿Cómo crear un subdominio?\n\n> Para crear un subdominio debe realizar la solicitud donde debe enviar como parámetros obligatorios los indicados.\n\n|Parámetro| Descripción|\n|---------|---------------------------|\n|**subdomain**| `string` Nombre del dominio.|"
							},
							"response": [
								{
									"name": "Crear subdominio respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subdomain\":\"recaudo2020-4\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subdomain/create",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subdomain",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "    \"success\": true,\r\n    \"titleResponse\": \"Subdomain create correct\",\r\n    \"textResponse\": \"Subdomain create correct\",\r\n    \"lastAction\": \"create subdomain\",\r\n    \"data\": {\r\n        \"subdomain\": \"https://catalogoPrueba3.epayco.me\"\r\n    }\r\n}"
								},
								{
									"name": "Crear subdominio respuesta fallida",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subdomain\":\"recaudo2020-4\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subdomain/create",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subdomain",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n    \"success\": false,\r\n    \"titleResponse\": \"Error\",\r\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\r\n    \"lastAction\": \"validation clientId y data of filter\",\r\n    \"data\": {\r\n        \"totalerrors\": 2,\r\n        \"errors\": [\r\n            {\r\n                \"codError\": 500,\r\n                \"errorMessage\": \"field subdomain required\"\r\n            }\r\n        ]\r\n    }\r\n}"
								}
							]
						},
						{
							"name": "Actualizar subdominio",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subdomain\":\"recaudo2020-4\"\n}"
								},
								"url": {
									"raw": "{{url_apify}}/subdomain/update",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"subdomain",
										"update"
									]
								},
								"description": "Para actualizar la landing donde se alojan sus productos, con este endpoint podrá actualizar el subdominio.\n\n## ¿Cómo actualizar un subdominio?\n\n> Para actualizar un subdominio debe realizar la siguiente solicitud enviando los siguientes parámetros como obligatorios.\n\n|Parámetro|  Descripción|\n|---------|-------------------------|\n|**subdomain**| `string` Nombre del dominio.|"
							},
							"response": [
								{
									"name": "Actualizar subdominio respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subdomain\":\"recaudo2020-4\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subdomain/update",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subdomain",
												"update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Subdomain create correct\",\n    \"textResponse\": \"Subdomain create correct\",\n    \"lastAction\": \"create subdomain\",\n    \"data\": {\n        \"subdomain\": \"https://catalogoPrueba3.epayco.me\"\n    }\n}"
								},
								{
									"name": "Actualizar subdominio respuesta fallida",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subdomain\":\"recaudo2020-4\"\n}"
										},
										"url": {
											"raw": "{{url_apify}}/subdomain/update",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"subdomain",
												"update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n  \"success\": false,\n  \"titleResponse\": \"Error\",\n  \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n  \"lastAction\": \"validation clientId y data of filter\",\n  \"data\": {\n    \"totalerrors\": 2,\n    \"errors\": [\n      {\n        \"codError\": 500,\n        \"errorMessage\": \"field subdomain required\"\n      }\n    ]\n  }\n}"
								}
							]
						}
					],
					"description": "En esta sección puede añadir un subdominio donde aloje una landing de los productos. con los servicios que se muestran a continuación puede crear dicho subdominio y actualizarlo en caso de ser necesario."
				},
				{
					"name": "Recaudo",
					"item": [
						{
							"name": "Crear factura",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"projectId\":306,\n\t\"lotId\":1156,\n\t\"bill\":[\n\t\t\t{\t\n\t\t\t\t\"typeDoc\":\"CC\",\n\t\t\t\t\"document\":\"12345678\",\n\t\t\t\t\"names\":\"Jhon Doe\",\n\t\t\t\t\"phoneNumber\":3003003434,\n\t\t\t\t\"email\":\"jhon.doe@yopmail.com\",\n\t\t\t\t\"amountFirst\":\"10000\"\n\t\t\t}\n\t\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_apify}}/billcollect/invoices/create",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"billcollect",
										"invoices",
										"create"
									]
								},
								"description": "Si desea crear facturas a un proyecto de recaudo específico con este endpoint podrá efectuar esta solicitud siguiendo la información indicada en este apartado.\n\n## ¿Cómo crear una factura a un proyecto?\n\n> Para crear una factura a un proyecto en específico se debe realizar la solicitud enviando los siguientes parámetros como obligatorios:\n\n|Parámetro| Descripción|\n|------------------|----------------------|\n|**projectId**|`integer` Código del proyecto.|\n|**lotId**|`integer` Código del lote a crear una factura, si desea crear un lote enviar con codigo 0.|\n|**bill**|`Array` Información detalle que tendrá la factura. Consultar [bill_config](https://api.epayco.co/#114e4151-e2d0-4fb1-a56e-7e809a2827ac) para conocer los detalles de los parámetros a enviar.|\n\n\n\n\n``` json\n{\n  \"success\": false,\n  \"titleResponse\": \"Error\",\n   \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n  \"lastAction\": \"validation clientId y data of filter\",\n  \"data\": {\n     \"totalerrors\": 13,\n      \"errors\": [{\n        \"codError\": 500,\n        \"errorMessage\": \"field companyIdentification required\n      }, {\n         \"codError\": 500,\n         \"errorMessage\": \"field amountFirst required\"\n        },{\n         \"codError\": 500,\n          \"errorMessage\": \"field additionalFirst required\"\n         }, {\n          \"codError\": 500,\n          \"errorMessage\": \"field descriptionFirst required\"\n        },{\n          \"codError\": 500,\n          \"errorMessage\": \"field additionalSecond required\"\n        },{\n          \"codError\": 500,\n          \"errorMessage\": \"field additionalThird required\"\n        },{\n          \"codError\": 500,           \n          \"errorMessage\": \"field additionalFourth required\"\n        },{\n          \"codError\": 500,\n          \"errorMessage\": \"field names required\"\n         },{\n          \"codError\": 500,\n          \"errorMessage\": \"field additionalFifth required\"\n            }, {\n          \"codError\": 500,\n          \"errorMessage\": \"field additionalSixth required\"\n          }, {\n           \"codError\": 500,\n           \"errorMessage\": \"field expirationDateFirst required\"\n          }, {\n           \"codError\": 500,\n          \"errorMessage\": \"field additionalSeventh required\"\n          }, {\n          \"codError\": 500,\n          \"errorMessage\": \"field additionalEighth required\"\n            }]\n    }\n```"
							},
							"response": [
								{
									"name": "Crear factura respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"projectId\":306,\n\t\"lotId\":1156,\n\t\"bill\":[\n\t\t\t{\t\n\t\t\t\t\"typeDoc\":\"CC\",\n\t\t\t\t\"document\":\"1035863428\",\n\t\t\t\t\"names\":\"Juan Felipe Mesa Ocampo\",\n\t\t\t\t\"phoneNumber\":3024133765,\n\t\t\t\t\"email\":\"felipe.mesa@payco.co\",\n\t\t\t\t\"amountFirst\":\"10000\"\n\t\t\t}\n\t\t]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/billcollect/invoices/create",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"billcollect",
												"invoices",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n  \"success\": true,\r\n  \"titleResponse\": \"bills create\",\r\n  \"textResponse\": \"bills create\",\r\n  \"lastAction\": \"bills valid\",\r\n  \"data\": {\r\n      \"bills\": [{\r\n        \"billId\": XX,\r\n        \"companyIdentification\": \"XXX\" ,\r\n        \"amountFirst\": XXXXX,\r\n        \"additionalFirst\": \"XXXXX\",\r\n        \"descriptionFirst\": \"xxxxxxxx\",\r\n        \"additionalSecond\": \"XXXXXX\",\r\n        \"additionalThird\": \"XXXXXXXX\",\r\n        \"additionalFourth\": \"XXXXX\",\r\n        \"names\": \"descripción\",\r\n        \"additionalFifth\": \"XXXXXXX\",\r\n        \"additionalSixth\": \"XXXXXX\",\r\n        \"expirationDateFirst\": \"YYYY-MM-DD\",\r\n        \"additionalSeventh\": \"XXXXXXX\",\r\n        \"additionalEighth\": \"XXXXX\"\r\n     }],\r\n        \"lotId\": XXX\r\n    }\r\n}"
								},
								{
									"name": "Crear factura respuesta fallida",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"projectId\":306,\n\t\"lotId\":1156,\n\t\"bill\":[\n\t\t\t{\t\n\t\t\t\t\"typeDoc\":\"CC\",\n\t\t\t\t\"document\":\"1035863428\",\n\t\t\t\t\"names\":\"Juan Felipe Mesa Ocampo\",\n\t\t\t\t\"phoneNumber\":3024133765,\n\t\t\t\t\"email\":\"felipe.mesa@payco.co\",\n\t\t\t\t\"amountFirst\":\"10000\"\n\t\t\t}\n\t\t]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/billcollect/invoices/create",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"billcollect",
												"invoices",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n  \"success\": false,\r\n  \"titleResponse\": \"Error\",\r\n   \"textResponse\": \"Some fields are required, please correct the errors and try again\",\r\n  \"lastAction\": \"validation clientId y data of filter\",\r\n  \"data\": {\r\n     \"totalerrors\": 13,\r\n      \"errors\": [{\r\n        \"codError\": 500,\r\n        \"errorMessage\": \"field companyIdentification required\"\r\n      }, {\r\n         \"codError\": 500,\r\n         \"errorMessage\": \"field amountFirst required\"\r\n        },{\r\n         \"codError\": 500,\r\n          \"errorMessage\": \"field additionalFirst required\"\r\n         }, {\r\n          \"codError\": 500,\r\n          \"errorMessage\": \"field descriptionFirst required\"\r\n        },{\r\n          \"codError\": 500,\r\n          \"errorMessage\": \"field additionalSecond required\"\r\n        },{\r\n          \"codError\": 500,\r\n          \"errorMessage\": \"field additionalThird required\"\r\n        },{\r\n          \"codError\": 500,           \r\n          \"errorMessage\": \"field additionalFourth required\"\r\n        },{\r\n          \"codError\": 500,\r\n          \"errorMessage\": \"field names required\"\r\n         },{\r\n          \"codError\": 500,\r\n          \"errorMessage\": \"field additionalFifth required\"\r\n            }, {\r\n          \"codError\": 500,\r\n          \"errorMessage\": \"field additionalSixth required\"\r\n          }, {\r\n           \"codError\": 500,\r\n           \"errorMessage\": \"field expirationDateFirst required\"\r\n          }, {\r\n           \"codError\": 500,\r\n          \"errorMessage\": \"field additionalSeventh required\"\r\n          }, {\r\n          \"codError\": 500,\r\n          \"errorMessage\": \"field additionalEighth required\"\r\n            }]\r\n    }"
								}
							]
						},
						{
							"name": "Consultar factura",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"projectId\":29,\n\t\"document\":\"123456\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_apify}}/billcollect/invoices/consult",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"billcollect",
										"invoices",
										"consult"
									]
								},
								"description": "Para consultar las facturas que tiene un proyecot de recaudo en específico puede hacer uso de este endpoint siguiendo las indicaciones a continuación.\n\n## ¿Cómo ver la configuración de un proyecto?\n\nPara consultar la configuración de un proyecto, debe realizar la solicitud enviado los siguientes parámetros como obligatorios.\n\n|Parámetro|Descripción|\n|-----------------|----------------------------------------|\n|**projectId**|`integer` `obligatorio` Código del proyecto. |\n|**document**| `string` `obligatorio` Número de documento.|"
							},
							"response": [
								{
									"name": "Consultar factura respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"projectId\":29,\n\t\"document\":\"123456\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/billcollect/invoices/consult",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"billcollect",
												"invoices",
												"consult"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"consult bills\",\n    \"textResponse\": \"success consult bills\",\n    \"lastAction\": \"consult bills\",\n    \"data\": {\n        \"bills\": [\n            {\n                \"currency\": \"COP\",\n                \"lastPayDate\": null,\n                \"lastPayStatus\": null,\n                \"amountFirst\": 2000,\n                \"descriptionFirst\": \"ninguna\",\n                \"names\": \"prueba prueba\",\n                \"pendingAmount\": null,\n                \"additionalSeventh\": \"15000\",\n                \"taxFirst\": null\n            }\n        ],\n        \"pagination\": {\n            \"current_page\": 1,\n            \"from\": 1,\n            \"last_page\": 1,\n            \"next_page_url\": null,\n            \"path\": \"https://conex.epayco.io/test/billcollect/invoices/consult\",\n            \"per_page\": 5000,\n            \"prev_page_url\": null,\n            \"to\": 1,\n            \"total\": 1\n        }\n    }\n}"
								},
								{
									"name": "Consultar factura respuesta fallida",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"projectId\":29,\n\t\"document\":\"123456\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/billcollect/invoices/consult",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"billcollect",
												"invoices",
												"consult"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"The field additionalFifth is not search field in the project 198\",\n    \"textResponse\": \"The field additionalFifth is not search field in the project 198\",\n    \"lastAction\": \"validation field\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Detalle de factura",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"billCodeEpayco\":7945949\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_apify}}/billcollect/invoices/detail",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"billcollect",
										"invoices",
										"detail"
									]
								},
								"description": "En este endpoint usted podrá ver la informacion de la factura que desea realizando los pasos indicados a continuación.\n\n## ¿Cómo ver la información del detalle de una factura de recaudo?\n\nPara poder visualizar la información del detalle de una factura de recaudo, debe realizar la solicitud enviando enviado los siguientes parámetros como obligatorios.\n\n|Parámetro|Descripción|\n|-----------------|-----------------------|\n|**billCodeEpayco**|`integer` Identificador interno de ePayco para asociar las facturas de recaudo.|"
							},
							"response": [
								{
									"name": "Detalle de factura respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"billCodeEpayco\":7945949\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/billcollect/invoices/detail",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"billcollect",
												"invoices",
												"detail"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"bills edit\",\n    \"textResponse\": \"bills edit\",\n    \"lastAction\": \"bills valid\",\n    \"data\": {\n        \"billId\": \"0000001244\",\n        \"companyIdentification\": \"741025632854\",\n        \"amountFirst\": 1211100000,\n        \"taxFirst\": 0,\n        \"descriptionFirst\": \"Factura 12345697\",\n        \"additionalFirst\": \"\",\n        \"additionalSecond\": \"\",\n        \"additionalThird\": \"\",\n        \"names\": \"ICONTEC\",\n        \"additionalFourth\": \"\",\n        \"additionalFifth\": \"\",\n        \"additionalSixth\": \"Vencimiento 27/10/2018\",\n        \"additionalSeventh\": \"12345678\",\n        \"additionalEighth\": \"\"\n    }\n}"
								},
								{
									"name": "Detalle de factura respuesta fallida",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"billCodeEpayco\":7945949\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/billcollect/invoices/detail",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"billcollect",
												"invoices",
												"detail"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"the bill was not found\",\n    \"textResponse\": \"the bill was not found\",\n    \"lastAction\": \"bill valid\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Actualizar factura",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"billCodeEpayco\":6420454,\n\t\"bill\":{\n\t\t\"companyIdentification\": \"741025632854\",\n\t\t\"names\": \"ICONTEC\",\n\t\t\"additionalFirst\": \"1\",\n        \"additionalSecond\": \"3\",\n\t\t\"additionalThird\": \"3\",\n\t\t\"amountFirst\":1000,\n\t\t\"expirationDateFirst\":\"2020-05-05\",\n\t\t\"additionalFourth\": \"5\",\n\t\t\"additionalFifth\": \"6\"\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_apify}}/billcollect/invoices/update",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"billcollect",
										"invoices",
										"update"
									]
								},
								"description": "Si desea actualizar la información de una factura de recaudo ya creada en el sistema, en este endpoint usted podrá ver enviar los datos que desea actualizar de la factura realizando los pasos indicados a continuación.\n\n## ¿Cómo actualizar la data de una factura de recauda ya creada?\n\nPara poder actualizar la información de una factura de recaudo, debe realizar la solicitud enviando enviado los siguientes parámetros como obligatorios.\n\n|Parámetro|Descripción|\n|----------------|-----------------------|\n|**billCodeEpayco**|`integer` Identificador interno de ePayco para asociar las facturas de recaudo.|\n|**bill**|`array` Información detalle que tendrá la factura. Consultar [bill_config](https://api.epayco.co/#114e4151-e2d0-4fb1-a56e-7e809a2827ac) para conocer los detalles de los parámetros a enviar.|"
							},
							"response": [
								{
									"name": "Actualizar factura respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"billCodeEpayco\":6420454,\n\t\"bill\":{\n\t\t\"companyIdentification\": \"741025632854\",\n\t\t\"names\": \"ICONTEC\",\n\t\t\"additionalFirst\": \"1\",\n        \"additionalSecond\": \"3\",\n\t\t\"additionalThird\": \"3\",\n\t\t\"amountFirst\":1000,\n\t\t\"expirationDateFirst\":\"2020-05-05\",\n\t\t\"additionalFourth\": \"5\",\n\t\t\"additionalFifth\": \"6\"\n\t}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/billcollect/invoices/update",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"billcollect",
												"invoices",
												"update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"bills update\",\n    \"textResponse\": \"bills update\",\n    \"lastAction\": \"bills valid\",\n    \"data\": [\n        {\n            \"billId\": \"0000001244\",\n            \"companyIdentification\": \"741025632854\",\n            \"amountFirst\": 1211100000,\n            \"taxFirst\": 0,\n            \"descriptionFirst\": \"Factura 12345697\",\n            \"additionalFirst\": \"1\",\n            \"additionalSecond\": \"3\",\n            \"additionalThird\": \"3\",\n            \"names\": \"ICONTEC\",\n            \"additionalFourth\": \"5\",\n            \"additionalFifth\": \"6\",\n            \"additionalSixth\": \"Vencimiento 27/10/2018\",\n            \"additionalSeventh\": \"12345678\",\n            \"additionalEighth\": \"7\"\n        }\n    ]\n}"
								},
								{
									"name": "Actualizar factura respuesta fallida",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"billCodeEpayco\":6420454,\n\t\"bill\":{\n\t\t\"companyIdentification\": \"741025632854\",\n\t\t\"names\": \"ICONTEC\",\n\t\t\"additionalFirst\": \"1\",\n        \"additionalSecond\": \"3\",\n\t\t\"additionalThird\": \"3\",\n\t\t\"amountFirst\":1000,\n\t\t\"expirationDateFirst\":\"2020-05-05\",\n\t\t\"additionalFourth\": \"5\",\n\t\t\"additionalFifth\": \"6\"\n\t}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/billcollect/invoices/update",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"billcollect",
												"invoices",
												"update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Some fields are required, please correct the errors and try again\",\n    \"lastAction\": \"validation clientId y data of filter\",\n    \"data\": {\n        \"totalerrors\": 6,\n        \"errors\": [\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field additionalFirst required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field additionalSecond required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field additionalThird required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field additionalFourth required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field additionalFifth required\"\n            },\n            {\n                \"codError\": 500,\n                \"errorMessage\": \"field additionalEighth required\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Actualizar estado  factura",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"billCodeEpayco\":1592592139077686700\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_apify}}/billcollect/invoices/update/status",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"billcollect",
										"invoices",
										"update",
										"status"
									]
								},
								"description": "Si desea actualizar el estado de una factura de recaudo en la plataforma de ePayco, en este endpoint usted podrá actualizar el estado realizando los pasos indicados a continuación.\n\n## ¿Cómo actualizar el estado  de una factura de recauda ya creada?\n\nPara poder actualizar el estado de una factura de recaudo, debe realizar la solicitud enviando enviado los siguientes parámetros como obligatorios.\n\n|Parámetro|Descripción|\n|-----------------|-----------------------|\n|**billCodeEpayco**|`integer` Identificador interno de ePayco para asociar las facturas de recaudo.|"
							},
							"response": []
						},
						{
							"name": "Leer configuración de proyecto",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"projectId\":29\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_apify}}/billcollect/proyect/config/consult",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"billcollect",
										"proyect",
										"config",
										"consult"
									]
								},
								"description": "Para consultar la configuración de un proyecto de recaudo en específico, usted podrá leer esta información en este endpoint.\n\n## ¿Cómo ver la configuración de un proyecto?\n\nPara realizar la solicitud de consulta de información de un proyecto de recaudo debe realizar la solicitud enviando como atributo obligatorio el **projectId** que representa el código del proyecto del recaudo."
							},
							"response": [
								{
									"name": "Leer configuración de proyecto respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\"projectId\":29\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/billcollect/proyect/config/consult",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"billcollect",
												"proyect",
												"config",
												"consult"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n  \"success\": true,\r\n  \"titleResponse\": \"data of project config\",\r\n  \"textResponse\": \"data of project config\",\r\n  \"lastAction\": \"project config valid\",\r\n  \"data\": [{\r\n      \"key\": \"billId\",\r\n      \"name\": \"Factura\",\r\n      \"required\": true,\r\n      \"consult\": true\r\n    }, {\r\n      \"key\": \"companyIdentification\",\r\n      \"name\": \"Identificacion Cliente\",  \r\n      \"required\": true,\r\n      \"consult\": true\r\n    },{\r\n      \"key\": \"amountFirst\",\r\n      \"name\": \"Valor  Factura\",\r\n      \"required\": true,\r\n      \"consult\": false\r\n     },{\r\n      \"key\": \"additionalFirst\",\r\n      \"name\": \"Campo en blanco\",\r\n      \"required\": true,\r\n      \"consult\": false\r\n     },{\r\n       \"key\": \"descriptionFirst\",\r\n       \"name\": \"Descripcion recaudo\",\r\n       \"required\": true,\r\n       \"consult\": false\r\n     },{\r\n       \"key\": \"additionalSecond\",\r\n       \"name\": \"Campo en blanco 1\",\r\n       \"required\": true,\r\n       \"consult\": false\r\n     }, {\r\n       \"key\": \"additionalThird\"  \r\n       \"name\": \"Campo en blanco 2\",\r\n       \"required\": true,\r\n       \"consult\": false\r\n     }, {\r\n       \"key\": \"additionalFourth\",\r\n       \"name\": \"Campo en blanco 3\",\r\n       \"required\": true,\r\n       \"consult\": false\r\n     },{\r\n       \"key\": \"names\"\r\n       \"name\": \"Nombre  Cliente 4\",\r\n       \"required\": true,\r\n       \"consult\": false\r\n     }, {\r\n       \"key\": \"additionalFifth\",\r\n       \"name\": \"Campo en blanco 5\",\r\n       \"required\": true,\r\n       \"consult\": false\r\n     },{\r\n       \"key\": \"additionalSixth\",\r\n       \"name\": \"Campo en blanco 6\",\r\n       \"required\": true,\r\n       \"consult\": false\r\n     },{\r\n        \"key\": \"expirationDateFirst\",   \r\n        \"name\": \"Vencimiento\",\r\n        \"required\": true,\r\n        \"consult\": false\r\n     }, {\r\n        \"key\": \"additionalSeventh\",\r\n        \"name\": \"Id factura\",\r\n        \"required\": true,\r\n        \"consult\": false\r\n     }, {\r\n        \"key\": \"additionalEighth\",\r\n        \"name\": \"Campo en blanco 7\",\r\n        \"required\": true,\r\n        \"consult\": false\r\n    }]\r\n}"
								},
								{
									"name": "Leer configuración de proyecto respuesta fallida",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\"projectId\":29\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/billcollect/proyect/config/consult",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"billcollect",
												"proyect",
												"config",
												"consult"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n  \"success\": false,\r\n  \"titleResponse\": \"Error\", \r\n  \"textResponse\": \"Some fields are required, please correct the errors and try again\",\r\n  \"lastAction\": \"validation clientId y data of filter\",\r\n  \"data\": {\r\n    \"totalerrors\": 1,\r\n    \"errors\": [{\r\n        \"codError\": 500,\r\n        \"errorMessage\": \"field projectId required\"\r\n      }]\r\n   }\r\n}"
								}
							]
						}
					],
					"description": "La plataforma de **ePayco** en esta sección muestra la información de una serie de servicios relacionados con la creación, edición y demás detalles relacionados con los recaudos realizados por medio de nuestra plataforma."
				},
				{
					"name": "Link Acortado",
					"item": [
						{
							"name": "Crear Link",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\":\"http://epayco.com/test-epayco\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_apify}}/links",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"links"
									]
								},
								"description": "Si desea crear un link acortado en la plataforma de ePayco, en este endpoint usted podrá generar un link acortado realizando los pasos indicados a continuación.\n\n## ¿Cómo generar un link acortado?\n\nPara poder generar un link acortado debe realizar la solicitud enviando enviado los siguientes parámetros como obligatorios.\n\n|Parámetro|Descripción|\n|-----------------|-----------------------|\n|**url**|`string` Url que desea acortar, ustede debe enviar la ur completa, con los parametros tipo querystring y el protocolo de conexión (http:// ó https://).|\n\n## Código de errores\n \n|Code        |   Message                     |Description|\n|------------|-------------------------------|---------------------------------|\n|AL001| URL not send|Validación de campo URL requerido.|\n|AL002| URL is required|Validación de campo URL requerido.|\n|AL003| The URL structure is wrong|Formato inválido de URL.|\n|AED100| validation eData|Registro bloqueado (Mensaje personalizado).|"
							},
							"response": [
								{
									"name": "Crear Link respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"url\":\"http://juandavidmarulanda.com/juan?id=1&test=2&juan=3\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/links",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"links"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Url created\",\n    \"textResponse\": \"Url created\",\n    \"lastAction\": \"create url\",\n    \"data\": {\n        \"originalUrl\": \"http://www.prueba/123145.com\",\n        \"newUrl\": \"https://ep.co/n\"\n    }\n}"
								},
								{
									"name": "Crear Link respuesta fallida",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"url\":\"http://juandavidmarulanda.com/juan?id=1&test=2&juan=3\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/links",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"links"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Error\",\n    \"textResponse\": \"Error\",\n    \"lastAction\": \"create url\",\n    \"data\": [\n        {\n            \"codError\": \"AED100\",\n            \"errorMessage\": \"La información ingresada no cumple con los parámetros definidos en términos y condiciones. Diligencie el campo de nuevo\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Consumir Link",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_apify}}/links/oXf",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"links",
										"oXf"
									]
								},
								"description": "En este endpoint usted podrá consumir el link acortado, generar el contador de consumo y recibir el link original para redirigir al usuario.\n\n## ¿Cómo consumir un  link acortado?\n\nPara poder consumir un link acortado debe realizar la solicitud enviando enviado los siguientes parámetros como obligatorios.\n\n|Parámetro|Descripción|\n|-----------------|-----------------------|\n|**idLink**|`string` id del link a consultar, este se encuentra despues de la base url del link acortado.  ejemplo: https://ep.co/ **idLink**.|"
							},
							"response": [
								{
									"name": "Consumir Link respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_apify}}/links/{idLink}",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"links",
												"{idLink}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"Url Consumed\",\n    \"textResponse\": \"Url Consumed\",\n    \"lastAction\": \"consume url\",\n    \"data\": {\n        \"original_url\": \"http://www.felipefy5.com/juan?search=1\",\n        \"shortened_url\": \"https://ep.co/j\"\n    }\n}"
								},
								{
									"name": "Consumir Link respuesta fallida",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_apify}}/links/{idLink}",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"links",
												"{idLink}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Url not found\",\n    \"textResponse\": \"Url not found\",\n    \"lastAction\": \"search url\",\n    \"data\": \"\"\n}"
								}
							]
						},
						{
							"name": "Obtener Estadisticas Link",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {jwt_token}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\":\"http://epayco.com/test-epayco\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_apify}}/links/stats/oXf",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"links",
										"stats",
										"oXf"
									]
								},
								"description": "En este endpoint usted podrá consultar las estadísticas del link requerido, es decir conocer cúantas veces ha sido consumido el link.\n\n## ¿Cómo consultar las estadísticas de un  link acortado?\n\nPara poder consultar las estadísticas de un link acortado debe realizar la solicitud enviando enviado los siguientes parámetros como obligatorios.\n\n|Parámetro|Descripción|\n|-----------------|-----------------------|\n|**idLink**|`string` id del link a consultar, este se encuentra despues de la base url del link acortado.  ejemplo: https://ep.co/ **idLink**.|\n\n> En la respuesta de la solicitud tenemos los siguientes parámetros\n\n|Parámetro| Descripción|\n|-------------------|-------------------------------|\n|**useCount**|`integer` Se refiere a las veces que ha sido cosumido el link por un usuario.|\n|**requestCount**|`integer` se referiere a las veces que ha sido creado el link.|"
							},
							"response": [
								{
									"name": "Obtener Estadisticas Link respuesta exitosa",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_apify}}/links/stats/{idLink}",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"links",
												"stats",
												"{idLink}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"originalUrl\": \"http://www.prueba.com/juan?search=1\",\n    \"newUrl\": \"e\",\n    \"shortenedUrl\": \"https://ep.co/e\",\n    \"useCount\": 5,\n    \"requestCount\": 1,\n    \"lastRequested\": \"2020-06-28 17:40:40\",\n    \"lastUsed\": \"2020-06-28 17:42:47\"\n}"
								},
								{
									"name": "Obtener Estadisticas Link respuesta fallida",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_apify}}/links/stats/{idLink}",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"links",
												"stats",
												"{idLink}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"titleResponse\": \"Link not found\",\n    \"textResponse\": \"Link not found\",\n    \"lastAction\": \"request Stats\",\n    \"data\": \"\"\n}"
								}
							]
						}
					],
					"description": "Si desea condensar un LINK que resulte muy largo y tediso, podemos emplear los servicios de esta sección para crear un LINK acortado y obtener las estadisticas de cuantas personas están visitando este enlace."
				},
				{
					"name": "Comision",
					"item": [
						{
							"name": "Lista comision",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_apify}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":1080\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_apify}}/commission/list",
									"host": [
										"{{url_apify}}"
									],
									"path": [
										"commission",
										"list"
									]
								},
								"description": "En este endpoint usted podrá consultar la lista de comisiones. Así mismo, podrá realizar un filtrado de esta lista por nombre (**name**)."
							},
							"response": [
								{
									"name": "Lista comision respuesta exitosa",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\":1080\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_apify}}/commission/list",
											"host": [
												"{{url_apify}}"
											],
											"path": [
												"commission",
												"list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"titleResponse\": \"consult commission\",\n    \"textResponse\": \"success consult commission\",\n    \"lastAction\": \"consult commission\",\n    \"data\": {\n        \"code\": \"12\",\n        \"name\": \"Prueba\",\n        \"description\": null,\n        \"percent\": 1,\n        \"fixed\": 5000,\n        \"value\": null,\n        \"channel\": \"APP\",\n        \"appId\": \"APP\"\n    }\n}"
								}
							]
						}
					],
					"description": "En esta sección se presentan los servicios relacionados con la información de las comisiones."
				}
			],
			"description": "La Apify de ePayco le brinda la posibilidad de ejecutar una serie de acciones de la plataforma relacionadas con los clientes y sus respectivos saldos, catálagos, transacciones, movimientos, subscripciones. Básicamente, con el uso de estos servicios puede manejar todas las opciones que le brinda la plataforma.\n\n## Consideraciones Generales del uso de la Api\n\nDebe tomar en cuenta primeramente que debe estar registrado en la plataforma ya que para la autenticación debe emplear unas llaves públicas y privadas que sólo puede obtener en el dashboard de la plataforma en el apartado integraciones.\n\nAsí mismo, hay unos servicios que están disponibles solo para usuarios que tienen un plan adquirido en la plataforma, en cada sección de estos servicios se especifica esta opción.\n\n## Errores generales\n\n> Nota: Tome en cuenta que todas las solicitudes que realice a los endpoint deben realizarse del lado del servidor, ya que si lo realiza desde el lado del cliente obtendrá el error de solicitud de orígenes cruzados (CORS).\n\nLa Api de la plataforma de ePayco tiene una serie de respuestas generales en caso que la solicitud no se esté realizando correctamente, estas respuestas se detallan a continuación:\n\n> Si realiza una solicitud a un endpoint que no existe recibirá una respuesta con código HTTP/1.1 404 NOT FOUND.\n\n> Si en la solicitud no se envía en la cabecera el token_apify (se genera al realizar el login de forma satisfactoria) obtendrá una respuesta con código HTTP/1.1 401 Unauthorized.\n\n> También, existen unos códigos generales de respuestas de los servicios en caso de validación de campos o errores en parámetros enviados que se describen en la siguiente tabla:\n\n|Código|Mensaje Respuesta: Descripción|\n|--------|-----------------------------------------------------------|\n|A001|field required: Validación de campos requeridos|\n|A002|field invalid: Validación de campos válidos|\n|A003|field max length: Validación del máximo de caracteres de un campo|\n|A004|code not found: Código no encontrado (Códigos maestros)|\n|A005|email already exist: Correo ya existe en ePayco (creación de cuenta)|\n|A006|restrictive list: Validación de listas restrictivas|\n|A007|error validation: Ocurrió un error en la validación|\n|AL001|URL not send: Validación de campo URL requerido|\n|AL002|URL is required: Validación de campo URL requerido|\n|AL003|The URL structure is wrong: Formato inválido de URL|\n| AED100|La información ingresada no cumple con los parámetros definidos en términos y condiciones. Diligencie el campo de nuevo.|\n\nSólo usuarios registrados pueden establecer una comunicación con la aplicación, en caso de no serlo lo invitamos a [registrarse](https://dashboard.epayco.co/login#registro). \n\nCon la API de ePayco puede controlar varias acciones que tenemos disponibles para usted, la cual puede hacer uso con la siguiente url base que deberá reemplazar por la variable url_apify:\n\n| Ambiente       | API Url {{url_apify}} |\n|----------------|------------------------------|\n| Producción     | https://apify.epayco.co      |\n\n## Colección en Postman\n\nComo plataforma poseemos una colección de nuestra **API** en postman que le permitirá realizar sus intregaciones de la manera mas fácil y simple, la cual puede obtener por medio del botón a continuación:\n\n[![Descargar colección](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/00bcd2055008dc86b04f?action=collection%2Fimport)"
		},
		{
			"name": "eLogística ePayco",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"if (responseCode.code == 200) {",
									"",
									"    var jsonData = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"API_TOKEN\", jsonData.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "2f48ea347518e2f96a6592f6a07ee4dd",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic {{PUBLIC_KEY}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						},
						"description": "El proceso de login consiste en generar un token que le permitirá autenticarse durante 45 minutos, durante este tiempo usted podrá realizar peticiones a los diferentes servicios con el token generado, pasado este tiempo usted deberá generar un nuevo token para continuar realizando operaciones.\n\n## ¿Cómo generar el token?\n\n> Para generar el  JWT token  debe emplear la autenticación Basic empleando las variables: PUBLIC_KEY  (esta variables usted podrá obtenerlas accediendo a nuestro [dashboard](https://dashboard.epayco.co) en la sección de **integraciones -> llaves api**) codificadas en base64.\n\n```curl\nAuthorization: Basic BASE64(PUBLIC_KEY)\n```\n> Solicitud a realizar \n\n```curl\ncurl --location --request POST '{{url}}/login' \\ \n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic BASE64(PUBLIC_KEY)' \\\n```\n\n> Respuesta de la solicitud \n\n```json\n{ \"status\": true,\n  \"message\": \"Login exitoso\",\n  \"data\": {\n    \"public_key\": \"PUBLIC_KEY\",\n    \"id_user_rest_pagos\": XXXXX,\n    \"updated_at\": \"YYYY-MM-DD H:i:s\",\n    \"created_at\": \"YYYY-MM-DD H:i:s\"\n  },\n  \"api_token\": \"XXXXXXXXXXXXX\"\n} \n```\n"
					},
					"response": []
				},
				{
					"name": "Listar Ciudades",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "48b3bf3511bdf3e23c0ee5833e7171b1118466e0",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic {{API_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/ciudades",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"ciudades"
							]
						},
						"description": "En este endpoint usted podrá listar todas las ciudades de la Rest Logística de ePayco, en la respuesta de esta solicitud tendra un parámeto llamado ***codigo_dane*** el cual deberá enviar en todas las peticiones donde se requiera la ciudad en todos los endpoints que listen ciudades. Así mismo, vendrá el código asignado por cada operador para la ciudad, en caso de ser *NULL* el valor significará que ese operador no presta servicio en esa ciudad.\n\n## ¿Cómo listar las ciudades?\n\n> Para listar las ciudades debe realizar la solicitud como se indica a continuación.\n\n```curl\ncurl --location --request GET '{{url}}/api/ciudades' \\ \n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic BASE64(api_token)' \\\n```\n\n> Respuesta de la solicitud\n\n```json\n    {\n    \"status\": \"true\",\n    \"code\": \"200\",\n    \"message\": \"Ciudades consultadas correctamente\",\n    \"data\": [\n         {\n            \"codigo_dane\": \"XXXXXX\",\n            \"nombre\": \"CIUDAD\",\n            \"departamento\": \"DEPARTAMENTO\",\n            \"created_at\": null,\n            \"updated_at\": null,\n            \"codigo_tcc\": \"XXX\"\n        },{...}\n      ]\n    }\n```\n\n"
					},
					"response": []
				},
				{
					"name": "Listar Departamentos",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "3108468de1d0c432b9f1bc18b9ee858d8e8a4969",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic {{API_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/departamentos",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"departamentos"
							]
						},
						"description": "> En este endpoint usted podrá listar todos los departamentos de la Rest Logística de ePayco.\n\n## ¿Cómo listar los departamentos?\n\n> Para listar los departamentos debe realizar la solicitud como se indica a continuación.\n\n```curl\ncurl --location --request GET '{{url}}/api/departamentos' \\ \n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic BASE64(api_token)' \\\n```\n\n> Respuesta de la solicitud\n\n```json\n  {  \"status\": \"true\",\n     \"code\": \"200\",\n     \"message\": \"Departamentos consultados correctamente\",\n     \"data\": [\n       {\n         \"departamento\": \"DEPARTAMENTO\"\n        }, {....}\n      ]\n}\n```\n\n"
					},
					"response": []
				},
				{
					"name": "Listar Ciudades Agrupadas por Departamento",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic {{API_TOKEN}}",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/api/ciudades/agrupado",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"ciudades",
								"agrupado"
							]
						},
						"description": "Para listar ciudades de la Rest Logística de ePayco agrupadas por departamento, con este endpoint usted podrá generar esta información como se indica en esta sección.\n\n## ¿Cómo listar ciudades agrupadas por departamentos?\n\n> Para listar ciudades de la Rest Logística de ePayco agrupadas por departamentos, debe realizar la siguiente solicitud.\n\n```curl\ncurl --location --request GET '{{url}}//api/ciudades/agrupado' \\ \n--header 'Content-Type: application/json' \\\n```\n\n## Ejemplo de Respuesta:\n\n    {\n\t\"status\": \"true\",\n\t\"code\": \"200\",\n\t\"message\": \"Ciudades agrupadas consultadas correctamente\",\n\t\"data\": {\n\t    \"AMAZONAS\": [\n\t            {\n\t                \"codigo_dane\": \"91001000\",\n\t                \"nombre\": \"LETICIA\",\n\t                \"departamento\": \"AMAZONAS\",\n\t                \"created_at\": null,\n\t                \"updated_at\": null,\n\t                \"codigo_tcc\": \"670\",\n\t                \"id_rest_payco\": \"1\"\n\t            },\n\t            {\n\t                \"codigo_dane\": \"91263000\",\n\t                \"nombre\": \"EL ENCANTO\",\n\t                \"departamento\": \"AMAZONAS\",\n\t                \"created_at\": null,\n\t                \"updated_at\": null,\n\t                \"codigo_tcc\": null,\n\t                \"id_rest_payco\": null\n\t            },..."
					},
					"response": []
				},
				{
					"name": "Nueva Configuracion Usuario",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "48b3bf3511bdf3e23c0ee5833e7171b1118466e0",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic {{API_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"direccion\":\"Esta es la direccion de la conf Manizales\",\n\t\"telefono\":\"1111111\",\n\t\"ciudad\":\"17001000\",\n\t\"nombre\":\"Nombre de conf Manizales\",\n\t\"documento\":\"222222\",\n\t\"tipo_documento\":\"NIT\",\n\t\"tipo_persona\":\"J\",\n\t\"recogida_automatica\":\"true\",\n\t\"dias\":\"T\",\n\t\"segmento\":\"AM\",\n\t\"tag\":\"manizales\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/configuracion/nuevo",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"configuracion",
								"nuevo"
							]
						},
						"description": "En este endpoint usted podrá crear una nueva configuración de remitente.\n\n## ¿Cómo crear una configuración de remitente?\n\n>Para crear una configuración de remitente debe realizar la solicitud enviando los siguientes parametros como obligatorios.\n\n|Parámetro| Tipo (longitud)|Descripción|\n|---------|---------|----------------------------------|\n|**direccion**|String|Dirección en la que se realizarán las recogidas y aparecerá en los documentos como dirección del remitente.|\n|**telefono**|String| Teléfono aparecerá en los documentos como teléfono del remitente.|\n|**ciudad**| String| Código dane, para obtener este código consultar el endpoint [ciudades](https://api.epayco.co/#2aca9dfd-8b31-49e3-b290-6669619fd404), además será la ciudad de origen para Cotizaciones, y será la ciudad que aparecerá como ciudad del remitente.|\n|**nombre**|String| Será el nombre que aparecerá en los documentos como nombre del remitente.|\n|**documento**|String| Es el número de documento de identificación que aparecerá en los documentos como documento del remitente.|\n|**tipo_documento**|String| Es el tipo de documento de identificación que aparecerá en los documentos como tipo documento del remitente (\"CC\"-\"NIT\").|\n|**tipo_persona**|String| Es el tipo de persona que aparecerá en los documentos N = Natural, J = Jurídica.|\n|**recogida_automatica**|String \"true\" - \"false\"|Es el parámetro que activará el servicio de recogida automática, este servicio generará automaticamente una recogida a la direccion registrada en la configuración y será programado para el dia siguiente a la fecha de creación de la guia y en el horario registrado en esta configuración.|\n|**dias**|String \"T\"| Esta variable debe ir siempre en este valor solo es requerida si el campo *\"recogida_automatica\"* esta en \"true\".|\n|**segmento**|String|Esta variable debe ir siemprey cuando el campo *\"recogida_automatica\"* esté en \"true\", esta variable define el horario en el que se recoerá la mercancia AM = de 9am a 12 m -  PM= de 2 pm a 5 pm.|\n|**tag**| String| Será el nombre de la configuracion.|\n\n> Parámetros opcionales:\n\n|Parámetro| Tipo (longitud)|Descripción|\n|---------|----------|---------------------------------|\n|**asume_comercio**|Booleano | Con esta variable usted podrá identificar si el comercio asume el envío, en caso de no ser enviada se setea por defecto en **false**.|\n\n\n> Solicitud realizada\n\n```curl\ncurl --location --request POST'{{url}}/api/configuracion/nuevo' \\ \n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic BASE64(api_token)' \\\n--data-raw '{\n  {\n    \"direccion\":\"detalle dirección\",\n    \"telefono\":\"XXXXXXXX\",\n    \"ciudad\":\"XXXXXXXXXXX\",\n    \"nombre\":\"Nombre de configuración\",\n    \"documento\":\"XXXXXXXXXX\",\n    \"tipo_documento\":\"XX\",\n    \"tipo_persona\":\"X\",\n    \"recogida_automatica\":\"true\",\n    \"dias\":\"X\",\n    \"segmento\":\"AM\",\n    \"tag\":\"configuración\"\n   }\n}'\n```\n\n## Ejemplo de Respuesta:\n\n    {\n    \t\"status\": \"true\",\n\t    \"code\": \"200\",\n\t    \"message\": \"\",\n\t    \"data\": {\n\t        \"message\": \"Configuracion guardada satisfactoriamente\",\n\t        \"data\": {\n\t            \"id_usuario_rest_pagos\": \"5\",\n\t            \"direccion\": \"Esta es la direccion de la conf 4\",\n\t            \"telefono\": \"1111111\",\n\t            \"ciudad\": \"05021000\",\n\t            \"nombre\": \"Nombre de conf 4\",\n\t            \"documento\": \"222222\",\n\t            \"tipo_documento\": \"NIT\",\n\t            \"tipo_persona\": \"J\",\n\t            \"recogida_automatica\": \"false\",\n\t            \"tag\": \"Bodega de Daniel\",\n\t            \"updated_at\": \"2018-09-14 00:17:50\",\n\t            \"created_at\": \"2018-09-14 00:17:50\"m,\n\t            \"asume_comercio\":true\n\t        }\n\t    }\n    \t\n    }"
					},
					"response": []
				},
				{
					"name": "Listar Configuración de Usuario.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "48b3bf3511bdf3e23c0ee5833e7171b1118466e0",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic {{API_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/configuracion/usuario",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"configuracion",
								"usuario"
							]
						},
						"description": "Si usted necesita conocer todas las configuraciones que ha guardado en la plataforma de ePayco, puede hacer uso de este endpoint como se indica a continuación.\n\n## ¿Cómo obtener las configuraciones guardadas?\n\n> Para obtener una lista de todas las configuraciones que tiene guardadas en la plataforma debe realizar la siguiente solicitud.\n\n```curl\ncurl --location --request POST '{{url}}/api/configuracion/usuario' \\ \n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic BASE64(api_token)' \\\n```\n\n> Respuesta de la solicitud\n\nEjemplo de Respuesta:\n\n    {\n\t\t\"status\": \"true\",\n\t\t\"code\": \"200\",\n\t\t\"message\": \"\",\n\t\t\"data\": [\n\t\t    {\n\t\t        \"id\": 1,\n\t\t        \"id_usuario_rest_pagos\": \"5\",\n\t\t        \"direccion\": \"esta es una direcion editada por postman\",\n\t\t        \"telefono\": \"123456789\",\n\t\t        \"ciudad\": \"05001000\",\n\t\t        \"nombre\": \"Juan David Marulanda\",\n\t\t        \"documento\": \"15371377\",\n\t\t        \"tipo_documento\": \"CC\",\n\t\t        \"tipo_persona\": \"N\",\n\t\t        \"recogida_automatica\": 0,\n\t\t        \"dias\": \"T\",\n\t\t        \"segmento\": \"AM\",\n\t\t        \"created_at\": null,\n\t\t        \"updated_at\": \"2018-09-12 16:33:00\",\n\t\t        \"tag\": \"Config Juan\"\n    }, ..."
					},
					"response": []
				},
				{
					"name": "Listar Configuración de Usuario por ID",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "99e4a1ee90eb7f6310b4807dd260c80d48efb3b5",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/configuracion/usuario/{id_configuracion}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"configuracion",
								"usuario",
								"{id_configuracion}"
							]
						},
						"description": "En este endpoint usted podrá listar la configuracion deseada guardada por usted. Al final de la URL usted debe indicar el **id_configuracion** de la configuración que desea consultar.\n\n## ¿Cómo obtener el detalle de una configuración guardada?\n\n> Para obtener el detalle de una configuración en específico puede realizar la siguiente solicitud enviando en la url el **id_configuracion** que desea consultar.\n\n\n```curl\ncurl --location --request GET '{{url}}/api/configuracion/usuario/{id_configuracion}' \\ \n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic BASE64(api_token)' \\\n```\n \n## Ejemplo de Respuesta:\n\n    {\n\t    \"status\": \"true\",\n\t    \"code\": \"200\",\n\t    \"message\": \"Configuración consultada correctamente\",\n\t    \"data\": {\n\t        \"id\": 87,\n\t        \"id_usuario_rest_pagos\": \"9375\",\n\t        \"direccion\": \"Esta es la direccion de la conf Manizales\",\n\t        \"telefono\": \"1111111\",\n\t        \"ciudad\": \"17001000\",\n\t        \"nombre\": \"Nombre de conf Manizales\",\n\t        \"documento\": \"222222\",\n\t        \"tipo_documento\": \"NIT\",\n\t        \"tipo_persona\": \"J\",\n\t        \"recogida_automatica\": 0,\n\t        \"dias\": \"T\",\n\t        \"segmento\": \"AM\",\n\t        \"created_at\": \"2019-08-15 20:02:51\",\n\t        \"updated_at\": \"2019-08-15 20:02:51\",\n\t        \"tag\": \"manizales\",\n\t        \"asume_comercio\": 0\n\t    }\n\t}"
					},
					"response": []
				},
				{
					"name": "Editar Configuracion Usuario",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "caf18c87139e3e5ceae369073d0655dfb700608b",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic {{API_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id_configuracion\":\"4\",\n\t\"ciudad\": \"05001000\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/configuracion/editar",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"configuracion",
								"editar"
							]
						},
						"description": "Si desea actualizar la información de una configuración ya guardadad por usted, con este endpoint podrá realizar esta acción.\n\n## ¿Cómo editar una configuración ya guardada?\n\n>Para editar una configuración ya guardada, debe realizar la solicitud enviando los siguientes parámetros como obligatorios.\n\n|Parámetro| Tipo (longitud)|Descripción|\n|---------|----------|--------------------------------|\n|**id_configuracion**| String| Este es el id de la configuracion que usted desea editar.|\n\n> Parámetro a modificar\n\n|Parámetro| Tipo (longitud)|Descripción|\n|---------|----------|--------------------------------|\n|**direccion**|String|Dirección en la que se realizarán las recogidas y aparecerá en los documentos como dirección del remitente.|\n|**telefono**|String| Teléfono aparecerá en los documentos como teléfono del remitente.|\n|**ciudad**|String|Código dane, para obtener este código consultar el endpoint [ciudades](https://api.epayco.co/#2aca9dfd-8b31-49e3-b290-6669619fd404), además será la ciudad de origen para Cotizaciones, y será la ciudad que aparecerá como ciudad del remitente.|\n|**nombre**|String| Será el nombre que aparecerá en los documentos como nombre del remitente.|\n|**documento**|String| Es el número de documento de identificación que aparecerá en los documentos como documento del remitente.|\n|**tipo_documento**|String |Es el tipo de documento de identificación que aparecerá en los documentos como tipo documento del remitente (\"CC\" - \"NIT\").|\n|**tipo_persona**|String |Es el tipo de documento de identificación que aparecerá en los documentos como tipo documento del remitente (\"N\"-\"J\").|\n|**recogida_automatica**| Booleano (trueo false\")| Es el parámetro que activará el servicio de recogida automática, este servicio generará automaticamente una recogida a la direccion registrada en la configuración y será programado para el dia siguiente a la fecha de creación de la guia y en el horario registrado en esta configuración.|\n|**dias**|String \"T\"| Esta variable debe ir siempre en este valor solo es requerida si el campo *\"recogida_automatica\"* esta en \"true\".|\n|**segmento**|String \"AM\" - \"PM\"| Esta variable debe ir siemprey cuando el campo *\"recogida_automatica\"* esté en \"true\", esta variable define el horario en el que se recoerá la mercancia AM = de 9am a 12 m -  PM= de 2 pm a 5 pm.|\n|**tag**|String | Será el nombre de la configuracion.|\n|**asume_comercio**|Booleano | Con esta variable usted podrá identificar si el comercio asume el envío, en caso de no ser enviada se setea por defecto en **false**.|\n\n\n> Solicitud a realizar\n\n```curl\ncurl --location --request  POST'{{url}}/api/configuracion/editar' \\ \n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic BASE64(api_token)' \\\n```\n## Ejemplo de Respuesta\n\n    {\n\t\t\"status\": \"true\",\n\t\t\"code\": \"200\",\n\t\t\"message\": \"\",\n\t\t\"data\": [\n\t\t    {\n\t\t        \"id\": 1,\n\t\t        \"id_usuario_rest_pagos\": \"5\",\n\t\t        \"direccion\": \"esta es una direcion editada por postman\",\n\t\t        \"telefono\": \"123456789\",\n\t\t        \"ciudad\": \"05001000\",\n\t\t        \"nombre\": \"Juan David Marulanda\",\n\t\t        \"documento\": \"15371377\",\n\t\t        \"tipo_documento\": \"CC\",\n\t\t        \"tipo_persona\": \"N\",\n\t\t        \"recogida_automatica\": 0,\n\t\t        \"dias\": \"T\",\n\t\t        \"segmento\": \"M\",\n\t\t        \"created_at\": null,\n\t\t        \"updated_at\": \"2018-09-12 16:33:00\",\n\t\t        \"tag\": \"Config Juan\",\n\t\t        \"asume_comercio\": false\n    }, ..."
					},
					"response": []
				},
				{
					"name": "Cotizar General",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "48b3bf3511bdf3e23c0ee5833e7171b1118466e0",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n  \"id_configuracion\":\"87\",\n  \"ciudad_destino\": \"11001000\",\n  \"valor_mercancia\": \"119990\",\n  \"fecha_guia\": \"03/09/2019\",\n  \"tipo_envio\": \"1\",\n  \"unidad\":{\n  \t\"cantidad_unidades\":1,\n    \"peso_real\": 30,\n    \"alto\": 0,\n    \"largo\":0,\n    \"ancho\": 0\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/general/cotizacion?XDEBUG_SESSION_START=11557",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"general",
								"cotizacion"
							],
							"query": [
								{
									"key": "XDEBUG_SESSION_START",
									"value": "11557"
								}
							]
						},
						"description": "En este endpoint usted podrá crear una cotización con todos los operadores integrados.\n\n## ¿Cómo crear una cotización?\n\n>Para crear una cotización con todos los operadores integrados debe realizar la solicitud enviando los siguientes parametros como obligatorios.\n\n|Parámetro | Tipo (longitud)|Descripción|\n|----------|---------|-----------------------------------|\n|**id_configuracion**|String|ID de la configuración de remitente que desea usar.|\n|**ciudad_destino**| String|Código dane de la ciudad a donde desea realizar su envio, este código lo puede obtener consultando [ciudades](https://api.epayco.co/#2aca9dfd-8b31-49e3-b290-6669619fd404).|\n|**valor_mercancia**|String |El valor de la mercancía que desea enviar|.\n|**fecha_guia**|String|Fecha aproximada en la que desea realizar su envio (dd/mm/aaaa).|\n|**tipo_envio**|String| Será el tipo de envio a cotizar (Paquetería=1, Mensajería=2).|\n|**unidad**| Objeto| Es el objeto que contiene los parametros de la unidad a cotizar.|\n|**cantidad_unidades**|String|Es la cantidad de unidades que desea enviar, recuerde que el valor devuelto es un valor POR UNIDAD.|\n|**peso_real**|String|Valor en KG de el peso de la mercancía a enviar *(redondear a la unidad más cercana)*.|\n|**alto**|String|Es la medida en CM de el alto de la mercancía.|\n|**largo**|String|Es la medida en CM de el largo de la mercancía.|\n|**ancho**|String|Es la medida en CM de el ancho de la mercancía.|\n\n> Solicitud a realizar\n```curl\ncurl --location --request POST '{{url}}//api/general/cotizacion?XDEBUG_SESSION_START=11557' \\ \n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic BASE64(PUBLIC_KEY)' \\\n--data-raw '{\n     \"id_configuracion\":\"XX\",\n     \"ciudad_destino\": \"codigo_dane\",\n     \"valor_mercancia\": \"XXXXXX\",\n     \"fecha_guia\": \"dd/mm/aaaa\",\n     \"tipo_envio\": \"1\",\n     \"unidad\":{\n         \"cantidad_unidades\":XX,\n         \"peso_real\": XX,\n         \"alto\": XX,\n         \"largo\":XX,\n         \"ancho\": XX\n       }\n  }'\n```\n\nEjemplo de Respuesta:\n\n    {\n\t    \"status\": \"true\",\n\t    \"code\": \"200\",\n\t    \"message\": \"\",\n\t    \"data\": {\n\t        \"tcc\": {\n\t            \"valor\": 12850.1,\n\t            \"operador\": \"tcc\",\n\t            \"flete\": 11787.5,\n\t            \"manejo\": 1062.6,\n\t            \"id\": 191,\n\t            \"fecha_registro\": \"2018-09-29\"\n\t        }\n\t    }\n\t}"
					},
					"response": []
				},
				{
					"name": "Grabar Guia",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "48b3bf3511bdf3e23c0ee5833e7171b1118466e0",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic {{API_KEY}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\t\n\t\"id_configuracion\":\"87\",\n\t\"tipo_envio\":\"1\",\n\t\"fecha_guia\":\"2019-08-20\",\n\t\"razon_social_destinatario\":\"Paola Castellanos\",\n\t\"tipo_identificacion_destinatario\":\"CC\",\n\t\"identificacion_destinatario\":\"\",\n\t\"primer_nombre_destinatario\":\"Paola\",\n\t\"segundo_nombre_destinatario\":\"\",\n\t\"primer_apellido_destinatario\":\"Castellanos\",\n\t\"segundo_apellido_destinatario\":\"\",\n\t\"telefono_destinatario\":\"3142541024\",\n\t\"direccion_destinatario\":\"Carrera 67 # 100 - 20 piso 2\",\n\t\"ciudad_destinatario\":\"11001000\",\n\t\"cantidad_unidades\":\"1\",\n\t\"peso_volumen\":\"2\",\n\t\"valor_mercancia\":\"1\",\n\t\"kilos_reales\":\"2\",\n\t\"observaciones\":\"este es un servicio de prueba generado por ePayco\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/tcc/guia",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"tcc",
								"guia"
							]
						},
						"description": "En este endpoint usted podrá crear una guía con el operador TCC.\n\n## ¿Cómo crear una guía?\n\n> Para crear una guía nueve debe realizar la solicitud como se indica enviando los siguientes parámetros como obligatorios\n\n|Parámetro|Tipo (longitud)|Descripción|\n|----------|-----------|----------------------------------|\n|**id_configuracion**|String|ID de la configuración de remitente que desea usar.|\n|**tipo_envio**| String| Será el tipo de envio a crear (Paquetería=1, Mensajería=2).|\n|**fecha_guia**|String (YYYY-mm-dd)|Fecha en la que desea realizar su envío, *debe ser igual o mayo a la actual y no puede ser un día no hábil (sábados,domingos y festivos).|\n|**razon_social_destinatario**|String|Es la razón social del destinatario.|\n|**tipo_identificacion_destinatario**|String (\"CC-NIT\")|Es el tipo de identificación del destinatario.|\n|**identificacion_destinatario**|String|Es la identificación del destinatario, en caso de desconocerla enviar el campo vacio (\"CC-NIT\").|\n|**primer_nombre_destinatario**|String| Es el primer nombre del destinatario, en caso de desconocerlo enviar el campo vacío.|\n|**segundo_nombre_destinatario**|String| Es el segundo nombre del destinatario, en caso de desconocerlo enviar el campo vacío.|\n|**primer_apellido_destinatario**|String|Es el primer apellido del destinatario, en caso de desconocerlo enviar el campo vacío.|\n|**segundo_apellido_destinatario**|String|Es el segundo apellido del destinatario, en caso de desconocerlo enviar el campo vacío.|\n|**telefono_destinatario**|String|Es el teléfono del destinatario, en caso de desconocerlo enviar el campo vacío.|\n|**direccion_destinatario**|String|Es la dirección del destinatario.|\n|**ciudad_destinatario**|String|Código dane de la ciudad a donde desea realizar su envio, este código lo puede obtener en el siguiente endpoint [ciudades](https://api.epayco.co/#2aca9dfd-8b31-49e3-b290-6669619fd404).|\n|**cantidad_unidades**|String|Es la cantidad de unidades que desea enviar, recuerde que el valor devuelto es un valor POR UNIDAD.|\n|**kilos_reales**|String|Valor en KG de el peso de la mercancia a enviar *(redondear a la unidad más cercana)*|\n|**peso_volumen**|String| Se calcula multiplicando alto * ancho * largo / 2500.|\n|**valor_mercancia**|String|El valor de la mercancía que desea enviar|\n|**largo**|String|Es la medida en CM de el largo de la mercancia.|\n|**ancho**|String| Es la medida en CM de el ancho de la mercancia.|\n|**alto**|String| Es la medida en CM de el ancho de la mercancia.|\n|**ref_payco**:|Integer | Es la referencia ePayco de la transacción asociada a la remesa.|\n\n>Solicitud a realizar\n\n```curl\ncurl --location --request POST '{{url}}/api/tcc/guia' \\ \n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic BASE64(api_token)' \\\n--data-raw '{\n    \"id_configuracion\":\"XX\",\n    \"tipo_envio\":\"1\",\n    \"fecha_guia\":\"YYYY-MM-DD\",\n    \"razon_social_destinatario\":\"Razón Social\",\n    \"tipo_identificacion_destinatario\":\"XX\",\n    \"identificacion_destinatario\":\"\",\n    \"primer_nombre_destinatario\":\"Primer Nombre\",\n    \"segundo_nombre_destinatario\":\"\",\n    \"primer_apellido_destinatario\":\"Primer Apellido\",\n    \"segundo_apellido_destinatario\":\"\",\n    \"telefono_destinatario\":\"XXXXXXXXX\",\n    \"direccion_destinatario\":\"dirección\",\n    \"ciudad_destinatario\":\"código dane\",\n    \"cantidad_unidades\":\"XX\",\n    \"peso_volumen\":\"XX\",\n    \"valor_mercancia\":\"XXXX\",\n    \"kilos_reales\":\"XX\",\n    \"observaciones\":\"este es un servicio de prueba generado por ePayco\"\n    }\n}'\n```\n## Ejemplo de Respuesta:\n\n  >Cuando NO está activo el servicio de recogida automática:\n    \n      {\n\t    \"status\": \"true\",\n\t    \"code\": \"200\",\n\t    \"message\": \"\",\n\t    \"data\": {\n\t        \"guia\": \"424767787\",\n\t        \"url_relacion_envio\": \"http://newpre.aplicaciones.tcc.com.co:8006/TCCDocumentosWeb/RelacionEnvioServlet?formato=C&idRemesas=9569861-PQ&despacho=null&fuente=CLIENTETCC608W3A61CJ&TipoNaturaleza=N&PrimerNombre=null&SegundoNombre=null&PrimerApellido=null&SegundoApellido=null&NumeroIdentificacion=15371377\",\n\t        \"url_rotulos\": \"http://newpre.aplicaciones.tcc.com.co:8006/TCCDocumentosWeb/RotuloServletService?tipo=REMESAS&ids=9569861-TEMPORAL,&modelos=1,1,1-&naturaleza=N&tipoIdentificacion=CC&numeroIdentificacion=15371377\",\n\t        \"url_traking\": \"https://www.tcc.com.co/rastreo?tipo=RE&documento=424767787\",\n\t        \"respuesta\": 0,\n\t        \"mensaje\": \"Se ha grabado con exito la remesa y la unidad (0:4:984) --> 424767787\",\n\t        \"id_guia\": 195,\n\t        \"valor\": 15295,\n\t        \"recogida\": \"No tiene activo el servicio de recogida automatica\"\n\t    }\n\t}\n\t\n\t**Cuando SI está activo el servicio de recogida automática:\n\t{\n\t    \"status\": \"true\",\n\t    \"code\": \"200\",\n\t    \"message\": \"\",\n\t    \"data\": {\n\t        \"guia\": \"424767638\",\n\t        \"url_relacion_envio\": \"http://newpre.aplicaciones.tcc.com.co:8006/TCCDocumentosWeb/RelacionEnvioServlet?formato=C&idRemesas=9569644-PQ&despacho=null&fuente=CLIENTETCC608W3A61CJ&TipoNaturaleza=N&PrimerNombre=null&SegundoNombre=null&PrimerApellido=null&SegundoApellido=null&NumeroIdentificacion=123456789\",\n\t        \"url_rotulos\": \"http://newpre.aplicaciones.tcc.com.co:8006/TCCDocumentosWeb/RotuloServletService?tipo=REMESAS&ids=9569644-TEMPORAL,&modelos=1,1,1-&naturaleza=N&tipoIdentificacion=CC&numeroIdentificacion=123456789\",\n\t         \"url_traking\": \"https://www.tcc.com.co/rastreo?tipo=RE&documento=424767638\",\n\t        \"respuesta\": 0,\n\t        \"mensaje\": \"Se ha grabado con exito la remesa y la unidad (0:5:531) --> 424767638\",\n\t        \"id_guia\": 177,\n\t        \"valor\": 74646.5,\n\t        \"recogida\": {\n\t            \"id\": \"100000136\",\n\t            \"fecha\": \"2018-09-18 00:00:00\",\n\t            \"hora_incial\": \"14:00:00\",\n\t            \"hora_final\": \"17:00:00\",\n\t            \"id_operacion\": 42\n\t        }\n\t    }\n\t}\n"
					},
					"response": []
				},
				{
					"name": "Cotizar",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "48b3bf3511bdf3e23c0ee5833e7171b1118466e0",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic {{API_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n  \"id_configuracion\":\"87\",\n  \"ciudad_destino\": \"11001000\",\n  \"valor_mercancia\": \"10000\",\n  \"fecha_guia\": \"08/16/2019\",\n  \"tipo_envio\": \"1\",\n  \"unidad\":{\n  \t\"cantidad_unidades\":1,\n    \"peso_real\": 1,\n    \"alto\": 0,\n    \"largo\":0,\n    \"ancho\": 0\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/tcc/cotizacion",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"tcc",
								"cotizacion"
							]
						},
						"description": "\nEn este endpoint usted podrá crear una cotización con el operador TCC.\n\n## ¿Cómo crear una cotización?\n\n>Para crear una cotización con el operador TCC ustede debe realizar la solicitud enviando  los siguientes parámetros como obligatorios.\n\n|Parámetro| Tipo (longitud) | Descripción|\n|----------|---------|----------------------------------------|\n|**id_configuracion**| String|ID de la configuración de remitente que desea usar.|\n|**ciudad_destino**| String| Código dane de la ciudad a donde desea realizar su envío, este código puede obtenerlo en el endpoint [ciudades](https://api.epayco.co/#2aca9dfd-8b31-49e3-b290-6669619fd404).|\n|**valor_mercancia**|String|El valor de la mercancía que desea enviar.|\n|**fecha_guia**|String|Fecha aproximada en la que desea realizar su envio (dd/mm/aaaa).|\n|**tipo_envio**|String| Será el tipo de envio a cotizar (Paquetería=1, Mensajería=2).|\n|**unidad**|Objeto| Es el objeto que contiene los parametros de la unidad a cotizar.|\n|**cantidad_unidades**|String |Es la cantidad de unidades que desea enviar, recuerde que el valor devuelto es un valor POR UNIDAD.|\n|**peso_real**|String|Valor en KG de el peso de la mercancía a enviar *(redondear a la unidad más cercana)*.|\n|**alto**| String|Es la medida en CM de el alto de la mercancía.|\n|**largo**|String|Es la medida en CM de el largo de la mercancia.|\n|**ancho**|String|Es la medida en CM de el ancho de la mercancía|\n\n> Solicitud a realizar\n\n```curl\ncurl --location --request GET '{{url}}/api/tcc/cotizacion' \\ \n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic BASE64(api_token)' \\\n--data-raw '{\n    \"id_configuracion\":\"XX\",\n    \"ciudad_destino\": \"código_dane\",\n    \"valor_mercancia\": \"XXXXXXX\",\n    \"fecha_guia\": \"dd/mm/aaaa\",\n    \"tipo_envio\": \"1\",\n    \"unidad\":{\n        \"cantidad_unidades\":XX,\n        \"peso_real\": XX,\n        \"alto\": XX,\n        \"largo\":XX,\n        \"ancho\": XX\n     }\n}'\n```\n\n## Ejemplo de estructura del dato:\n\n    {\n\n\t  \"id_configuracion\":\"4\",\n\t  \"ciudad_destino\": \"05001000\",\n\t  \"valor_mercancia\": \"154000\",\n\t  \"fecha_guia\": \"30/08/2018\",\n\t  \"tipo_envio\": \"2\",\n\t  \"unidad\":{\n\t  \t\"cantidad_unidades\":1,\n\t    \"peso_real\": 100,\n\t    \"alto\": 0,\n\t    \"largo\":0,\n\t    \"ancho\": 0\n\t  }\n    }\n\n\n## Ejemplo de Respuesta:\n\n    {\n\t    \"status\": \"true\",\n\t    \"code\": \"200\",\n\t    \"message\": \"\",\n\t    \"data\": {\n\t        \"valor\": 39249.5,\n\t        \"operador\": \"tcc\",\n\t        \"flete\": 35707.5,\n\t        \"manejo\": 3542,\n\t        \"id\": 153,\n\t        \"fecha_registro\": \"2018-09-14\"\n\t    }\n    }"
					},
					"response": []
				},
				{
					"name": "Grabar Recogida",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "cbbd12784070e8ebcf6c21d15588ada2d04b9a85",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic {{API_TOKEN}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n   \"id_guia\":\"152\",\n   \"id_configuracion\":\"2\",\n   \"fecha_servicio\":\"2019-08-13\",\n   \"hora_inicial_servicio\":\"09:00:00\",\n   \"hora_final_servicio\":\"12:00:00\",\n   \"observaciones_servicio\":\"ESTOESUNARECOGIDADEPRUEBAS\"\n\n}"
						},
						"url": {
							"raw": "{{url}}/api/tcc/recogida",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"tcc",
								"recogida"
							]
						},
						"description": "En este endpoint usted podrá crear una solicitud de recogida con el operador TCC.\n\n## Importante\n\nEste servicio solo podrá usarlo siempre y cuando no tenga el servicio de recogida automática activo.\n\n## ¿Cómo crear una solicitud de recogida?\n\n> Para crear una solicitud de recogida usted debe enviar los siguientes parámetros como obligatorios.\n\n|Parámetro|Tipo (longitud) | Descripción|\n|----------|----------|---------------------------------|\n|**id_guia**|String|ID de la guia de la cual se desea solicitar recogida.|\n|**id_configuracion**|String|ID de la configuración de remitente que desea usar.|\n|**fecha_servicio**|String| Será la fecha en la que desea que le recojan el servicio, si ud elije para el mismo dia recuerde que debe solicitar el servicio en horas de la mañana para ser recogido en horas de la tarde, si lo está solicitando en la tard por favor solicitelo minimo para el día siguiente(*debe ser igual o mayo a la actual y no puede ser un día no hábil (domingos y festivos)*) Formato YYYY-mm-dd.|\n|**hora_inicial_servicio**|String| Hora de inicio de la solicitud de recogida (*\"hh:mm:ss\"*).|\n|**hora_final_servicio**|String|Hora final de la solicitud de recogida (*\"hh:mm:ss\"*).|\n|**observaciones_servicio**|String|Datos adicionales u obrservaciones que desee agregar.|\n\n> Solicitud a realizar\n\n```curl\ncurl --location --request GET '{{url}}/api/tcc/cotizacion' \\ \n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic BASE64(api_token)' \\\n--data-raw '{\n    {\t\n\t\"id_guia\":\"XX\",\n\t\"id_configuracion\":\"XXX\",\n\t\"fecha_servicio\":\"YYYY-MM-DD\",\n\t\"hora_inicial_servicio\":\"H:i:s\",\n\t\"hora_final_servicio\":\"H:i:s\",\n\t\"observaciones_servicio\":\"ESTOESUNARECOGIDADEPRUEBAS\"\n    }\n}'\n```\n\n## Ejemplo de estructura del dato:\n\n    {\t\n\t   \"id_guia\":\"12\",\n\t   \"id_configuracion\":\"2\",\n\t   \"fecha_servicio\":\"2018-09-15\",\n\t   \"hora_inicial_servicio\":\"09:00:00\",\n\t   \"hora_final_servicio\":\"12:00:00\",\n\t   \"observaciones_servicio\":\"ESTOESUNARECOGIDADEPRUEBAS\"\n    }\n\n## Ejemplo de Respuesta:\n\n   {\n\t    \"status\": \"true\",\n\t    \"code\": \"200\",\n\t    \"message\": \"\",\n\t    \"data\": {\n\t        \"id\": \"100000137\",\n\t        \"fecha\": \"2018-09-18 00:00:00\",\n\t        \"hora_incial\": \"09:00:00\",\n\t        \"hora_final\": \"12:00:00\",\n\t        \"id_operacion\": 43\n\t    }\n\t}"
					},
					"response": []
				},
				{
					"name": "Lista Guias",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "48b3bf3511bdf3e23c0ee5833e7171b1118466e0",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic {{API_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/lista/guias",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"lista",
								"guias"
							]
						},
						"description": "En este endpoint usted podrá listar todos los servicios generados en la Rest Logística de ePayco con relación a las guías generadas.\n\n## ¿Cómo consultar la lista de guías?\n\n> Para consultar la lista de guías generadas en la plataforma debe hacer la solicitud que se indica a continuación.\n\n```curl\ncurl --location --request POST '{{url}}/api/lista/guias' \\ \n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic BASE64(api_token)' \\\n``` \n\n## Ejemplo de respuesta\n\n    {\n\t    \"status\": \"true\",\n\t    \"code\": \"200\",\n\t    \"message\": \"\",\n\t    \"data\": [\n\t        {\n\t            \"cotizacion\": {\n\t                \"operador\": \"tcc\",\n\t                \"valor\": 56879,\n\t                \"flete\": 49887,\n\t                \"manejo\": 6992,\n\t                \"peso\": \"1\",\n\t                \"tipo_envio\": 1,\n\t                \"numero_unidades\": \"2\",\n\t                \"id_ciudad_origen\": \"05021000\",\n\t                \"id_ciudad_destino\": \"05001000\",\n\t                \"valor_mercancia\": \"150000\"\n\t            },\n\t            \"guia\": {\n\t                \"numero_guia\": \"230035240\",\n\t                \"fecha_creacion\": \"2018-09-12 02:40:14\",\n\t                \"razon_social_remitente\": \"Juan David Marulanda\",\n\t                \"naturaleza_remitente\": \"N\",\n\t                \"tipo_identificacion_remitente\": \"CC\",\n\t                \"tipo_identificacion_destinatario\": \"CC\",\n\t                \"tipo_destinatario\": \"\",\n\t                \"primer_nombre_destinatario\": \"PRUEBA DE SERVICIO WEB\",\n\t                \"segundo_nombre_destinatario\": \"\",\n\t                \"primer_apellido_destinatario\": \"\",\n\t                \"segundo_apellido_destinatario\": \"\",\n\t                \"direccion_destinatario\": \"la casa de danny\",\n\t                \"observaciones\": \"\",\n\t                \"url_rotulos\": \"\",\n\t                \"url_envio\": \"\"\n\t            },\n\t            \"recogida\": {\n\t                \"nombre_solicitante\": \"Juan David Marulanda\",\n\t                \"nombre_remitente\": \"Juan David Marulanda\",\n\t                \"identificacion_remitente\": \"15371377\",\n\t                \"tipo_documento_remitente\": \"1\",\n\t                \"fecha_recogida\": \"2018-09-15 00:00:00\",\n\t                \"hora_inicial_recogia\": \"2009-00-00 00:00:00\",\n\t                \"hora_final_recogida\": \"2012-00-00 00:00:00\",\n\t                \"direccion_recogida\": \"Calle falsa 123\"\n\t            }\n        },..."
					},
					"response": []
				}
			],
			"description": "En este apartado podrá encontrar Toda la información necesaria para consumir de la Rest eLogística TCC de ePayco. Recuerde que debe ser un usuario registrado de ePayco para acceder a este servicio, en caso de no serlo lo invitamos a [registrarse](https://dashboard.epayco.co/login#registro).\n\n> Para acceder a estos servicios, tenemos a su disposición servicios de testing y producción como tal, cuyas url se indican a continuación.\n\n|API| Url ({{url}})|\n|----------|---------------------------------|\n|Producción| https://secure.payco.co/logistica|\n|Testing| https://logistica.epayco.io|"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"console.log(pm.variables);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Test EndPoints\", function () {",
					"    pm.response.to.have.status('OK');",
					"});"
				]
			}
		}
	]
}